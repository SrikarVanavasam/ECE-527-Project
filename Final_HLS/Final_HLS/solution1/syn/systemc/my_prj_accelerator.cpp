// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "my_prj_accelerator.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic my_prj_accelerator::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic my_prj_accelerator::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> my_prj_accelerator::ap_ST_fsm_state1 = "1";
const sc_lv<6> my_prj_accelerator::ap_ST_fsm_state2 = "10";
const sc_lv<6> my_prj_accelerator::ap_ST_fsm_state3 = "100";
const sc_lv<6> my_prj_accelerator::ap_ST_fsm_state4 = "1000";
const sc_lv<6> my_prj_accelerator::ap_ST_fsm_state5 = "10000";
const sc_lv<6> my_prj_accelerator::ap_ST_fsm_state6 = "100000";
const sc_lv<32> my_prj_accelerator::ap_const_lv32_0 = "00000000000000000000000000000000";
const int my_prj_accelerator::C_S_AXI_DATA_WIDTH = "100000";
const int my_prj_accelerator::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int my_prj_accelerator::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int my_prj_accelerator::C_M_AXI_GMEM_CACHE_VALUE = "11";
const int my_prj_accelerator::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> my_prj_accelerator::ap_const_lv32_4 = "100";
const sc_lv<32> my_prj_accelerator::ap_const_lv32_3 = "11";
const sc_lv<32> my_prj_accelerator::ap_const_lv32_5 = "101";
const sc_lv<32> my_prj_accelerator::ap_const_lv32_1 = "1";
const sc_lv<32> my_prj_accelerator::ap_const_lv32_2 = "10";
const sc_lv<32> my_prj_accelerator::ap_const_lv32_1F = "11111";
const sc_lv<64> my_prj_accelerator::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> my_prj_accelerator::ap_const_lv1_0 = "0";
const sc_lv<2> my_prj_accelerator::ap_const_lv2_0 = "00";
const bool my_prj_accelerator::ap_const_boolean_1 = true;

my_prj_accelerator::my_prj_accelerator(sc_module_name name) : sc_module(name), mVcdFile(0) {
    my_prj_accelerator_control_s_axi_U = new my_prj_accelerator_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("my_prj_accelerator_control_s_axi_U");
    my_prj_accelerator_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    my_prj_accelerator_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    my_prj_accelerator_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    my_prj_accelerator_control_s_axi_U->WVALID(s_axi_control_WVALID);
    my_prj_accelerator_control_s_axi_U->WREADY(s_axi_control_WREADY);
    my_prj_accelerator_control_s_axi_U->WDATA(s_axi_control_WDATA);
    my_prj_accelerator_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    my_prj_accelerator_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    my_prj_accelerator_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    my_prj_accelerator_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    my_prj_accelerator_control_s_axi_U->RVALID(s_axi_control_RVALID);
    my_prj_accelerator_control_s_axi_U->RREADY(s_axi_control_RREADY);
    my_prj_accelerator_control_s_axi_U->RDATA(s_axi_control_RDATA);
    my_prj_accelerator_control_s_axi_U->RRESP(s_axi_control_RRESP);
    my_prj_accelerator_control_s_axi_U->BVALID(s_axi_control_BVALID);
    my_prj_accelerator_control_s_axi_U->BREADY(s_axi_control_BREADY);
    my_prj_accelerator_control_s_axi_U->BRESP(s_axi_control_BRESP);
    my_prj_accelerator_control_s_axi_U->ACLK(ap_clk);
    my_prj_accelerator_control_s_axi_U->ARESET(ap_rst_n_inv);
    my_prj_accelerator_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    my_prj_accelerator_control_s_axi_U->ap_start(ap_start);
    my_prj_accelerator_control_s_axi_U->interrupt(interrupt);
    my_prj_accelerator_control_s_axi_U->ap_ready(ap_ready);
    my_prj_accelerator_control_s_axi_U->ap_done(ap_done);
    my_prj_accelerator_control_s_axi_U->ap_idle(ap_idle);
    my_prj_accelerator_control_s_axi_U->x(x);
    my_prj_accelerator_control_s_axi_U->score(score);
    my_prj_accelerator_gmem_m_axi_U = new my_prj_accelerator_gmem_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("my_prj_accelerator_gmem_m_axi_U");
    my_prj_accelerator_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    my_prj_accelerator_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    my_prj_accelerator_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    my_prj_accelerator_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    my_prj_accelerator_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    my_prj_accelerator_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    my_prj_accelerator_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    my_prj_accelerator_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    my_prj_accelerator_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    my_prj_accelerator_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    my_prj_accelerator_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    my_prj_accelerator_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    my_prj_accelerator_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    my_prj_accelerator_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    my_prj_accelerator_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    my_prj_accelerator_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    my_prj_accelerator_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    my_prj_accelerator_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    my_prj_accelerator_gmem_m_axi_U->WID(m_axi_gmem_WID);
    my_prj_accelerator_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    my_prj_accelerator_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    my_prj_accelerator_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    my_prj_accelerator_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    my_prj_accelerator_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    my_prj_accelerator_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    my_prj_accelerator_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    my_prj_accelerator_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    my_prj_accelerator_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    my_prj_accelerator_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    my_prj_accelerator_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    my_prj_accelerator_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    my_prj_accelerator_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    my_prj_accelerator_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    my_prj_accelerator_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    my_prj_accelerator_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    my_prj_accelerator_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    my_prj_accelerator_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    my_prj_accelerator_gmem_m_axi_U->RID(m_axi_gmem_RID);
    my_prj_accelerator_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    my_prj_accelerator_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    my_prj_accelerator_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    my_prj_accelerator_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    my_prj_accelerator_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    my_prj_accelerator_gmem_m_axi_U->BID(m_axi_gmem_BID);
    my_prj_accelerator_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    my_prj_accelerator_gmem_m_axi_U->ACLK(ap_clk);
    my_prj_accelerator_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    my_prj_accelerator_gmem_m_axi_U->ACLK_EN(ap_var_for_const0);
    my_prj_accelerator_gmem_m_axi_U->I_ARVALID(gmem_ARVALID);
    my_prj_accelerator_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    my_prj_accelerator_gmem_m_axi_U->I_ARADDR(grp_copy_input_fu_88_m_axi_x_in_ARADDR);
    my_prj_accelerator_gmem_m_axi_U->I_ARID(grp_copy_input_fu_88_m_axi_x_in_ARID);
    my_prj_accelerator_gmem_m_axi_U->I_ARLEN(grp_copy_input_fu_88_m_axi_x_in_ARLEN);
    my_prj_accelerator_gmem_m_axi_U->I_ARSIZE(grp_copy_input_fu_88_m_axi_x_in_ARSIZE);
    my_prj_accelerator_gmem_m_axi_U->I_ARLOCK(grp_copy_input_fu_88_m_axi_x_in_ARLOCK);
    my_prj_accelerator_gmem_m_axi_U->I_ARCACHE(grp_copy_input_fu_88_m_axi_x_in_ARCACHE);
    my_prj_accelerator_gmem_m_axi_U->I_ARQOS(grp_copy_input_fu_88_m_axi_x_in_ARQOS);
    my_prj_accelerator_gmem_m_axi_U->I_ARPROT(grp_copy_input_fu_88_m_axi_x_in_ARPROT);
    my_prj_accelerator_gmem_m_axi_U->I_ARUSER(grp_copy_input_fu_88_m_axi_x_in_ARUSER);
    my_prj_accelerator_gmem_m_axi_U->I_ARBURST(grp_copy_input_fu_88_m_axi_x_in_ARBURST);
    my_prj_accelerator_gmem_m_axi_U->I_ARREGION(grp_copy_input_fu_88_m_axi_x_in_ARREGION);
    my_prj_accelerator_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    my_prj_accelerator_gmem_m_axi_U->I_RREADY(gmem_RREADY);
    my_prj_accelerator_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    my_prj_accelerator_gmem_m_axi_U->I_RID(gmem_RID);
    my_prj_accelerator_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    my_prj_accelerator_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    my_prj_accelerator_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    my_prj_accelerator_gmem_m_axi_U->I_AWVALID(gmem_AWVALID);
    my_prj_accelerator_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    my_prj_accelerator_gmem_m_axi_U->I_AWADDR(grp_copy_output_fu_79_m_axi_score_out_AWADDR);
    my_prj_accelerator_gmem_m_axi_U->I_AWID(grp_copy_output_fu_79_m_axi_score_out_AWID);
    my_prj_accelerator_gmem_m_axi_U->I_AWLEN(grp_copy_output_fu_79_m_axi_score_out_AWLEN);
    my_prj_accelerator_gmem_m_axi_U->I_AWSIZE(grp_copy_output_fu_79_m_axi_score_out_AWSIZE);
    my_prj_accelerator_gmem_m_axi_U->I_AWLOCK(grp_copy_output_fu_79_m_axi_score_out_AWLOCK);
    my_prj_accelerator_gmem_m_axi_U->I_AWCACHE(grp_copy_output_fu_79_m_axi_score_out_AWCACHE);
    my_prj_accelerator_gmem_m_axi_U->I_AWQOS(grp_copy_output_fu_79_m_axi_score_out_AWQOS);
    my_prj_accelerator_gmem_m_axi_U->I_AWPROT(grp_copy_output_fu_79_m_axi_score_out_AWPROT);
    my_prj_accelerator_gmem_m_axi_U->I_AWUSER(grp_copy_output_fu_79_m_axi_score_out_AWUSER);
    my_prj_accelerator_gmem_m_axi_U->I_AWBURST(grp_copy_output_fu_79_m_axi_score_out_AWBURST);
    my_prj_accelerator_gmem_m_axi_U->I_AWREGION(grp_copy_output_fu_79_m_axi_score_out_AWREGION);
    my_prj_accelerator_gmem_m_axi_U->I_WVALID(gmem_WVALID);
    my_prj_accelerator_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    my_prj_accelerator_gmem_m_axi_U->I_WDATA(grp_copy_output_fu_79_m_axi_score_out_WDATA);
    my_prj_accelerator_gmem_m_axi_U->I_WID(grp_copy_output_fu_79_m_axi_score_out_WID);
    my_prj_accelerator_gmem_m_axi_U->I_WUSER(grp_copy_output_fu_79_m_axi_score_out_WUSER);
    my_prj_accelerator_gmem_m_axi_U->I_WLAST(grp_copy_output_fu_79_m_axi_score_out_WLAST);
    my_prj_accelerator_gmem_m_axi_U->I_WSTRB(grp_copy_output_fu_79_m_axi_score_out_WSTRB);
    my_prj_accelerator_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    my_prj_accelerator_gmem_m_axi_U->I_BREADY(gmem_BREADY);
    my_prj_accelerator_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    my_prj_accelerator_gmem_m_axi_U->I_BID(gmem_BID);
    my_prj_accelerator_gmem_m_axi_U->I_BUSER(gmem_BUSER);
    x_int_V_U = new my_prj_acceleratofYi("x_int_V_U");
    x_int_V_U->clk(ap_clk);
    x_int_V_U->reset(ap_rst_n_inv);
    x_int_V_U->address0(x_int_V_address0);
    x_int_V_U->ce0(x_int_V_ce0);
    x_int_V_U->we0(x_int_V_we0);
    x_int_V_U->d0(grp_copy_input_fu_88_x_int_V_d0);
    x_int_V_U->q0(x_int_V_q0);
    x_int_V_U->address1(grp_decision_function_90_fu_74_x_V_address1);
    x_int_V_U->ce1(x_int_V_ce1);
    x_int_V_U->q1(x_int_V_q1);
    grp_decision_function_90_fu_74 = new decision_function_90("grp_decision_function_90_fu_74");
    grp_decision_function_90_fu_74->ap_clk(ap_clk);
    grp_decision_function_90_fu_74->ap_rst(ap_rst_n_inv);
    grp_decision_function_90_fu_74->ap_start(grp_decision_function_90_fu_74_ap_start);
    grp_decision_function_90_fu_74->ap_done(grp_decision_function_90_fu_74_ap_done);
    grp_decision_function_90_fu_74->ap_idle(grp_decision_function_90_fu_74_ap_idle);
    grp_decision_function_90_fu_74->ap_ready(grp_decision_function_90_fu_74_ap_ready);
    grp_decision_function_90_fu_74->x_V_address0(grp_decision_function_90_fu_74_x_V_address0);
    grp_decision_function_90_fu_74->x_V_ce0(grp_decision_function_90_fu_74_x_V_ce0);
    grp_decision_function_90_fu_74->x_V_q0(x_int_V_q0);
    grp_decision_function_90_fu_74->x_V_address1(grp_decision_function_90_fu_74_x_V_address1);
    grp_decision_function_90_fu_74->x_V_ce1(grp_decision_function_90_fu_74_x_V_ce1);
    grp_decision_function_90_fu_74->x_V_q1(x_int_V_q1);
    grp_decision_function_90_fu_74->ap_return(grp_decision_function_90_fu_74_ap_return);
    grp_copy_output_fu_79 = new copy_output("grp_copy_output_fu_79");
    grp_copy_output_fu_79->ap_clk(ap_clk);
    grp_copy_output_fu_79->ap_rst(ap_rst_n_inv);
    grp_copy_output_fu_79->ap_start(grp_copy_output_fu_79_ap_start);
    grp_copy_output_fu_79->ap_done(grp_copy_output_fu_79_ap_done);
    grp_copy_output_fu_79->ap_idle(grp_copy_output_fu_79_ap_idle);
    grp_copy_output_fu_79->ap_ready(grp_copy_output_fu_79_ap_ready);
    grp_copy_output_fu_79->score_int_0_V_read(score_int_0_V_reg_126);
    grp_copy_output_fu_79->m_axi_score_out_AWVALID(grp_copy_output_fu_79_m_axi_score_out_AWVALID);
    grp_copy_output_fu_79->m_axi_score_out_AWREADY(gmem_AWREADY);
    grp_copy_output_fu_79->m_axi_score_out_AWADDR(grp_copy_output_fu_79_m_axi_score_out_AWADDR);
    grp_copy_output_fu_79->m_axi_score_out_AWID(grp_copy_output_fu_79_m_axi_score_out_AWID);
    grp_copy_output_fu_79->m_axi_score_out_AWLEN(grp_copy_output_fu_79_m_axi_score_out_AWLEN);
    grp_copy_output_fu_79->m_axi_score_out_AWSIZE(grp_copy_output_fu_79_m_axi_score_out_AWSIZE);
    grp_copy_output_fu_79->m_axi_score_out_AWBURST(grp_copy_output_fu_79_m_axi_score_out_AWBURST);
    grp_copy_output_fu_79->m_axi_score_out_AWLOCK(grp_copy_output_fu_79_m_axi_score_out_AWLOCK);
    grp_copy_output_fu_79->m_axi_score_out_AWCACHE(grp_copy_output_fu_79_m_axi_score_out_AWCACHE);
    grp_copy_output_fu_79->m_axi_score_out_AWPROT(grp_copy_output_fu_79_m_axi_score_out_AWPROT);
    grp_copy_output_fu_79->m_axi_score_out_AWQOS(grp_copy_output_fu_79_m_axi_score_out_AWQOS);
    grp_copy_output_fu_79->m_axi_score_out_AWREGION(grp_copy_output_fu_79_m_axi_score_out_AWREGION);
    grp_copy_output_fu_79->m_axi_score_out_AWUSER(grp_copy_output_fu_79_m_axi_score_out_AWUSER);
    grp_copy_output_fu_79->m_axi_score_out_WVALID(grp_copy_output_fu_79_m_axi_score_out_WVALID);
    grp_copy_output_fu_79->m_axi_score_out_WREADY(gmem_WREADY);
    grp_copy_output_fu_79->m_axi_score_out_WDATA(grp_copy_output_fu_79_m_axi_score_out_WDATA);
    grp_copy_output_fu_79->m_axi_score_out_WSTRB(grp_copy_output_fu_79_m_axi_score_out_WSTRB);
    grp_copy_output_fu_79->m_axi_score_out_WLAST(grp_copy_output_fu_79_m_axi_score_out_WLAST);
    grp_copy_output_fu_79->m_axi_score_out_WID(grp_copy_output_fu_79_m_axi_score_out_WID);
    grp_copy_output_fu_79->m_axi_score_out_WUSER(grp_copy_output_fu_79_m_axi_score_out_WUSER);
    grp_copy_output_fu_79->m_axi_score_out_ARVALID(grp_copy_output_fu_79_m_axi_score_out_ARVALID);
    grp_copy_output_fu_79->m_axi_score_out_ARREADY(ap_var_for_const1);
    grp_copy_output_fu_79->m_axi_score_out_ARADDR(grp_copy_output_fu_79_m_axi_score_out_ARADDR);
    grp_copy_output_fu_79->m_axi_score_out_ARID(grp_copy_output_fu_79_m_axi_score_out_ARID);
    grp_copy_output_fu_79->m_axi_score_out_ARLEN(grp_copy_output_fu_79_m_axi_score_out_ARLEN);
    grp_copy_output_fu_79->m_axi_score_out_ARSIZE(grp_copy_output_fu_79_m_axi_score_out_ARSIZE);
    grp_copy_output_fu_79->m_axi_score_out_ARBURST(grp_copy_output_fu_79_m_axi_score_out_ARBURST);
    grp_copy_output_fu_79->m_axi_score_out_ARLOCK(grp_copy_output_fu_79_m_axi_score_out_ARLOCK);
    grp_copy_output_fu_79->m_axi_score_out_ARCACHE(grp_copy_output_fu_79_m_axi_score_out_ARCACHE);
    grp_copy_output_fu_79->m_axi_score_out_ARPROT(grp_copy_output_fu_79_m_axi_score_out_ARPROT);
    grp_copy_output_fu_79->m_axi_score_out_ARQOS(grp_copy_output_fu_79_m_axi_score_out_ARQOS);
    grp_copy_output_fu_79->m_axi_score_out_ARREGION(grp_copy_output_fu_79_m_axi_score_out_ARREGION);
    grp_copy_output_fu_79->m_axi_score_out_ARUSER(grp_copy_output_fu_79_m_axi_score_out_ARUSER);
    grp_copy_output_fu_79->m_axi_score_out_RVALID(ap_var_for_const1);
    grp_copy_output_fu_79->m_axi_score_out_RREADY(grp_copy_output_fu_79_m_axi_score_out_RREADY);
    grp_copy_output_fu_79->m_axi_score_out_RDATA(ap_var_for_const2);
    grp_copy_output_fu_79->m_axi_score_out_RLAST(ap_var_for_const1);
    grp_copy_output_fu_79->m_axi_score_out_RID(ap_var_for_const3);
    grp_copy_output_fu_79->m_axi_score_out_RUSER(ap_var_for_const3);
    grp_copy_output_fu_79->m_axi_score_out_RRESP(ap_var_for_const4);
    grp_copy_output_fu_79->m_axi_score_out_BVALID(gmem_BVALID);
    grp_copy_output_fu_79->m_axi_score_out_BREADY(grp_copy_output_fu_79_m_axi_score_out_BREADY);
    grp_copy_output_fu_79->m_axi_score_out_BRESP(gmem_BRESP);
    grp_copy_output_fu_79->m_axi_score_out_BID(gmem_BID);
    grp_copy_output_fu_79->m_axi_score_out_BUSER(gmem_BUSER);
    grp_copy_output_fu_79->score_out_offset(score3_reg_116);
    grp_copy_input_fu_88 = new copy_input("grp_copy_input_fu_88");
    grp_copy_input_fu_88->ap_clk(ap_clk);
    grp_copy_input_fu_88->ap_rst(ap_rst_n_inv);
    grp_copy_input_fu_88->ap_start(grp_copy_input_fu_88_ap_start);
    grp_copy_input_fu_88->ap_done(grp_copy_input_fu_88_ap_done);
    grp_copy_input_fu_88->ap_idle(grp_copy_input_fu_88_ap_idle);
    grp_copy_input_fu_88->ap_ready(grp_copy_input_fu_88_ap_ready);
    grp_copy_input_fu_88->m_axi_x_in_AWVALID(grp_copy_input_fu_88_m_axi_x_in_AWVALID);
    grp_copy_input_fu_88->m_axi_x_in_AWREADY(ap_var_for_const1);
    grp_copy_input_fu_88->m_axi_x_in_AWADDR(grp_copy_input_fu_88_m_axi_x_in_AWADDR);
    grp_copy_input_fu_88->m_axi_x_in_AWID(grp_copy_input_fu_88_m_axi_x_in_AWID);
    grp_copy_input_fu_88->m_axi_x_in_AWLEN(grp_copy_input_fu_88_m_axi_x_in_AWLEN);
    grp_copy_input_fu_88->m_axi_x_in_AWSIZE(grp_copy_input_fu_88_m_axi_x_in_AWSIZE);
    grp_copy_input_fu_88->m_axi_x_in_AWBURST(grp_copy_input_fu_88_m_axi_x_in_AWBURST);
    grp_copy_input_fu_88->m_axi_x_in_AWLOCK(grp_copy_input_fu_88_m_axi_x_in_AWLOCK);
    grp_copy_input_fu_88->m_axi_x_in_AWCACHE(grp_copy_input_fu_88_m_axi_x_in_AWCACHE);
    grp_copy_input_fu_88->m_axi_x_in_AWPROT(grp_copy_input_fu_88_m_axi_x_in_AWPROT);
    grp_copy_input_fu_88->m_axi_x_in_AWQOS(grp_copy_input_fu_88_m_axi_x_in_AWQOS);
    grp_copy_input_fu_88->m_axi_x_in_AWREGION(grp_copy_input_fu_88_m_axi_x_in_AWREGION);
    grp_copy_input_fu_88->m_axi_x_in_AWUSER(grp_copy_input_fu_88_m_axi_x_in_AWUSER);
    grp_copy_input_fu_88->m_axi_x_in_WVALID(grp_copy_input_fu_88_m_axi_x_in_WVALID);
    grp_copy_input_fu_88->m_axi_x_in_WREADY(ap_var_for_const1);
    grp_copy_input_fu_88->m_axi_x_in_WDATA(grp_copy_input_fu_88_m_axi_x_in_WDATA);
    grp_copy_input_fu_88->m_axi_x_in_WSTRB(grp_copy_input_fu_88_m_axi_x_in_WSTRB);
    grp_copy_input_fu_88->m_axi_x_in_WLAST(grp_copy_input_fu_88_m_axi_x_in_WLAST);
    grp_copy_input_fu_88->m_axi_x_in_WID(grp_copy_input_fu_88_m_axi_x_in_WID);
    grp_copy_input_fu_88->m_axi_x_in_WUSER(grp_copy_input_fu_88_m_axi_x_in_WUSER);
    grp_copy_input_fu_88->m_axi_x_in_ARVALID(grp_copy_input_fu_88_m_axi_x_in_ARVALID);
    grp_copy_input_fu_88->m_axi_x_in_ARREADY(gmem_ARREADY);
    grp_copy_input_fu_88->m_axi_x_in_ARADDR(grp_copy_input_fu_88_m_axi_x_in_ARADDR);
    grp_copy_input_fu_88->m_axi_x_in_ARID(grp_copy_input_fu_88_m_axi_x_in_ARID);
    grp_copy_input_fu_88->m_axi_x_in_ARLEN(grp_copy_input_fu_88_m_axi_x_in_ARLEN);
    grp_copy_input_fu_88->m_axi_x_in_ARSIZE(grp_copy_input_fu_88_m_axi_x_in_ARSIZE);
    grp_copy_input_fu_88->m_axi_x_in_ARBURST(grp_copy_input_fu_88_m_axi_x_in_ARBURST);
    grp_copy_input_fu_88->m_axi_x_in_ARLOCK(grp_copy_input_fu_88_m_axi_x_in_ARLOCK);
    grp_copy_input_fu_88->m_axi_x_in_ARCACHE(grp_copy_input_fu_88_m_axi_x_in_ARCACHE);
    grp_copy_input_fu_88->m_axi_x_in_ARPROT(grp_copy_input_fu_88_m_axi_x_in_ARPROT);
    grp_copy_input_fu_88->m_axi_x_in_ARQOS(grp_copy_input_fu_88_m_axi_x_in_ARQOS);
    grp_copy_input_fu_88->m_axi_x_in_ARREGION(grp_copy_input_fu_88_m_axi_x_in_ARREGION);
    grp_copy_input_fu_88->m_axi_x_in_ARUSER(grp_copy_input_fu_88_m_axi_x_in_ARUSER);
    grp_copy_input_fu_88->m_axi_x_in_RVALID(gmem_RVALID);
    grp_copy_input_fu_88->m_axi_x_in_RREADY(grp_copy_input_fu_88_m_axi_x_in_RREADY);
    grp_copy_input_fu_88->m_axi_x_in_RDATA(gmem_RDATA);
    grp_copy_input_fu_88->m_axi_x_in_RLAST(gmem_RLAST);
    grp_copy_input_fu_88->m_axi_x_in_RID(gmem_RID);
    grp_copy_input_fu_88->m_axi_x_in_RUSER(gmem_RUSER);
    grp_copy_input_fu_88->m_axi_x_in_RRESP(gmem_RRESP);
    grp_copy_input_fu_88->m_axi_x_in_BVALID(ap_var_for_const1);
    grp_copy_input_fu_88->m_axi_x_in_BREADY(grp_copy_input_fu_88_m_axi_x_in_BREADY);
    grp_copy_input_fu_88->m_axi_x_in_BRESP(ap_var_for_const4);
    grp_copy_input_fu_88->m_axi_x_in_BID(ap_var_for_const3);
    grp_copy_input_fu_88->m_axi_x_in_BUSER(ap_var_for_const3);
    grp_copy_input_fu_88->x_in_offset(x1_reg_121);
    grp_copy_input_fu_88->x_int_V_address0(grp_copy_input_fu_88_x_int_V_address0);
    grp_copy_input_fu_88->x_int_V_ce0(grp_copy_input_fu_88_x_int_V_ce0);
    grp_copy_input_fu_88->x_int_V_we0(grp_copy_input_fu_88_x_int_V_we0);
    grp_copy_input_fu_88->x_int_V_d0(grp_copy_input_fu_88_x_int_V_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_copy_output_fu_79_ap_done );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_copy_output_fu_79_ap_done );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_gmem_ARVALID);
    sensitive << ( grp_copy_input_fu_88_m_axi_x_in_ARVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_gmem_AWVALID);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_copy_output_fu_79_m_axi_score_out_AWVALID );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_gmem_BREADY);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_copy_output_fu_79_m_axi_score_out_BREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_gmem_RREADY);
    sensitive << ( grp_copy_input_fu_88_m_axi_x_in_RREADY );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_gmem_WVALID);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_copy_output_fu_79_m_axi_score_out_WVALID );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_copy_input_fu_88_ap_start);
    sensitive << ( grp_copy_input_fu_88_ap_start_reg );

    SC_METHOD(thread_grp_copy_output_fu_79_ap_start);
    sensitive << ( grp_copy_output_fu_79_ap_start_reg );

    SC_METHOD(thread_grp_decision_function_90_fu_74_ap_start);
    sensitive << ( grp_decision_function_90_fu_74_ap_start_reg );

    SC_METHOD(thread_x_int_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_decision_function_90_fu_74_x_V_address0 );
    sensitive << ( grp_copy_input_fu_88_x_int_V_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_x_int_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_decision_function_90_fu_74_x_V_ce0 );
    sensitive << ( grp_copy_input_fu_88_x_int_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_x_int_V_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_decision_function_90_fu_74_x_V_ce1 );

    SC_METHOD(thread_x_int_V_we0);
    sensitive << ( grp_copy_input_fu_88_x_int_V_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_decision_function_90_fu_74_ap_done );
    sensitive << ( grp_copy_output_fu_79_ap_done );
    sensitive << ( grp_copy_input_fu_88_ap_done );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    ap_CS_fsm = "000001";
    grp_decision_function_90_fu_74_ap_start_reg = SC_LOGIC_0;
    grp_copy_output_fu_79_ap_start_reg = SC_LOGIC_0;
    grp_copy_input_fu_88_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "my_prj_accelerator_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, x, "x");
    sc_trace(mVcdFile, score, "score");
    sc_trace(mVcdFile, gmem_AWVALID, "gmem_AWVALID");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_WVALID, "gmem_WVALID");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_ARVALID, "gmem_ARVALID");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RREADY, "gmem_RREADY");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BREADY, "gmem_BREADY");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, score3_reg_116, "score3_reg_116");
    sc_trace(mVcdFile, x1_reg_121, "x1_reg_121");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_ap_return, "grp_decision_function_90_fu_74_ap_return");
    sc_trace(mVcdFile, score_int_0_V_reg_126, "score_int_0_V_reg_126");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_ap_ready, "grp_decision_function_90_fu_74_ap_ready");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_ap_done, "grp_decision_function_90_fu_74_ap_done");
    sc_trace(mVcdFile, x_int_V_address0, "x_int_V_address0");
    sc_trace(mVcdFile, x_int_V_ce0, "x_int_V_ce0");
    sc_trace(mVcdFile, x_int_V_we0, "x_int_V_we0");
    sc_trace(mVcdFile, x_int_V_q0, "x_int_V_q0");
    sc_trace(mVcdFile, x_int_V_ce1, "x_int_V_ce1");
    sc_trace(mVcdFile, x_int_V_q1, "x_int_V_q1");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_ap_start, "grp_decision_function_90_fu_74_ap_start");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_ap_idle, "grp_decision_function_90_fu_74_ap_idle");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_x_V_address0, "grp_decision_function_90_fu_74_x_V_address0");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_x_V_ce0, "grp_decision_function_90_fu_74_x_V_ce0");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_x_V_address1, "grp_decision_function_90_fu_74_x_V_address1");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_x_V_ce1, "grp_decision_function_90_fu_74_x_V_ce1");
    sc_trace(mVcdFile, grp_copy_output_fu_79_ap_start, "grp_copy_output_fu_79_ap_start");
    sc_trace(mVcdFile, grp_copy_output_fu_79_ap_done, "grp_copy_output_fu_79_ap_done");
    sc_trace(mVcdFile, grp_copy_output_fu_79_ap_idle, "grp_copy_output_fu_79_ap_idle");
    sc_trace(mVcdFile, grp_copy_output_fu_79_ap_ready, "grp_copy_output_fu_79_ap_ready");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWVALID, "grp_copy_output_fu_79_m_axi_score_out_AWVALID");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWADDR, "grp_copy_output_fu_79_m_axi_score_out_AWADDR");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWID, "grp_copy_output_fu_79_m_axi_score_out_AWID");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWLEN, "grp_copy_output_fu_79_m_axi_score_out_AWLEN");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWSIZE, "grp_copy_output_fu_79_m_axi_score_out_AWSIZE");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWBURST, "grp_copy_output_fu_79_m_axi_score_out_AWBURST");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWLOCK, "grp_copy_output_fu_79_m_axi_score_out_AWLOCK");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWCACHE, "grp_copy_output_fu_79_m_axi_score_out_AWCACHE");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWPROT, "grp_copy_output_fu_79_m_axi_score_out_AWPROT");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWQOS, "grp_copy_output_fu_79_m_axi_score_out_AWQOS");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWREGION, "grp_copy_output_fu_79_m_axi_score_out_AWREGION");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_AWUSER, "grp_copy_output_fu_79_m_axi_score_out_AWUSER");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_WVALID, "grp_copy_output_fu_79_m_axi_score_out_WVALID");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_WDATA, "grp_copy_output_fu_79_m_axi_score_out_WDATA");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_WSTRB, "grp_copy_output_fu_79_m_axi_score_out_WSTRB");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_WLAST, "grp_copy_output_fu_79_m_axi_score_out_WLAST");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_WID, "grp_copy_output_fu_79_m_axi_score_out_WID");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_WUSER, "grp_copy_output_fu_79_m_axi_score_out_WUSER");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARVALID, "grp_copy_output_fu_79_m_axi_score_out_ARVALID");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARADDR, "grp_copy_output_fu_79_m_axi_score_out_ARADDR");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARID, "grp_copy_output_fu_79_m_axi_score_out_ARID");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARLEN, "grp_copy_output_fu_79_m_axi_score_out_ARLEN");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARSIZE, "grp_copy_output_fu_79_m_axi_score_out_ARSIZE");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARBURST, "grp_copy_output_fu_79_m_axi_score_out_ARBURST");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARLOCK, "grp_copy_output_fu_79_m_axi_score_out_ARLOCK");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARCACHE, "grp_copy_output_fu_79_m_axi_score_out_ARCACHE");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARPROT, "grp_copy_output_fu_79_m_axi_score_out_ARPROT");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARQOS, "grp_copy_output_fu_79_m_axi_score_out_ARQOS");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARREGION, "grp_copy_output_fu_79_m_axi_score_out_ARREGION");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_ARUSER, "grp_copy_output_fu_79_m_axi_score_out_ARUSER");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_RREADY, "grp_copy_output_fu_79_m_axi_score_out_RREADY");
    sc_trace(mVcdFile, grp_copy_output_fu_79_m_axi_score_out_BREADY, "grp_copy_output_fu_79_m_axi_score_out_BREADY");
    sc_trace(mVcdFile, grp_copy_input_fu_88_ap_start, "grp_copy_input_fu_88_ap_start");
    sc_trace(mVcdFile, grp_copy_input_fu_88_ap_done, "grp_copy_input_fu_88_ap_done");
    sc_trace(mVcdFile, grp_copy_input_fu_88_ap_idle, "grp_copy_input_fu_88_ap_idle");
    sc_trace(mVcdFile, grp_copy_input_fu_88_ap_ready, "grp_copy_input_fu_88_ap_ready");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWVALID, "grp_copy_input_fu_88_m_axi_x_in_AWVALID");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWADDR, "grp_copy_input_fu_88_m_axi_x_in_AWADDR");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWID, "grp_copy_input_fu_88_m_axi_x_in_AWID");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWLEN, "grp_copy_input_fu_88_m_axi_x_in_AWLEN");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWSIZE, "grp_copy_input_fu_88_m_axi_x_in_AWSIZE");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWBURST, "grp_copy_input_fu_88_m_axi_x_in_AWBURST");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWLOCK, "grp_copy_input_fu_88_m_axi_x_in_AWLOCK");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWCACHE, "grp_copy_input_fu_88_m_axi_x_in_AWCACHE");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWPROT, "grp_copy_input_fu_88_m_axi_x_in_AWPROT");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWQOS, "grp_copy_input_fu_88_m_axi_x_in_AWQOS");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWREGION, "grp_copy_input_fu_88_m_axi_x_in_AWREGION");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_AWUSER, "grp_copy_input_fu_88_m_axi_x_in_AWUSER");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_WVALID, "grp_copy_input_fu_88_m_axi_x_in_WVALID");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_WDATA, "grp_copy_input_fu_88_m_axi_x_in_WDATA");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_WSTRB, "grp_copy_input_fu_88_m_axi_x_in_WSTRB");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_WLAST, "grp_copy_input_fu_88_m_axi_x_in_WLAST");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_WID, "grp_copy_input_fu_88_m_axi_x_in_WID");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_WUSER, "grp_copy_input_fu_88_m_axi_x_in_WUSER");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARVALID, "grp_copy_input_fu_88_m_axi_x_in_ARVALID");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARADDR, "grp_copy_input_fu_88_m_axi_x_in_ARADDR");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARID, "grp_copy_input_fu_88_m_axi_x_in_ARID");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARLEN, "grp_copy_input_fu_88_m_axi_x_in_ARLEN");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARSIZE, "grp_copy_input_fu_88_m_axi_x_in_ARSIZE");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARBURST, "grp_copy_input_fu_88_m_axi_x_in_ARBURST");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARLOCK, "grp_copy_input_fu_88_m_axi_x_in_ARLOCK");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARCACHE, "grp_copy_input_fu_88_m_axi_x_in_ARCACHE");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARPROT, "grp_copy_input_fu_88_m_axi_x_in_ARPROT");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARQOS, "grp_copy_input_fu_88_m_axi_x_in_ARQOS");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARREGION, "grp_copy_input_fu_88_m_axi_x_in_ARREGION");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_ARUSER, "grp_copy_input_fu_88_m_axi_x_in_ARUSER");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_RREADY, "grp_copy_input_fu_88_m_axi_x_in_RREADY");
    sc_trace(mVcdFile, grp_copy_input_fu_88_m_axi_x_in_BREADY, "grp_copy_input_fu_88_m_axi_x_in_BREADY");
    sc_trace(mVcdFile, grp_copy_input_fu_88_x_int_V_address0, "grp_copy_input_fu_88_x_int_V_address0");
    sc_trace(mVcdFile, grp_copy_input_fu_88_x_int_V_ce0, "grp_copy_input_fu_88_x_int_V_ce0");
    sc_trace(mVcdFile, grp_copy_input_fu_88_x_int_V_we0, "grp_copy_input_fu_88_x_int_V_we0");
    sc_trace(mVcdFile, grp_copy_input_fu_88_x_int_V_d0, "grp_copy_input_fu_88_x_int_V_d0");
    sc_trace(mVcdFile, grp_decision_function_90_fu_74_ap_start_reg, "grp_decision_function_90_fu_74_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_copy_output_fu_79_ap_start_reg, "grp_copy_output_fu_79_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_copy_input_fu_88_ap_start_reg, "grp_copy_input_fu_88_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("my_prj_accelerator.hdltvin.dat");
    mHdltvoutHandle.open("my_prj_accelerator.hdltvout.dat");
}

my_prj_accelerator::~my_prj_accelerator() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete my_prj_accelerator_control_s_axi_U;
    delete my_prj_accelerator_gmem_m_axi_U;
    delete x_int_V_U;
    delete grp_decision_function_90_fu_74;
    delete grp_copy_output_fu_79;
    delete grp_copy_input_fu_88;
}

void my_prj_accelerator::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void my_prj_accelerator::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void my_prj_accelerator::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_0;
}

void my_prj_accelerator::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void my_prj_accelerator::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void my_prj_accelerator::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_copy_input_fu_88_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_copy_input_fu_88_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_copy_input_fu_88_ap_ready.read())) {
            grp_copy_input_fu_88_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_copy_output_fu_79_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(grp_decision_function_90_fu_74_ap_done.read(), ap_const_logic_1))) {
            grp_copy_output_fu_79_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_copy_output_fu_79_ap_ready.read())) {
            grp_copy_output_fu_79_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_decision_function_90_fu_74_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            grp_decision_function_90_fu_74_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_decision_function_90_fu_74_ap_ready.read())) {
            grp_decision_function_90_fu_74_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        score3_reg_116 = score.read().range(31, 3);
        x1_reg_121 = x.read().range(31, 3);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_decision_function_90_fu_74_ap_done.read(), ap_const_logic_1))) {
        score_int_0_V_reg_126 = grp_decision_function_90_fu_74_ap_return.read();
    }
}

void my_prj_accelerator::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void my_prj_accelerator::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void my_prj_accelerator::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void my_prj_accelerator::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void my_prj_accelerator::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void my_prj_accelerator::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void my_prj_accelerator::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(grp_copy_output_fu_79_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(grp_copy_output_fu_79_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void my_prj_accelerator::thread_gmem_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARVALID = grp_copy_input_fu_88_m_axi_x_in_ARVALID.read();
    } else {
        gmem_ARVALID = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_gmem_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        gmem_AWVALID = grp_copy_output_fu_79_m_axi_score_out_AWVALID.read();
    } else {
        gmem_AWVALID = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_gmem_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        gmem_BREADY = grp_copy_output_fu_79_m_axi_score_out_BREADY.read();
    } else {
        gmem_BREADY = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_gmem_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_RREADY = grp_copy_input_fu_88_m_axi_x_in_RREADY.read();
    } else {
        gmem_RREADY = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_gmem_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        gmem_WVALID = grp_copy_output_fu_79_m_axi_score_out_WVALID.read();
    } else {
        gmem_WVALID = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_grp_copy_input_fu_88_ap_start() {
    grp_copy_input_fu_88_ap_start = grp_copy_input_fu_88_ap_start_reg.read();
}

void my_prj_accelerator::thread_grp_copy_output_fu_79_ap_start() {
    grp_copy_output_fu_79_ap_start = grp_copy_output_fu_79_ap_start_reg.read();
}

void my_prj_accelerator::thread_grp_decision_function_90_fu_74_ap_start() {
    grp_decision_function_90_fu_74_ap_start = grp_decision_function_90_fu_74_ap_start_reg.read();
}

void my_prj_accelerator::thread_x_int_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_int_V_address0 = grp_copy_input_fu_88_x_int_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_int_V_address0 = grp_decision_function_90_fu_74_x_V_address0.read();
    } else {
        x_int_V_address0 = "XXXX";
    }
}

void my_prj_accelerator::thread_x_int_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_int_V_ce0 = grp_copy_input_fu_88_x_int_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_int_V_ce0 = grp_decision_function_90_fu_74_x_V_ce0.read();
    } else {
        x_int_V_ce0 = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_x_int_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_int_V_ce1 = grp_decision_function_90_fu_74_x_V_ce1.read();
    } else {
        x_int_V_ce1 = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_x_int_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_int_V_we0 = grp_copy_input_fu_88_x_int_V_we0.read();
    } else {
        x_int_V_we0 = ap_const_logic_0;
    }
}

void my_prj_accelerator::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_copy_input_fu_88_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_decision_function_90_fu_74_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_copy_output_fu_79_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void my_prj_accelerator::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

