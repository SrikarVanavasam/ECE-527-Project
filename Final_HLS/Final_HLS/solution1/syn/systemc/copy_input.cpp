// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "copy_input.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic copy_input::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic copy_input::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> copy_input::ap_ST_fsm_state1 = "1";
const sc_lv<10> copy_input::ap_ST_fsm_state2 = "10";
const sc_lv<10> copy_input::ap_ST_fsm_state3 = "100";
const sc_lv<10> copy_input::ap_ST_fsm_state4 = "1000";
const sc_lv<10> copy_input::ap_ST_fsm_state5 = "10000";
const sc_lv<10> copy_input::ap_ST_fsm_state6 = "100000";
const sc_lv<10> copy_input::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> copy_input::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> copy_input::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> copy_input::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> copy_input::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> copy_input::ap_const_lv1_0 = "0";
const sc_lv<3> copy_input::ap_const_lv3_0 = "000";
const sc_lv<2> copy_input::ap_const_lv2_0 = "00";
const sc_lv<4> copy_input::ap_const_lv4_0 = "0000";
const sc_lv<64> copy_input::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<8> copy_input::ap_const_lv8_0 = "00000000";
const sc_lv<32> copy_input::ap_const_lv32_7 = "111";
const sc_lv<32> copy_input::ap_const_lv32_8 = "1000";
const sc_lv<32> copy_input::ap_const_lv32_6 = "110";
const sc_lv<32> copy_input::ap_const_lv32_9 = "1001";
const sc_lv<32> copy_input::ap_const_lv32_C = "1100";
const sc_lv<4> copy_input::ap_const_lv4_C = "1100";
const sc_lv<4> copy_input::ap_const_lv4_1 = "1";
const sc_lv<32> copy_input::ap_const_lv32_3F = "111111";
const sc_lv<32> copy_input::ap_const_lv32_34 = "110100";
const sc_lv<32> copy_input::ap_const_lv32_3E = "111110";
const sc_lv<1> copy_input::ap_const_lv1_1 = "1";
const sc_lv<54> copy_input::ap_const_lv54_0 = "000000000000000000000000000000000000000000000000000000";
const sc_lv<63> copy_input::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<12> copy_input::ap_const_lv12_433 = "10000110011";
const sc_lv<12> copy_input::ap_const_lv12_8 = "1000";
const sc_lv<12> copy_input::ap_const_lv12_FF8 = "111111111000";
const sc_lv<12> copy_input::ap_const_lv12_36 = "110110";
const sc_lv<12> copy_input::ap_const_lv12_C = "1100";
const sc_lv<12> copy_input::ap_const_lv12_FFF = "111111111111";
const sc_lv<12> copy_input::ap_const_lv12_0 = "000000000000";
const bool copy_input::ap_const_boolean_1 = true;

copy_input::copy_input(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_F2_fu_203_p2);
    sensitive << ( zext_ln461_fu_163_p1 );

    SC_METHOD(thread_add_ln581_fu_215_p2);
    sensitive << ( F2_fu_203_p2 );

    SC_METHOD(thread_and_ln581_fu_285_p2);
    sensitive << ( icmp_ln581_fu_209_p2 );
    sensitive << ( xor_ln582_fu_279_p2 );

    SC_METHOD(thread_and_ln582_fu_376_p2);
    sensitive << ( icmp_ln582_reg_447 );
    sensitive << ( xor_ln571_fu_371_p2 );

    SC_METHOD(thread_and_ln585_1_fu_303_p2);
    sensitive << ( icmp_ln585_fu_245_p2 );
    sensitive << ( and_ln581_fu_285_p2 );

    SC_METHOD(thread_and_ln585_fu_297_p2);
    sensitive << ( and_ln581_fu_285_p2 );
    sensitive << ( xor_ln585_fu_291_p2 );

    SC_METHOD(thread_and_ln603_fu_321_p2);
    sensitive << ( icmp_ln603_fu_251_p2 );
    sensitive << ( xor_ln581_fu_315_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( m_axi_x_in_RVALID );
    sensitive << ( icmp_ln14_fu_126_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_x_in_RVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln14_fu_126_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( m_axi_x_in_RVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln14_fu_126_p2 );

    SC_METHOD(thread_ashr_ln586_fu_353_p2);
    sensitive << ( man_V_2_reg_432 );
    sensitive << ( zext_ln586_fu_349_p1 );

    SC_METHOD(thread_exp_tmp_V_fu_153_p4);
    sensitive << ( ireg_V_fu_138_p1 );

    SC_METHOD(thread_i_fu_132_p2);
    sensitive << ( i_0_reg_103 );

    SC_METHOD(thread_icmp_ln14_fu_126_p2);
    sensitive << ( m_axi_x_in_RVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln14_fu_126_p2 );
    sensitive << ( i_0_reg_103 );

    SC_METHOD(thread_icmp_ln571_fu_197_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( trunc_ln556_fu_141_p1 );

    SC_METHOD(thread_icmp_ln581_fu_209_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( F2_fu_203_p2 );

    SC_METHOD(thread_icmp_ln582_fu_235_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( F2_fu_203_p2 );

    SC_METHOD(thread_icmp_ln585_fu_245_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sh_amt_fu_227_p3 );

    SC_METHOD(thread_icmp_ln603_fu_251_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sh_amt_fu_227_p3 );

    SC_METHOD(thread_ireg_V_fu_138_p1);
    sensitive << ( x_in_addr_read_reg_427 );

    SC_METHOD(thread_m_axi_x_in_ARADDR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_x_in_ARREADY );
    sensitive << ( zext_ln13_fu_115_p1 );

    SC_METHOD(thread_m_axi_x_in_ARBURST);

    SC_METHOD(thread_m_axi_x_in_ARCACHE);

    SC_METHOD(thread_m_axi_x_in_ARID);

    SC_METHOD(thread_m_axi_x_in_ARLEN);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_x_in_ARREADY );

    SC_METHOD(thread_m_axi_x_in_ARLOCK);

    SC_METHOD(thread_m_axi_x_in_ARPROT);

    SC_METHOD(thread_m_axi_x_in_ARQOS);

    SC_METHOD(thread_m_axi_x_in_ARREGION);

    SC_METHOD(thread_m_axi_x_in_ARSIZE);

    SC_METHOD(thread_m_axi_x_in_ARUSER);

    SC_METHOD(thread_m_axi_x_in_ARVALID);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_x_in_ARREADY );

    SC_METHOD(thread_m_axi_x_in_AWADDR);

    SC_METHOD(thread_m_axi_x_in_AWBURST);

    SC_METHOD(thread_m_axi_x_in_AWCACHE);

    SC_METHOD(thread_m_axi_x_in_AWID);

    SC_METHOD(thread_m_axi_x_in_AWLEN);

    SC_METHOD(thread_m_axi_x_in_AWLOCK);

    SC_METHOD(thread_m_axi_x_in_AWPROT);

    SC_METHOD(thread_m_axi_x_in_AWQOS);

    SC_METHOD(thread_m_axi_x_in_AWREGION);

    SC_METHOD(thread_m_axi_x_in_AWSIZE);

    SC_METHOD(thread_m_axi_x_in_AWUSER);

    SC_METHOD(thread_m_axi_x_in_AWVALID);

    SC_METHOD(thread_m_axi_x_in_BREADY);

    SC_METHOD(thread_m_axi_x_in_RREADY);
    sensitive << ( m_axi_x_in_RVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln14_fu_126_p2 );

    SC_METHOD(thread_m_axi_x_in_WDATA);

    SC_METHOD(thread_m_axi_x_in_WID);

    SC_METHOD(thread_m_axi_x_in_WLAST);

    SC_METHOD(thread_m_axi_x_in_WSTRB);

    SC_METHOD(thread_m_axi_x_in_WUSER);

    SC_METHOD(thread_m_axi_x_in_WVALID);

    SC_METHOD(thread_man_V_1_fu_183_p2);
    sensitive << ( p_Result_1_fu_179_p1 );

    SC_METHOD(thread_man_V_2_fu_189_p3);
    sensitive << ( p_Result_1_fu_179_p1 );
    sensitive << ( p_Result_s_fu_145_p3 );
    sensitive << ( man_V_1_fu_183_p2 );

    SC_METHOD(thread_or_ln581_fu_309_p2);
    sensitive << ( icmp_ln581_fu_209_p2 );
    sensitive << ( or_ln582_fu_273_p2 );

    SC_METHOD(thread_or_ln582_fu_273_p2);
    sensitive << ( icmp_ln571_fu_197_p2 );
    sensitive << ( icmp_ln582_fu_235_p2 );

    SC_METHOD(thread_or_ln603_1_fu_388_p2);
    sensitive << ( and_ln585_reg_457 );
    sensitive << ( and_ln582_fu_376_p2 );

    SC_METHOD(thread_or_ln603_2_fu_399_p2);
    sensitive << ( or_ln603_reg_467 );
    sensitive << ( or_ln603_1_fu_388_p2 );

    SC_METHOD(thread_or_ln603_fu_327_p2);
    sensitive << ( and_ln603_fu_321_p2 );
    sensitive << ( and_ln585_1_fu_303_p2 );

    SC_METHOD(thread_p_Result_1_fu_179_p1);
    sensitive << ( tmp_fu_171_p3 );

    SC_METHOD(thread_p_Result_s_fu_145_p3);
    sensitive << ( ireg_V_fu_138_p1 );

    SC_METHOD(thread_select_ln588_fu_265_p3);
    sensitive << ( tmp_6_fu_257_p3 );

    SC_METHOD(thread_select_ln603_1_fu_333_p3);
    sensitive << ( trunc_ln583_fu_241_p1 );
    sensitive << ( and_ln585_fu_297_p2 );
    sensitive << ( select_ln588_fu_265_p3 );

    SC_METHOD(thread_select_ln603_2_fu_393_p3);
    sensitive << ( or_ln603_reg_467 );
    sensitive << ( select_ln603_1_reg_473 );
    sensitive << ( select_ln603_fu_381_p3 );

    SC_METHOD(thread_select_ln603_fu_381_p3);
    sensitive << ( and_ln603_reg_462 );
    sensitive << ( shl_ln604_fu_366_p2 );
    sensitive << ( trunc_ln586_fu_358_p1 );

    SC_METHOD(thread_sext_ln581_fu_346_p1);
    sensitive << ( sh_amt_reg_442 );

    SC_METHOD(thread_sext_ln581cast_fu_362_p1);
    sensitive << ( sext_ln581_fu_346_p1 );

    SC_METHOD(thread_sh_amt_fu_227_p3);
    sensitive << ( icmp_ln581_fu_209_p2 );
    sensitive << ( add_ln581_fu_215_p2 );
    sensitive << ( sub_ln581_fu_221_p2 );

    SC_METHOD(thread_shl_ln604_fu_366_p2);
    sensitive << ( trunc_ln583_reg_452 );
    sensitive << ( sext_ln581cast_fu_362_p1 );

    SC_METHOD(thread_sub_ln581_fu_221_p2);
    sensitive << ( F2_fu_203_p2 );

    SC_METHOD(thread_tmp_6_fu_257_p3);
    sensitive << ( ireg_V_fu_138_p1 );

    SC_METHOD(thread_tmp_fu_171_p3);
    sensitive << ( trunc_ln565_fu_167_p1 );

    SC_METHOD(thread_trunc_ln556_fu_141_p1);
    sensitive << ( ireg_V_fu_138_p1 );

    SC_METHOD(thread_trunc_ln565_fu_167_p1);
    sensitive << ( ireg_V_fu_138_p1 );

    SC_METHOD(thread_trunc_ln583_fu_241_p1);
    sensitive << ( man_V_2_fu_189_p3 );

    SC_METHOD(thread_trunc_ln586_fu_358_p1);
    sensitive << ( ashr_ln586_fu_353_p2 );

    SC_METHOD(thread_x_in_blk_n_AR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_x_in_ARREADY );

    SC_METHOD(thread_x_in_blk_n_R);
    sensitive << ( m_axi_x_in_RVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln14_fu_126_p2 );

    SC_METHOD(thread_x_int_V_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln15_fu_341_p1 );

    SC_METHOD(thread_x_int_V_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_x_int_V_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( or_ln603_2_fu_399_p2 );
    sensitive << ( select_ln603_2_fu_393_p3 );

    SC_METHOD(thread_x_int_V_we0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_xor_ln571_fu_371_p2);
    sensitive << ( icmp_ln571_reg_437 );

    SC_METHOD(thread_xor_ln581_fu_315_p2);
    sensitive << ( or_ln581_fu_309_p2 );

    SC_METHOD(thread_xor_ln582_fu_279_p2);
    sensitive << ( or_ln582_fu_273_p2 );

    SC_METHOD(thread_xor_ln585_fu_291_p2);
    sensitive << ( icmp_ln585_fu_245_p2 );

    SC_METHOD(thread_zext_ln13_fu_115_p1);
    sensitive << ( x_in_offset );

    SC_METHOD(thread_zext_ln15_fu_341_p1);
    sensitive << ( i_0_reg_103 );

    SC_METHOD(thread_zext_ln461_fu_163_p1);
    sensitive << ( exp_tmp_V_fu_153_p4 );

    SC_METHOD(thread_zext_ln586_fu_349_p1);
    sensitive << ( sext_ln581_fu_346_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_x_in_ARREADY );
    sensitive << ( m_axi_x_in_RVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln14_fu_126_p2 );

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "copy_input_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_x_in_AWVALID, "(port)m_axi_x_in_AWVALID");
    sc_trace(mVcdFile, m_axi_x_in_AWREADY, "(port)m_axi_x_in_AWREADY");
    sc_trace(mVcdFile, m_axi_x_in_AWADDR, "(port)m_axi_x_in_AWADDR");
    sc_trace(mVcdFile, m_axi_x_in_AWID, "(port)m_axi_x_in_AWID");
    sc_trace(mVcdFile, m_axi_x_in_AWLEN, "(port)m_axi_x_in_AWLEN");
    sc_trace(mVcdFile, m_axi_x_in_AWSIZE, "(port)m_axi_x_in_AWSIZE");
    sc_trace(mVcdFile, m_axi_x_in_AWBURST, "(port)m_axi_x_in_AWBURST");
    sc_trace(mVcdFile, m_axi_x_in_AWLOCK, "(port)m_axi_x_in_AWLOCK");
    sc_trace(mVcdFile, m_axi_x_in_AWCACHE, "(port)m_axi_x_in_AWCACHE");
    sc_trace(mVcdFile, m_axi_x_in_AWPROT, "(port)m_axi_x_in_AWPROT");
    sc_trace(mVcdFile, m_axi_x_in_AWQOS, "(port)m_axi_x_in_AWQOS");
    sc_trace(mVcdFile, m_axi_x_in_AWREGION, "(port)m_axi_x_in_AWREGION");
    sc_trace(mVcdFile, m_axi_x_in_AWUSER, "(port)m_axi_x_in_AWUSER");
    sc_trace(mVcdFile, m_axi_x_in_WVALID, "(port)m_axi_x_in_WVALID");
    sc_trace(mVcdFile, m_axi_x_in_WREADY, "(port)m_axi_x_in_WREADY");
    sc_trace(mVcdFile, m_axi_x_in_WDATA, "(port)m_axi_x_in_WDATA");
    sc_trace(mVcdFile, m_axi_x_in_WSTRB, "(port)m_axi_x_in_WSTRB");
    sc_trace(mVcdFile, m_axi_x_in_WLAST, "(port)m_axi_x_in_WLAST");
    sc_trace(mVcdFile, m_axi_x_in_WID, "(port)m_axi_x_in_WID");
    sc_trace(mVcdFile, m_axi_x_in_WUSER, "(port)m_axi_x_in_WUSER");
    sc_trace(mVcdFile, m_axi_x_in_ARVALID, "(port)m_axi_x_in_ARVALID");
    sc_trace(mVcdFile, m_axi_x_in_ARREADY, "(port)m_axi_x_in_ARREADY");
    sc_trace(mVcdFile, m_axi_x_in_ARADDR, "(port)m_axi_x_in_ARADDR");
    sc_trace(mVcdFile, m_axi_x_in_ARID, "(port)m_axi_x_in_ARID");
    sc_trace(mVcdFile, m_axi_x_in_ARLEN, "(port)m_axi_x_in_ARLEN");
    sc_trace(mVcdFile, m_axi_x_in_ARSIZE, "(port)m_axi_x_in_ARSIZE");
    sc_trace(mVcdFile, m_axi_x_in_ARBURST, "(port)m_axi_x_in_ARBURST");
    sc_trace(mVcdFile, m_axi_x_in_ARLOCK, "(port)m_axi_x_in_ARLOCK");
    sc_trace(mVcdFile, m_axi_x_in_ARCACHE, "(port)m_axi_x_in_ARCACHE");
    sc_trace(mVcdFile, m_axi_x_in_ARPROT, "(port)m_axi_x_in_ARPROT");
    sc_trace(mVcdFile, m_axi_x_in_ARQOS, "(port)m_axi_x_in_ARQOS");
    sc_trace(mVcdFile, m_axi_x_in_ARREGION, "(port)m_axi_x_in_ARREGION");
    sc_trace(mVcdFile, m_axi_x_in_ARUSER, "(port)m_axi_x_in_ARUSER");
    sc_trace(mVcdFile, m_axi_x_in_RVALID, "(port)m_axi_x_in_RVALID");
    sc_trace(mVcdFile, m_axi_x_in_RREADY, "(port)m_axi_x_in_RREADY");
    sc_trace(mVcdFile, m_axi_x_in_RDATA, "(port)m_axi_x_in_RDATA");
    sc_trace(mVcdFile, m_axi_x_in_RLAST, "(port)m_axi_x_in_RLAST");
    sc_trace(mVcdFile, m_axi_x_in_RID, "(port)m_axi_x_in_RID");
    sc_trace(mVcdFile, m_axi_x_in_RUSER, "(port)m_axi_x_in_RUSER");
    sc_trace(mVcdFile, m_axi_x_in_RRESP, "(port)m_axi_x_in_RRESP");
    sc_trace(mVcdFile, m_axi_x_in_BVALID, "(port)m_axi_x_in_BVALID");
    sc_trace(mVcdFile, m_axi_x_in_BREADY, "(port)m_axi_x_in_BREADY");
    sc_trace(mVcdFile, m_axi_x_in_BRESP, "(port)m_axi_x_in_BRESP");
    sc_trace(mVcdFile, m_axi_x_in_BID, "(port)m_axi_x_in_BID");
    sc_trace(mVcdFile, m_axi_x_in_BUSER, "(port)m_axi_x_in_BUSER");
    sc_trace(mVcdFile, x_in_offset, "(port)x_in_offset");
    sc_trace(mVcdFile, x_int_V_address0, "(port)x_int_V_address0");
    sc_trace(mVcdFile, x_int_V_ce0, "(port)x_int_V_ce0");
    sc_trace(mVcdFile, x_int_V_we0, "(port)x_int_V_we0");
    sc_trace(mVcdFile, x_int_V_d0, "(port)x_int_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, x_in_blk_n_AR, "x_in_blk_n_AR");
    sc_trace(mVcdFile, x_in_blk_n_R, "x_in_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln14_fu_126_p2, "icmp_ln14_fu_126_p2");
    sc_trace(mVcdFile, i_fu_132_p2, "i_fu_132_p2");
    sc_trace(mVcdFile, i_reg_422, "i_reg_422");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, x_in_addr_read_reg_427, "x_in_addr_read_reg_427");
    sc_trace(mVcdFile, man_V_2_fu_189_p3, "man_V_2_fu_189_p3");
    sc_trace(mVcdFile, man_V_2_reg_432, "man_V_2_reg_432");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, icmp_ln571_fu_197_p2, "icmp_ln571_fu_197_p2");
    sc_trace(mVcdFile, icmp_ln571_reg_437, "icmp_ln571_reg_437");
    sc_trace(mVcdFile, sh_amt_fu_227_p3, "sh_amt_fu_227_p3");
    sc_trace(mVcdFile, sh_amt_reg_442, "sh_amt_reg_442");
    sc_trace(mVcdFile, icmp_ln582_fu_235_p2, "icmp_ln582_fu_235_p2");
    sc_trace(mVcdFile, icmp_ln582_reg_447, "icmp_ln582_reg_447");
    sc_trace(mVcdFile, trunc_ln583_fu_241_p1, "trunc_ln583_fu_241_p1");
    sc_trace(mVcdFile, trunc_ln583_reg_452, "trunc_ln583_reg_452");
    sc_trace(mVcdFile, and_ln585_fu_297_p2, "and_ln585_fu_297_p2");
    sc_trace(mVcdFile, and_ln585_reg_457, "and_ln585_reg_457");
    sc_trace(mVcdFile, and_ln603_fu_321_p2, "and_ln603_fu_321_p2");
    sc_trace(mVcdFile, and_ln603_reg_462, "and_ln603_reg_462");
    sc_trace(mVcdFile, or_ln603_fu_327_p2, "or_ln603_fu_327_p2");
    sc_trace(mVcdFile, or_ln603_reg_467, "or_ln603_reg_467");
    sc_trace(mVcdFile, select_ln603_1_fu_333_p3, "select_ln603_1_fu_333_p3");
    sc_trace(mVcdFile, select_ln603_1_reg_473, "select_ln603_1_reg_473");
    sc_trace(mVcdFile, i_0_reg_103, "i_0_reg_103");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, zext_ln15_fu_341_p1, "zext_ln15_fu_341_p1");
    sc_trace(mVcdFile, zext_ln13_fu_115_p1, "zext_ln13_fu_115_p1");
    sc_trace(mVcdFile, ireg_V_fu_138_p1, "ireg_V_fu_138_p1");
    sc_trace(mVcdFile, exp_tmp_V_fu_153_p4, "exp_tmp_V_fu_153_p4");
    sc_trace(mVcdFile, trunc_ln565_fu_167_p1, "trunc_ln565_fu_167_p1");
    sc_trace(mVcdFile, tmp_fu_171_p3, "tmp_fu_171_p3");
    sc_trace(mVcdFile, p_Result_1_fu_179_p1, "p_Result_1_fu_179_p1");
    sc_trace(mVcdFile, p_Result_s_fu_145_p3, "p_Result_s_fu_145_p3");
    sc_trace(mVcdFile, man_V_1_fu_183_p2, "man_V_1_fu_183_p2");
    sc_trace(mVcdFile, trunc_ln556_fu_141_p1, "trunc_ln556_fu_141_p1");
    sc_trace(mVcdFile, zext_ln461_fu_163_p1, "zext_ln461_fu_163_p1");
    sc_trace(mVcdFile, F2_fu_203_p2, "F2_fu_203_p2");
    sc_trace(mVcdFile, icmp_ln581_fu_209_p2, "icmp_ln581_fu_209_p2");
    sc_trace(mVcdFile, add_ln581_fu_215_p2, "add_ln581_fu_215_p2");
    sc_trace(mVcdFile, sub_ln581_fu_221_p2, "sub_ln581_fu_221_p2");
    sc_trace(mVcdFile, tmp_6_fu_257_p3, "tmp_6_fu_257_p3");
    sc_trace(mVcdFile, or_ln582_fu_273_p2, "or_ln582_fu_273_p2");
    sc_trace(mVcdFile, xor_ln582_fu_279_p2, "xor_ln582_fu_279_p2");
    sc_trace(mVcdFile, icmp_ln585_fu_245_p2, "icmp_ln585_fu_245_p2");
    sc_trace(mVcdFile, and_ln581_fu_285_p2, "and_ln581_fu_285_p2");
    sc_trace(mVcdFile, xor_ln585_fu_291_p2, "xor_ln585_fu_291_p2");
    sc_trace(mVcdFile, or_ln581_fu_309_p2, "or_ln581_fu_309_p2");
    sc_trace(mVcdFile, icmp_ln603_fu_251_p2, "icmp_ln603_fu_251_p2");
    sc_trace(mVcdFile, xor_ln581_fu_315_p2, "xor_ln581_fu_315_p2");
    sc_trace(mVcdFile, and_ln585_1_fu_303_p2, "and_ln585_1_fu_303_p2");
    sc_trace(mVcdFile, select_ln588_fu_265_p3, "select_ln588_fu_265_p3");
    sc_trace(mVcdFile, sext_ln581_fu_346_p1, "sext_ln581_fu_346_p1");
    sc_trace(mVcdFile, zext_ln586_fu_349_p1, "zext_ln586_fu_349_p1");
    sc_trace(mVcdFile, ashr_ln586_fu_353_p2, "ashr_ln586_fu_353_p2");
    sc_trace(mVcdFile, sext_ln581cast_fu_362_p1, "sext_ln581cast_fu_362_p1");
    sc_trace(mVcdFile, xor_ln571_fu_371_p2, "xor_ln571_fu_371_p2");
    sc_trace(mVcdFile, shl_ln604_fu_366_p2, "shl_ln604_fu_366_p2");
    sc_trace(mVcdFile, trunc_ln586_fu_358_p1, "trunc_ln586_fu_358_p1");
    sc_trace(mVcdFile, and_ln582_fu_376_p2, "and_ln582_fu_376_p2");
    sc_trace(mVcdFile, select_ln603_fu_381_p3, "select_ln603_fu_381_p3");
    sc_trace(mVcdFile, or_ln603_1_fu_388_p2, "or_ln603_1_fu_388_p2");
    sc_trace(mVcdFile, or_ln603_2_fu_399_p2, "or_ln603_2_fu_399_p2");
    sc_trace(mVcdFile, select_ln603_2_fu_393_p3, "select_ln603_2_fu_393_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

copy_input::~copy_input() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void copy_input::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_0_reg_103 = i_reg_422.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_0_reg_103 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        and_ln585_reg_457 = and_ln585_fu_297_p2.read();
        and_ln603_reg_462 = and_ln603_fu_321_p2.read();
        icmp_ln571_reg_437 = icmp_ln571_fu_197_p2.read();
        icmp_ln582_reg_447 = icmp_ln582_fu_235_p2.read();
        man_V_2_reg_432 = man_V_2_fu_189_p3.read();
        or_ln603_reg_467 = or_ln603_fu_327_p2.read();
        select_ln603_1_reg_473 = select_ln603_1_fu_333_p3.read();
        sh_amt_reg_442 = sh_amt_fu_227_p3.read();
        trunc_ln583_reg_452 = trunc_ln583_fu_241_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_RVALID.read())))) {
        i_reg_422 = i_fu_132_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_RVALID.read())))) {
        x_in_addr_read_reg_427 = m_axi_x_in_RDATA.read();
    }
}

void copy_input::thread_F2_fu_203_p2() {
    F2_fu_203_p2 = (!ap_const_lv12_433.is_01() || !zext_ln461_fu_163_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_433) - sc_biguint<12>(zext_ln461_fu_163_p1.read()));
}

void copy_input::thread_add_ln581_fu_215_p2() {
    add_ln581_fu_215_p2 = (!ap_const_lv12_FF8.is_01() || !F2_fu_203_p2.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_FF8) + sc_biguint<12>(F2_fu_203_p2.read()));
}

void copy_input::thread_and_ln581_fu_285_p2() {
    and_ln581_fu_285_p2 = (icmp_ln581_fu_209_p2.read() & xor_ln582_fu_279_p2.read());
}

void copy_input::thread_and_ln582_fu_376_p2() {
    and_ln582_fu_376_p2 = (icmp_ln582_reg_447.read() & xor_ln571_fu_371_p2.read());
}

void copy_input::thread_and_ln585_1_fu_303_p2() {
    and_ln585_1_fu_303_p2 = (and_ln581_fu_285_p2.read() & icmp_ln585_fu_245_p2.read());
}

void copy_input::thread_and_ln585_fu_297_p2() {
    and_ln585_fu_297_p2 = (and_ln581_fu_285_p2.read() & xor_ln585_fu_291_p2.read());
}

void copy_input::thread_and_ln603_fu_321_p2() {
    and_ln603_fu_321_p2 = (icmp_ln603_fu_251_p2.read() & xor_ln581_fu_315_p2.read());
}

void copy_input::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void copy_input::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void copy_input::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void copy_input::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void copy_input::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void copy_input::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_RVALID.read()));
}

void copy_input::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_RVALID.read())) && 
          esl_seteq<1,1,1>(icmp_ln14_fu_126_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void copy_input::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void copy_input::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_RVALID.read())) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_126_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void copy_input::thread_ashr_ln586_fu_353_p2() {
    ashr_ln586_fu_353_p2 = (!man_V_2_reg_432.read().is_01() || !zext_ln586_fu_349_p1.read().is_01())? sc_lv<54>(): sc_bigint<54>(man_V_2_reg_432.read()) >> (unsigned short)zext_ln586_fu_349_p1.read().to_uint();
}

void copy_input::thread_exp_tmp_V_fu_153_p4() {
    exp_tmp_V_fu_153_p4 = ireg_V_fu_138_p1.read().range(62, 52);
}

void copy_input::thread_i_fu_132_p2() {
    i_fu_132_p2 = (!i_0_reg_103.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_103.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void copy_input::thread_icmp_ln14_fu_126_p2() {
    icmp_ln14_fu_126_p2 = (!i_0_reg_103.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_103.read() == ap_const_lv4_C);
}

void copy_input::thread_icmp_ln571_fu_197_p2() {
    icmp_ln571_fu_197_p2 = (!trunc_ln556_fu_141_p1.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln556_fu_141_p1.read() == ap_const_lv63_0);
}

void copy_input::thread_icmp_ln581_fu_209_p2() {
    icmp_ln581_fu_209_p2 = (!F2_fu_203_p2.read().is_01() || !ap_const_lv12_8.is_01())? sc_lv<1>(): (sc_bigint<12>(F2_fu_203_p2.read()) > sc_bigint<12>(ap_const_lv12_8));
}

void copy_input::thread_icmp_ln582_fu_235_p2() {
    icmp_ln582_fu_235_p2 = (!F2_fu_203_p2.read().is_01() || !ap_const_lv12_8.is_01())? sc_lv<1>(): sc_lv<1>(F2_fu_203_p2.read() == ap_const_lv12_8);
}

void copy_input::thread_icmp_ln585_fu_245_p2() {
    icmp_ln585_fu_245_p2 = (!sh_amt_fu_227_p3.read().is_01() || !ap_const_lv12_36.is_01())? sc_lv<1>(): (sc_biguint<12>(sh_amt_fu_227_p3.read()) < sc_biguint<12>(ap_const_lv12_36));
}

void copy_input::thread_icmp_ln603_fu_251_p2() {
    icmp_ln603_fu_251_p2 = (!sh_amt_fu_227_p3.read().is_01() || !ap_const_lv12_C.is_01())? sc_lv<1>(): (sc_biguint<12>(sh_amt_fu_227_p3.read()) < sc_biguint<12>(ap_const_lv12_C));
}

void copy_input::thread_ireg_V_fu_138_p1() {
    ireg_V_fu_138_p1 = x_in_addr_read_reg_427.read();
}

void copy_input::thread_m_axi_x_in_ARADDR() {
    m_axi_x_in_ARADDR =  (sc_lv<32>) (zext_ln13_fu_115_p1.read());
}

void copy_input::thread_m_axi_x_in_ARBURST() {
    m_axi_x_in_ARBURST = ap_const_lv2_0;
}

void copy_input::thread_m_axi_x_in_ARCACHE() {
    m_axi_x_in_ARCACHE = ap_const_lv4_0;
}

void copy_input::thread_m_axi_x_in_ARID() {
    m_axi_x_in_ARID = ap_const_lv1_0;
}

void copy_input::thread_m_axi_x_in_ARLEN() {
    m_axi_x_in_ARLEN = ap_const_lv32_C;
}

void copy_input::thread_m_axi_x_in_ARLOCK() {
    m_axi_x_in_ARLOCK = ap_const_lv2_0;
}

void copy_input::thread_m_axi_x_in_ARPROT() {
    m_axi_x_in_ARPROT = ap_const_lv3_0;
}

void copy_input::thread_m_axi_x_in_ARQOS() {
    m_axi_x_in_ARQOS = ap_const_lv4_0;
}

void copy_input::thread_m_axi_x_in_ARREGION() {
    m_axi_x_in_ARREGION = ap_const_lv4_0;
}

void copy_input::thread_m_axi_x_in_ARSIZE() {
    m_axi_x_in_ARSIZE = ap_const_lv3_0;
}

void copy_input::thread_m_axi_x_in_ARUSER() {
    m_axi_x_in_ARUSER = ap_const_lv1_0;
}

void copy_input::thread_m_axi_x_in_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_ARREADY.read())))) {
        m_axi_x_in_ARVALID = ap_const_logic_1;
    } else {
        m_axi_x_in_ARVALID = ap_const_logic_0;
    }
}

void copy_input::thread_m_axi_x_in_AWADDR() {
    m_axi_x_in_AWADDR = ap_const_lv32_0;
}

void copy_input::thread_m_axi_x_in_AWBURST() {
    m_axi_x_in_AWBURST = ap_const_lv2_0;
}

void copy_input::thread_m_axi_x_in_AWCACHE() {
    m_axi_x_in_AWCACHE = ap_const_lv4_0;
}

void copy_input::thread_m_axi_x_in_AWID() {
    m_axi_x_in_AWID = ap_const_lv1_0;
}

void copy_input::thread_m_axi_x_in_AWLEN() {
    m_axi_x_in_AWLEN = ap_const_lv32_0;
}

void copy_input::thread_m_axi_x_in_AWLOCK() {
    m_axi_x_in_AWLOCK = ap_const_lv2_0;
}

void copy_input::thread_m_axi_x_in_AWPROT() {
    m_axi_x_in_AWPROT = ap_const_lv3_0;
}

void copy_input::thread_m_axi_x_in_AWQOS() {
    m_axi_x_in_AWQOS = ap_const_lv4_0;
}

void copy_input::thread_m_axi_x_in_AWREGION() {
    m_axi_x_in_AWREGION = ap_const_lv4_0;
}

void copy_input::thread_m_axi_x_in_AWSIZE() {
    m_axi_x_in_AWSIZE = ap_const_lv3_0;
}

void copy_input::thread_m_axi_x_in_AWUSER() {
    m_axi_x_in_AWUSER = ap_const_lv1_0;
}

void copy_input::thread_m_axi_x_in_AWVALID() {
    m_axi_x_in_AWVALID = ap_const_logic_0;
}

void copy_input::thread_m_axi_x_in_BREADY() {
    m_axi_x_in_BREADY = ap_const_logic_0;
}

void copy_input::thread_m_axi_x_in_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_RVALID.read())))) {
        m_axi_x_in_RREADY = ap_const_logic_1;
    } else {
        m_axi_x_in_RREADY = ap_const_logic_0;
    }
}

void copy_input::thread_m_axi_x_in_WDATA() {
    m_axi_x_in_WDATA = ap_const_lv64_0;
}

void copy_input::thread_m_axi_x_in_WID() {
    m_axi_x_in_WID = ap_const_lv1_0;
}

void copy_input::thread_m_axi_x_in_WLAST() {
    m_axi_x_in_WLAST = ap_const_logic_0;
}

void copy_input::thread_m_axi_x_in_WSTRB() {
    m_axi_x_in_WSTRB = ap_const_lv8_0;
}

void copy_input::thread_m_axi_x_in_WUSER() {
    m_axi_x_in_WUSER = ap_const_lv1_0;
}

void copy_input::thread_m_axi_x_in_WVALID() {
    m_axi_x_in_WVALID = ap_const_logic_0;
}

void copy_input::thread_man_V_1_fu_183_p2() {
    man_V_1_fu_183_p2 = (!ap_const_lv54_0.is_01() || !p_Result_1_fu_179_p1.read().is_01())? sc_lv<54>(): (sc_biguint<54>(ap_const_lv54_0) - sc_biguint<54>(p_Result_1_fu_179_p1.read()));
}

void copy_input::thread_man_V_2_fu_189_p3() {
    man_V_2_fu_189_p3 = (!p_Result_s_fu_145_p3.read()[0].is_01())? sc_lv<54>(): ((p_Result_s_fu_145_p3.read()[0].to_bool())? man_V_1_fu_183_p2.read(): p_Result_1_fu_179_p1.read());
}

void copy_input::thread_or_ln581_fu_309_p2() {
    or_ln581_fu_309_p2 = (or_ln582_fu_273_p2.read() | icmp_ln581_fu_209_p2.read());
}

void copy_input::thread_or_ln582_fu_273_p2() {
    or_ln582_fu_273_p2 = (icmp_ln571_fu_197_p2.read() | icmp_ln582_fu_235_p2.read());
}

void copy_input::thread_or_ln603_1_fu_388_p2() {
    or_ln603_1_fu_388_p2 = (and_ln585_reg_457.read() | and_ln582_fu_376_p2.read());
}

void copy_input::thread_or_ln603_2_fu_399_p2() {
    or_ln603_2_fu_399_p2 = (or_ln603_reg_467.read() | or_ln603_1_fu_388_p2.read());
}

void copy_input::thread_or_ln603_fu_327_p2() {
    or_ln603_fu_327_p2 = (and_ln603_fu_321_p2.read() | and_ln585_1_fu_303_p2.read());
}

void copy_input::thread_p_Result_1_fu_179_p1() {
    p_Result_1_fu_179_p1 = esl_zext<54,53>(tmp_fu_171_p3.read());
}

void copy_input::thread_p_Result_s_fu_145_p3() {
    p_Result_s_fu_145_p3 = ireg_V_fu_138_p1.read().range(63, 63);
}

void copy_input::thread_select_ln588_fu_265_p3() {
    select_ln588_fu_265_p3 = (!tmp_6_fu_257_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_6_fu_257_p3.read()[0].to_bool())? ap_const_lv12_FFF: ap_const_lv12_0);
}

void copy_input::thread_select_ln603_1_fu_333_p3() {
    select_ln603_1_fu_333_p3 = (!and_ln585_fu_297_p2.read()[0].is_01())? sc_lv<12>(): ((and_ln585_fu_297_p2.read()[0].to_bool())? select_ln588_fu_265_p3.read(): trunc_ln583_fu_241_p1.read());
}

void copy_input::thread_select_ln603_2_fu_393_p3() {
    select_ln603_2_fu_393_p3 = (!or_ln603_reg_467.read()[0].is_01())? sc_lv<12>(): ((or_ln603_reg_467.read()[0].to_bool())? select_ln603_fu_381_p3.read(): select_ln603_1_reg_473.read());
}

void copy_input::thread_select_ln603_fu_381_p3() {
    select_ln603_fu_381_p3 = (!and_ln603_reg_462.read()[0].is_01())? sc_lv<12>(): ((and_ln603_reg_462.read()[0].to_bool())? shl_ln604_fu_366_p2.read(): trunc_ln586_fu_358_p1.read());
}

void copy_input::thread_sext_ln581_fu_346_p1() {
    sext_ln581_fu_346_p1 = esl_sext<32,12>(sh_amt_reg_442.read());
}

void copy_input::thread_sext_ln581cast_fu_362_p1() {
    sext_ln581cast_fu_362_p1 = sext_ln581_fu_346_p1.read().range(12-1, 0);
}

void copy_input::thread_sh_amt_fu_227_p3() {
    sh_amt_fu_227_p3 = (!icmp_ln581_fu_209_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln581_fu_209_p2.read()[0].to_bool())? add_ln581_fu_215_p2.read(): sub_ln581_fu_221_p2.read());
}

void copy_input::thread_shl_ln604_fu_366_p2() {
    shl_ln604_fu_366_p2 = (!sext_ln581cast_fu_362_p1.read().is_01())? sc_lv<12>(): trunc_ln583_reg_452.read() << (unsigned short)sext_ln581cast_fu_362_p1.read().to_uint();
}

void copy_input::thread_sub_ln581_fu_221_p2() {
    sub_ln581_fu_221_p2 = (!ap_const_lv12_8.is_01() || !F2_fu_203_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_8) - sc_biguint<12>(F2_fu_203_p2.read()));
}

void copy_input::thread_tmp_6_fu_257_p3() {
    tmp_6_fu_257_p3 = ireg_V_fu_138_p1.read().range(63, 63);
}

void copy_input::thread_tmp_fu_171_p3() {
    tmp_fu_171_p3 = esl_concat<1,52>(ap_const_lv1_1, trunc_ln565_fu_167_p1.read());
}

void copy_input::thread_trunc_ln556_fu_141_p1() {
    trunc_ln556_fu_141_p1 = ireg_V_fu_138_p1.read().range(63-1, 0);
}

void copy_input::thread_trunc_ln565_fu_167_p1() {
    trunc_ln565_fu_167_p1 = ireg_V_fu_138_p1.read().range(52-1, 0);
}

void copy_input::thread_trunc_ln583_fu_241_p1() {
    trunc_ln583_fu_241_p1 = man_V_2_fu_189_p3.read().range(12-1, 0);
}

void copy_input::thread_trunc_ln586_fu_358_p1() {
    trunc_ln586_fu_358_p1 = ashr_ln586_fu_353_p2.read().range(12-1, 0);
}

void copy_input::thread_x_in_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_in_blk_n_AR = m_axi_x_in_ARREADY.read();
    } else {
        x_in_blk_n_AR = ap_const_logic_1;
    }
}

void copy_input::thread_x_in_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()))) {
        x_in_blk_n_R = m_axi_x_in_RVALID.read();
    } else {
        x_in_blk_n_R = ap_const_logic_1;
    }
}

void copy_input::thread_x_int_V_address0() {
    x_int_V_address0 =  (sc_lv<4>) (zext_ln15_fu_341_p1.read());
}

void copy_input::thread_x_int_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        x_int_V_ce0 = ap_const_logic_1;
    } else {
        x_int_V_ce0 = ap_const_logic_0;
    }
}

void copy_input::thread_x_int_V_d0() {
    x_int_V_d0 = (!or_ln603_2_fu_399_p2.read()[0].is_01())? sc_lv<12>(): ((or_ln603_2_fu_399_p2.read()[0].to_bool())? select_ln603_2_fu_393_p3.read(): ap_const_lv12_0);
}

void copy_input::thread_x_int_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        x_int_V_we0 = ap_const_logic_1;
    } else {
        x_int_V_we0 = ap_const_logic_0;
    }
}

void copy_input::thread_xor_ln571_fu_371_p2() {
    xor_ln571_fu_371_p2 = (icmp_ln571_reg_437.read() ^ ap_const_lv1_1);
}

void copy_input::thread_xor_ln581_fu_315_p2() {
    xor_ln581_fu_315_p2 = (or_ln581_fu_309_p2.read() ^ ap_const_lv1_1);
}

void copy_input::thread_xor_ln582_fu_279_p2() {
    xor_ln582_fu_279_p2 = (or_ln582_fu_273_p2.read() ^ ap_const_lv1_1);
}

void copy_input::thread_xor_ln585_fu_291_p2() {
    xor_ln585_fu_291_p2 = (icmp_ln585_fu_245_p2.read() ^ ap_const_lv1_1);
}

void copy_input::thread_zext_ln13_fu_115_p1() {
    zext_ln13_fu_115_p1 = esl_zext<64,29>(x_in_offset.read());
}

void copy_input::thread_zext_ln15_fu_341_p1() {
    zext_ln15_fu_341_p1 = esl_zext<64,4>(i_0_reg_103.read());
}

void copy_input::thread_zext_ln461_fu_163_p1() {
    zext_ln461_fu_163_p1 = esl_zext<12,11>(exp_tmp_V_fu_153_p4.read());
}

void copy_input::thread_zext_ln586_fu_349_p1() {
    zext_ln586_fu_349_p1 = esl_zext<54,32>(sext_ln581_fu_346_p1.read());
}

void copy_input::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_RVALID.read())) && esl_seteq<1,1,1>(icmp_ln14_fu_126_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_126_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_x_in_RVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXX";
            break;
    }
}

}

