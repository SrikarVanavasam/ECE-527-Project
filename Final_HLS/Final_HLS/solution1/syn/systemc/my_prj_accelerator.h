// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _my_prj_accelerator_HH_
#define _my_prj_accelerator_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "decision_function_90.h"
#include "copy_output.h"
#include "copy_input.h"
#include "my_prj_acceleratofYi.h"
#include "my_prj_accelerator_control_s_axi.h"
#include "my_prj_accelerator_gmem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 64,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct my_prj_accelerator : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;


    // Module declarations
    my_prj_accelerator(sc_module_name name);
    SC_HAS_PROCESS(my_prj_accelerator);

    ~my_prj_accelerator();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    my_prj_accelerator_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* my_prj_accelerator_control_s_axi_U;
    my_prj_accelerator_gmem_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* my_prj_accelerator_gmem_m_axi_U;
    my_prj_acceleratofYi* x_int_V_U;
    decision_function_90* grp_decision_function_90_fu_74;
    copy_output* grp_copy_output_fu_79;
    copy_input* grp_copy_input_fu_88;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > x;
    sc_signal< sc_lv<32> > score;
    sc_signal< sc_logic > gmem_AWVALID;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_logic > gmem_WVALID;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_logic > gmem_ARVALID;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_logic > gmem_RREADY;
    sc_signal< sc_lv<64> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_logic > gmem_BREADY;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_lv<29> > score3_reg_116;
    sc_signal< sc_lv<29> > x1_reg_121;
    sc_signal< sc_lv<12> > grp_decision_function_90_fu_74_ap_return;
    sc_signal< sc_lv<12> > score_int_0_V_reg_126;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_decision_function_90_fu_74_ap_ready;
    sc_signal< sc_logic > grp_decision_function_90_fu_74_ap_done;
    sc_signal< sc_lv<4> > x_int_V_address0;
    sc_signal< sc_logic > x_int_V_ce0;
    sc_signal< sc_logic > x_int_V_we0;
    sc_signal< sc_lv<12> > x_int_V_q0;
    sc_signal< sc_logic > x_int_V_ce1;
    sc_signal< sc_lv<12> > x_int_V_q1;
    sc_signal< sc_logic > grp_decision_function_90_fu_74_ap_start;
    sc_signal< sc_logic > grp_decision_function_90_fu_74_ap_idle;
    sc_signal< sc_lv<4> > grp_decision_function_90_fu_74_x_V_address0;
    sc_signal< sc_logic > grp_decision_function_90_fu_74_x_V_ce0;
    sc_signal< sc_lv<4> > grp_decision_function_90_fu_74_x_V_address1;
    sc_signal< sc_logic > grp_decision_function_90_fu_74_x_V_ce1;
    sc_signal< sc_logic > grp_copy_output_fu_79_ap_start;
    sc_signal< sc_logic > grp_copy_output_fu_79_ap_done;
    sc_signal< sc_logic > grp_copy_output_fu_79_ap_idle;
    sc_signal< sc_logic > grp_copy_output_fu_79_ap_ready;
    sc_signal< sc_logic > grp_copy_output_fu_79_m_axi_score_out_AWVALID;
    sc_signal< sc_lv<32> > grp_copy_output_fu_79_m_axi_score_out_AWADDR;
    sc_signal< sc_lv<1> > grp_copy_output_fu_79_m_axi_score_out_AWID;
    sc_signal< sc_lv<32> > grp_copy_output_fu_79_m_axi_score_out_AWLEN;
    sc_signal< sc_lv<3> > grp_copy_output_fu_79_m_axi_score_out_AWSIZE;
    sc_signal< sc_lv<2> > grp_copy_output_fu_79_m_axi_score_out_AWBURST;
    sc_signal< sc_lv<2> > grp_copy_output_fu_79_m_axi_score_out_AWLOCK;
    sc_signal< sc_lv<4> > grp_copy_output_fu_79_m_axi_score_out_AWCACHE;
    sc_signal< sc_lv<3> > grp_copy_output_fu_79_m_axi_score_out_AWPROT;
    sc_signal< sc_lv<4> > grp_copy_output_fu_79_m_axi_score_out_AWQOS;
    sc_signal< sc_lv<4> > grp_copy_output_fu_79_m_axi_score_out_AWREGION;
    sc_signal< sc_lv<1> > grp_copy_output_fu_79_m_axi_score_out_AWUSER;
    sc_signal< sc_logic > grp_copy_output_fu_79_m_axi_score_out_WVALID;
    sc_signal< sc_lv<64> > grp_copy_output_fu_79_m_axi_score_out_WDATA;
    sc_signal< sc_lv<8> > grp_copy_output_fu_79_m_axi_score_out_WSTRB;
    sc_signal< sc_logic > grp_copy_output_fu_79_m_axi_score_out_WLAST;
    sc_signal< sc_lv<1> > grp_copy_output_fu_79_m_axi_score_out_WID;
    sc_signal< sc_lv<1> > grp_copy_output_fu_79_m_axi_score_out_WUSER;
    sc_signal< sc_logic > grp_copy_output_fu_79_m_axi_score_out_ARVALID;
    sc_signal< sc_lv<32> > grp_copy_output_fu_79_m_axi_score_out_ARADDR;
    sc_signal< sc_lv<1> > grp_copy_output_fu_79_m_axi_score_out_ARID;
    sc_signal< sc_lv<32> > grp_copy_output_fu_79_m_axi_score_out_ARLEN;
    sc_signal< sc_lv<3> > grp_copy_output_fu_79_m_axi_score_out_ARSIZE;
    sc_signal< sc_lv<2> > grp_copy_output_fu_79_m_axi_score_out_ARBURST;
    sc_signal< sc_lv<2> > grp_copy_output_fu_79_m_axi_score_out_ARLOCK;
    sc_signal< sc_lv<4> > grp_copy_output_fu_79_m_axi_score_out_ARCACHE;
    sc_signal< sc_lv<3> > grp_copy_output_fu_79_m_axi_score_out_ARPROT;
    sc_signal< sc_lv<4> > grp_copy_output_fu_79_m_axi_score_out_ARQOS;
    sc_signal< sc_lv<4> > grp_copy_output_fu_79_m_axi_score_out_ARREGION;
    sc_signal< sc_lv<1> > grp_copy_output_fu_79_m_axi_score_out_ARUSER;
    sc_signal< sc_logic > grp_copy_output_fu_79_m_axi_score_out_RREADY;
    sc_signal< sc_logic > grp_copy_output_fu_79_m_axi_score_out_BREADY;
    sc_signal< sc_logic > grp_copy_input_fu_88_ap_start;
    sc_signal< sc_logic > grp_copy_input_fu_88_ap_done;
    sc_signal< sc_logic > grp_copy_input_fu_88_ap_idle;
    sc_signal< sc_logic > grp_copy_input_fu_88_ap_ready;
    sc_signal< sc_logic > grp_copy_input_fu_88_m_axi_x_in_AWVALID;
    sc_signal< sc_lv<32> > grp_copy_input_fu_88_m_axi_x_in_AWADDR;
    sc_signal< sc_lv<1> > grp_copy_input_fu_88_m_axi_x_in_AWID;
    sc_signal< sc_lv<32> > grp_copy_input_fu_88_m_axi_x_in_AWLEN;
    sc_signal< sc_lv<3> > grp_copy_input_fu_88_m_axi_x_in_AWSIZE;
    sc_signal< sc_lv<2> > grp_copy_input_fu_88_m_axi_x_in_AWBURST;
    sc_signal< sc_lv<2> > grp_copy_input_fu_88_m_axi_x_in_AWLOCK;
    sc_signal< sc_lv<4> > grp_copy_input_fu_88_m_axi_x_in_AWCACHE;
    sc_signal< sc_lv<3> > grp_copy_input_fu_88_m_axi_x_in_AWPROT;
    sc_signal< sc_lv<4> > grp_copy_input_fu_88_m_axi_x_in_AWQOS;
    sc_signal< sc_lv<4> > grp_copy_input_fu_88_m_axi_x_in_AWREGION;
    sc_signal< sc_lv<1> > grp_copy_input_fu_88_m_axi_x_in_AWUSER;
    sc_signal< sc_logic > grp_copy_input_fu_88_m_axi_x_in_WVALID;
    sc_signal< sc_lv<64> > grp_copy_input_fu_88_m_axi_x_in_WDATA;
    sc_signal< sc_lv<8> > grp_copy_input_fu_88_m_axi_x_in_WSTRB;
    sc_signal< sc_logic > grp_copy_input_fu_88_m_axi_x_in_WLAST;
    sc_signal< sc_lv<1> > grp_copy_input_fu_88_m_axi_x_in_WID;
    sc_signal< sc_lv<1> > grp_copy_input_fu_88_m_axi_x_in_WUSER;
    sc_signal< sc_logic > grp_copy_input_fu_88_m_axi_x_in_ARVALID;
    sc_signal< sc_lv<32> > grp_copy_input_fu_88_m_axi_x_in_ARADDR;
    sc_signal< sc_lv<1> > grp_copy_input_fu_88_m_axi_x_in_ARID;
    sc_signal< sc_lv<32> > grp_copy_input_fu_88_m_axi_x_in_ARLEN;
    sc_signal< sc_lv<3> > grp_copy_input_fu_88_m_axi_x_in_ARSIZE;
    sc_signal< sc_lv<2> > grp_copy_input_fu_88_m_axi_x_in_ARBURST;
    sc_signal< sc_lv<2> > grp_copy_input_fu_88_m_axi_x_in_ARLOCK;
    sc_signal< sc_lv<4> > grp_copy_input_fu_88_m_axi_x_in_ARCACHE;
    sc_signal< sc_lv<3> > grp_copy_input_fu_88_m_axi_x_in_ARPROT;
    sc_signal< sc_lv<4> > grp_copy_input_fu_88_m_axi_x_in_ARQOS;
    sc_signal< sc_lv<4> > grp_copy_input_fu_88_m_axi_x_in_ARREGION;
    sc_signal< sc_lv<1> > grp_copy_input_fu_88_m_axi_x_in_ARUSER;
    sc_signal< sc_logic > grp_copy_input_fu_88_m_axi_x_in_RREADY;
    sc_signal< sc_logic > grp_copy_input_fu_88_m_axi_x_in_BREADY;
    sc_signal< sc_lv<4> > grp_copy_input_fu_88_x_int_V_address0;
    sc_signal< sc_logic > grp_copy_input_fu_88_x_int_V_ce0;
    sc_signal< sc_logic > grp_copy_input_fu_88_x_int_V_we0;
    sc_signal< sc_lv<12> > grp_copy_input_fu_88_x_int_V_d0;
    sc_signal< sc_logic > grp_decision_function_90_fu_74_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_copy_output_fu_79_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_copy_input_fu_88_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_gmem_ARVALID();
    void thread_gmem_AWVALID();
    void thread_gmem_BREADY();
    void thread_gmem_RREADY();
    void thread_gmem_WVALID();
    void thread_grp_copy_input_fu_88_ap_start();
    void thread_grp_copy_output_fu_79_ap_start();
    void thread_grp_decision_function_90_fu_74_ap_start();
    void thread_x_int_V_address0();
    void thread_x_int_V_ce0();
    void thread_x_int_V_ce1();
    void thread_x_int_V_we0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
