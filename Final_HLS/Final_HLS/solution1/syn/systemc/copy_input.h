// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _copy_input_HH_
#define _copy_input_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct copy_input : public sc_module {
    // Port declarations 56
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_x_in_AWVALID;
    sc_in< sc_logic > m_axi_x_in_AWREADY;
    sc_out< sc_lv<32> > m_axi_x_in_AWADDR;
    sc_out< sc_lv<1> > m_axi_x_in_AWID;
    sc_out< sc_lv<32> > m_axi_x_in_AWLEN;
    sc_out< sc_lv<3> > m_axi_x_in_AWSIZE;
    sc_out< sc_lv<2> > m_axi_x_in_AWBURST;
    sc_out< sc_lv<2> > m_axi_x_in_AWLOCK;
    sc_out< sc_lv<4> > m_axi_x_in_AWCACHE;
    sc_out< sc_lv<3> > m_axi_x_in_AWPROT;
    sc_out< sc_lv<4> > m_axi_x_in_AWQOS;
    sc_out< sc_lv<4> > m_axi_x_in_AWREGION;
    sc_out< sc_lv<1> > m_axi_x_in_AWUSER;
    sc_out< sc_logic > m_axi_x_in_WVALID;
    sc_in< sc_logic > m_axi_x_in_WREADY;
    sc_out< sc_lv<64> > m_axi_x_in_WDATA;
    sc_out< sc_lv<8> > m_axi_x_in_WSTRB;
    sc_out< sc_logic > m_axi_x_in_WLAST;
    sc_out< sc_lv<1> > m_axi_x_in_WID;
    sc_out< sc_lv<1> > m_axi_x_in_WUSER;
    sc_out< sc_logic > m_axi_x_in_ARVALID;
    sc_in< sc_logic > m_axi_x_in_ARREADY;
    sc_out< sc_lv<32> > m_axi_x_in_ARADDR;
    sc_out< sc_lv<1> > m_axi_x_in_ARID;
    sc_out< sc_lv<32> > m_axi_x_in_ARLEN;
    sc_out< sc_lv<3> > m_axi_x_in_ARSIZE;
    sc_out< sc_lv<2> > m_axi_x_in_ARBURST;
    sc_out< sc_lv<2> > m_axi_x_in_ARLOCK;
    sc_out< sc_lv<4> > m_axi_x_in_ARCACHE;
    sc_out< sc_lv<3> > m_axi_x_in_ARPROT;
    sc_out< sc_lv<4> > m_axi_x_in_ARQOS;
    sc_out< sc_lv<4> > m_axi_x_in_ARREGION;
    sc_out< sc_lv<1> > m_axi_x_in_ARUSER;
    sc_in< sc_logic > m_axi_x_in_RVALID;
    sc_out< sc_logic > m_axi_x_in_RREADY;
    sc_in< sc_lv<64> > m_axi_x_in_RDATA;
    sc_in< sc_logic > m_axi_x_in_RLAST;
    sc_in< sc_lv<1> > m_axi_x_in_RID;
    sc_in< sc_lv<1> > m_axi_x_in_RUSER;
    sc_in< sc_lv<2> > m_axi_x_in_RRESP;
    sc_in< sc_logic > m_axi_x_in_BVALID;
    sc_out< sc_logic > m_axi_x_in_BREADY;
    sc_in< sc_lv<2> > m_axi_x_in_BRESP;
    sc_in< sc_lv<1> > m_axi_x_in_BID;
    sc_in< sc_lv<1> > m_axi_x_in_BUSER;
    sc_in< sc_lv<29> > x_in_offset;
    sc_out< sc_lv<4> > x_int_V_address0;
    sc_out< sc_logic > x_int_V_ce0;
    sc_out< sc_logic > x_int_V_we0;
    sc_out< sc_lv<12> > x_int_V_d0;


    // Module declarations
    copy_input(sc_module_name name);
    SC_HAS_PROCESS(copy_input);

    ~copy_input();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > x_in_blk_n_AR;
    sc_signal< sc_logic > x_in_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln14_fu_126_p2;
    sc_signal< sc_lv<4> > i_fu_132_p2;
    sc_signal< sc_lv<4> > i_reg_422;
    sc_signal< bool > ap_block_state8;
    sc_signal< sc_lv<64> > x_in_addr_read_reg_427;
    sc_signal< sc_lv<54> > man_V_2_fu_189_p3;
    sc_signal< sc_lv<54> > man_V_2_reg_432;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > icmp_ln571_fu_197_p2;
    sc_signal< sc_lv<1> > icmp_ln571_reg_437;
    sc_signal< sc_lv<12> > sh_amt_fu_227_p3;
    sc_signal< sc_lv<12> > sh_amt_reg_442;
    sc_signal< sc_lv<1> > icmp_ln582_fu_235_p2;
    sc_signal< sc_lv<1> > icmp_ln582_reg_447;
    sc_signal< sc_lv<12> > trunc_ln583_fu_241_p1;
    sc_signal< sc_lv<12> > trunc_ln583_reg_452;
    sc_signal< sc_lv<1> > and_ln585_fu_297_p2;
    sc_signal< sc_lv<1> > and_ln585_reg_457;
    sc_signal< sc_lv<1> > and_ln603_fu_321_p2;
    sc_signal< sc_lv<1> > and_ln603_reg_462;
    sc_signal< sc_lv<1> > or_ln603_fu_327_p2;
    sc_signal< sc_lv<1> > or_ln603_reg_467;
    sc_signal< sc_lv<12> > select_ln603_1_fu_333_p3;
    sc_signal< sc_lv<12> > select_ln603_1_reg_473;
    sc_signal< sc_lv<4> > i_0_reg_103;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > zext_ln15_fu_341_p1;
    sc_signal< sc_lv<64> > zext_ln13_fu_115_p1;
    sc_signal< sc_lv<64> > ireg_V_fu_138_p1;
    sc_signal< sc_lv<11> > exp_tmp_V_fu_153_p4;
    sc_signal< sc_lv<52> > trunc_ln565_fu_167_p1;
    sc_signal< sc_lv<53> > tmp_fu_171_p3;
    sc_signal< sc_lv<54> > p_Result_1_fu_179_p1;
    sc_signal< sc_lv<1> > p_Result_s_fu_145_p3;
    sc_signal< sc_lv<54> > man_V_1_fu_183_p2;
    sc_signal< sc_lv<63> > trunc_ln556_fu_141_p1;
    sc_signal< sc_lv<12> > zext_ln461_fu_163_p1;
    sc_signal< sc_lv<12> > F2_fu_203_p2;
    sc_signal< sc_lv<1> > icmp_ln581_fu_209_p2;
    sc_signal< sc_lv<12> > add_ln581_fu_215_p2;
    sc_signal< sc_lv<12> > sub_ln581_fu_221_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_257_p3;
    sc_signal< sc_lv<1> > or_ln582_fu_273_p2;
    sc_signal< sc_lv<1> > xor_ln582_fu_279_p2;
    sc_signal< sc_lv<1> > icmp_ln585_fu_245_p2;
    sc_signal< sc_lv<1> > and_ln581_fu_285_p2;
    sc_signal< sc_lv<1> > xor_ln585_fu_291_p2;
    sc_signal< sc_lv<1> > or_ln581_fu_309_p2;
    sc_signal< sc_lv<1> > icmp_ln603_fu_251_p2;
    sc_signal< sc_lv<1> > xor_ln581_fu_315_p2;
    sc_signal< sc_lv<1> > and_ln585_1_fu_303_p2;
    sc_signal< sc_lv<12> > select_ln588_fu_265_p3;
    sc_signal< sc_lv<32> > sext_ln581_fu_346_p1;
    sc_signal< sc_lv<54> > zext_ln586_fu_349_p1;
    sc_signal< sc_lv<54> > ashr_ln586_fu_353_p2;
    sc_signal< sc_lv<12> > sext_ln581cast_fu_362_p1;
    sc_signal< sc_lv<1> > xor_ln571_fu_371_p2;
    sc_signal< sc_lv<12> > shl_ln604_fu_366_p2;
    sc_signal< sc_lv<12> > trunc_ln586_fu_358_p1;
    sc_signal< sc_lv<1> > and_ln582_fu_376_p2;
    sc_signal< sc_lv<12> > select_ln603_fu_381_p3;
    sc_signal< sc_lv<1> > or_ln603_1_fu_388_p2;
    sc_signal< sc_lv<1> > or_ln603_2_fu_399_p2;
    sc_signal< sc_lv<12> > select_ln603_2_fu_393_p3;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<54> ap_const_lv54_0;
    static const sc_lv<63> ap_const_lv63_0;
    static const sc_lv<12> ap_const_lv12_433;
    static const sc_lv<12> ap_const_lv12_8;
    static const sc_lv<12> ap_const_lv12_FF8;
    static const sc_lv<12> ap_const_lv12_36;
    static const sc_lv<12> ap_const_lv12_C;
    static const sc_lv<12> ap_const_lv12_FFF;
    static const sc_lv<12> ap_const_lv12_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_F2_fu_203_p2();
    void thread_add_ln581_fu_215_p2();
    void thread_and_ln581_fu_285_p2();
    void thread_and_ln582_fu_376_p2();
    void thread_and_ln585_1_fu_303_p2();
    void thread_and_ln585_fu_297_p2();
    void thread_and_ln603_fu_321_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ashr_ln586_fu_353_p2();
    void thread_exp_tmp_V_fu_153_p4();
    void thread_i_fu_132_p2();
    void thread_icmp_ln14_fu_126_p2();
    void thread_icmp_ln571_fu_197_p2();
    void thread_icmp_ln581_fu_209_p2();
    void thread_icmp_ln582_fu_235_p2();
    void thread_icmp_ln585_fu_245_p2();
    void thread_icmp_ln603_fu_251_p2();
    void thread_ireg_V_fu_138_p1();
    void thread_m_axi_x_in_ARADDR();
    void thread_m_axi_x_in_ARBURST();
    void thread_m_axi_x_in_ARCACHE();
    void thread_m_axi_x_in_ARID();
    void thread_m_axi_x_in_ARLEN();
    void thread_m_axi_x_in_ARLOCK();
    void thread_m_axi_x_in_ARPROT();
    void thread_m_axi_x_in_ARQOS();
    void thread_m_axi_x_in_ARREGION();
    void thread_m_axi_x_in_ARSIZE();
    void thread_m_axi_x_in_ARUSER();
    void thread_m_axi_x_in_ARVALID();
    void thread_m_axi_x_in_AWADDR();
    void thread_m_axi_x_in_AWBURST();
    void thread_m_axi_x_in_AWCACHE();
    void thread_m_axi_x_in_AWID();
    void thread_m_axi_x_in_AWLEN();
    void thread_m_axi_x_in_AWLOCK();
    void thread_m_axi_x_in_AWPROT();
    void thread_m_axi_x_in_AWQOS();
    void thread_m_axi_x_in_AWREGION();
    void thread_m_axi_x_in_AWSIZE();
    void thread_m_axi_x_in_AWUSER();
    void thread_m_axi_x_in_AWVALID();
    void thread_m_axi_x_in_BREADY();
    void thread_m_axi_x_in_RREADY();
    void thread_m_axi_x_in_WDATA();
    void thread_m_axi_x_in_WID();
    void thread_m_axi_x_in_WLAST();
    void thread_m_axi_x_in_WSTRB();
    void thread_m_axi_x_in_WUSER();
    void thread_m_axi_x_in_WVALID();
    void thread_man_V_1_fu_183_p2();
    void thread_man_V_2_fu_189_p3();
    void thread_or_ln581_fu_309_p2();
    void thread_or_ln582_fu_273_p2();
    void thread_or_ln603_1_fu_388_p2();
    void thread_or_ln603_2_fu_399_p2();
    void thread_or_ln603_fu_327_p2();
    void thread_p_Result_1_fu_179_p1();
    void thread_p_Result_s_fu_145_p3();
    void thread_select_ln588_fu_265_p3();
    void thread_select_ln603_1_fu_333_p3();
    void thread_select_ln603_2_fu_393_p3();
    void thread_select_ln603_fu_381_p3();
    void thread_sext_ln581_fu_346_p1();
    void thread_sext_ln581cast_fu_362_p1();
    void thread_sh_amt_fu_227_p3();
    void thread_shl_ln604_fu_366_p2();
    void thread_sub_ln581_fu_221_p2();
    void thread_tmp_6_fu_257_p3();
    void thread_tmp_fu_171_p3();
    void thread_trunc_ln556_fu_141_p1();
    void thread_trunc_ln565_fu_167_p1();
    void thread_trunc_ln583_fu_241_p1();
    void thread_trunc_ln586_fu_358_p1();
    void thread_x_in_blk_n_AR();
    void thread_x_in_blk_n_R();
    void thread_x_int_V_address0();
    void thread_x_int_V_ce0();
    void thread_x_int_V_d0();
    void thread_x_int_V_we0();
    void thread_xor_ln571_fu_371_p2();
    void thread_xor_ln581_fu_315_p2();
    void thread_xor_ln582_fu_279_p2();
    void thread_xor_ln585_fu_291_p2();
    void thread_zext_ln13_fu_115_p1();
    void thread_zext_ln15_fu_341_p1();
    void thread_zext_ln461_fu_163_p1();
    void thread_zext_ln586_fu_349_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
