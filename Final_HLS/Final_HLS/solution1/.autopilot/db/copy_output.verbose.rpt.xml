<profile>

<section name = "Vivado HLS Report for 'copy_output'" level="0">
<item name = "Date">Mon Dec 11 23:07:52 2023
</item>
<item name = "Version">2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)</item>
<item name = "Project">Final_HLS</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020-clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 8.750, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">9, 9, 9, 9, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 40, 864, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, -, -, -, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 77, -</column>
<column name="Register">-, -, 229, -, -</column>
<specialColumn name="Available">280, 220, 106400, 53200, 0</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, 1, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
</table>
</item>
<item name = "DSP48E"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln894_fu_193_p2">+, 0, 0, 39, 7, 32</column>
<column name="add_ln899_fu_266_p2">+, 0, 0, 12, 7, 12</column>
<column name="add_ln908_fu_311_p2">+, 0, 0, 39, 7, 32</column>
<column name="add_ln911_fu_351_p2">+, 0, 0, 71, 64, 64</column>
<column name="add_ln915_fu_401_p2">+, 0, 0, 11, 11, 11</column>
<column name="sub_ln889_fu_140_p2">-, 0, 0, 12, 1, 12</column>
<column name="sub_ln894_fu_184_p2">-, 0, 0, 39, 4, 32</column>
<column name="sub_ln897_fu_219_p2">-, 0, 0, 13, 2, 4</column>
<column name="sub_ln908_fu_326_p2">-, 0, 0, 39, 6, 32</column>
<column name="sub_ln915_fu_396_p2">-, 0, 0, 11, 3, 11</column>
<column name="and_ln897_1_fu_235_p2">and, 0, 0, 12, 12, 12</column>
<column name="and_ln897_fu_246_p2">and, 0, 0, 2, 1, 1</column>
<column name="and_ln899_fu_279_p2">and, 0, 0, 2, 1, 1</column>
<column name="l_fu_172_p3">cttz, 0, 40, 36, 32, 0</column>
<column name="icmp_ln885_fu_126_p2">icmp, 0, 0, 13, 12, 1</column>
<column name="icmp_ln897_1_fu_240_p2">icmp, 0, 0, 13, 12, 1</column>
<column name="icmp_ln897_fu_209_p2">icmp, 0, 0, 18, 31, 1</column>
<column name="icmp_ln908_fu_299_p2">icmp, 0, 0, 18, 32, 1</column>
<column name="lshr_ln897_fu_229_p2">lshr, 0, 0, 27, 2, 12</column>
<column name="lshr_ln908_fu_316_p2">lshr, 0, 0, 101, 32, 32</column>
<column name="or_ln899_fu_285_p2">or, 0, 0, 2, 1, 1</column>
<column name="select_ln885_fu_430_p3">select, 0, 0, 64, 1, 1</column>
<column name="select_ln888_fu_146_p3">select, 0, 0, 12, 1, 12</column>
<column name="select_ln908_fu_341_p3">select, 0, 0, 64, 1, 64</column>
<column name="select_ln915_fu_389_p3">select, 0, 0, 10, 1, 10</column>
<column name="shl_ln908_fu_335_p2">shl, 0, 0, 182, 64, 64</column>
<column name="xor_ln899_fu_260_p2">xor, 0, 0, 2, 1, 2</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">50, 11, 1, 11</column>
<column name="score_out_blk_n_AW">9, 2, 1, 2</column>
<column name="score_out_blk_n_B">9, 2, 1, 2</column>
<column name="score_out_blk_n_W">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">10, 0, 10, 0</column>
<column name="icmp_ln885_reg_437">1, 0, 1, 0</column>
<column name="icmp_ln908_reg_476">1, 0, 1, 0</column>
<column name="l_reg_455">32, 0, 32, 0</column>
<column name="lshr_ln_reg_481">63, 0, 63, 0</column>
<column name="or_ln_reg_471">1, 0, 32, 31</column>
<column name="select_ln885_reg_497">64, 0, 64, 0</column>
<column name="select_ln888_reg_447">12, 0, 12, 0</column>
<column name="sub_ln894_reg_465">32, 0, 32, 0</column>
<column name="tmp_4_reg_486">1, 0, 1, 0</column>
<column name="tmp_reg_442">1, 0, 1, 0</column>
<column name="trunc_ln893_reg_460">11, 0, 11, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, copy_output, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, copy_output, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, copy_output, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, copy_output, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, copy_output, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, copy_output, return value</column>
<column name="score_int_0_V_read">in, 12, ap_none, score_int_0_V_read, scalar</column>
<column name="m_axi_score_out_AWVALID">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWREADY">in, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWADDR">out, 32, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWID">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWLEN">out, 32, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWSIZE">out, 3, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWBURST">out, 2, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWLOCK">out, 2, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWCACHE">out, 4, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWPROT">out, 3, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWQOS">out, 4, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWREGION">out, 4, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_AWUSER">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_WVALID">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_WREADY">in, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_WDATA">out, 64, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_WSTRB">out, 8, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_WLAST">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_WID">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_WUSER">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARVALID">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARREADY">in, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARADDR">out, 32, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARID">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARLEN">out, 32, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARSIZE">out, 3, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARBURST">out, 2, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARLOCK">out, 2, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARCACHE">out, 4, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARPROT">out, 3, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARQOS">out, 4, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARREGION">out, 4, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_ARUSER">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_RVALID">in, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_RREADY">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_RDATA">in, 64, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_RLAST">in, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_RID">in, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_RUSER">in, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_RRESP">in, 2, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_BVALID">in, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_BREADY">out, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_BRESP">in, 2, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_BID">in, 1, m_axi, score_out, pointer</column>
<column name="m_axi_score_out_BUSER">in, 1, m_axi, score_out, pointer</column>
<column name="score_out_offset">in, 29, ap_none, score_out_offset, scalar</column>
</table>
</item>
</section>
</profile>
