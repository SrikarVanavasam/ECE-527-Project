-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weigncg_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weigncg_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10111101101000000000000000010000", 
    1 => "10111100111000101110101001000110", 
    2 => "10111101010000001001101011110000", 
    3 => "10111110001001101010101110110000", 
    4 => "00111101011001010101100010011101", 
    5 => "00111011011100000110000011010001", 
    6 => "10111101100011101111101100101100", 
    7 => "10111101001101100101010101110100", 
    8 => "00111101001101110001110111101111", 
    9 => "10111100000001100011001110100001", 
    10 => "10111100101100010010110100110100", 
    11 => "10111101110010101001011011010110", 
    12 => "10111110000101000000001110111011", 
    13 => "10111101101100010110111100000111", 
    14 => "00111100111000100011100001001111", 
    15 => "00111011100000101000100100110010", 
    16 => "00111100110000111000000000110010", 
    17 => "10111100100110111010101110001000", 
    18 => "00111101010001010101000011000010", 
    19 => "10111101110100101011111010011000", 
    20 => "10111110000010000111011000100011", 
    21 => "00111100111111110110000011110100", 
    22 => "10111101100111100011110010011011", 
    23 => "00111101100101111001100011010011", 
    24 => "00111101101001111001011000100100", 
    25 => "10111110001111001100100101011110", 
    26 => "10111011010100111000001101110101", 
    27 => "00111101110010111111011001100000", 
    28 => "10111100101001011010100101000010", 
    29 => "10111101110110001010001000010001", 
    30 => "10111110000001100110001111000001", 
    31 => "00111101110010101010110011011001", 
    32 => "10111101101100101011011111001010", 
    33 => "10111101011011100001010001000101", 
    34 => "10111110000110110010000001100110", 
    35 => "00111101100011001010111100111010", 
    36 => "10111101011110001001000111010101", 
    37 => "10111101100000111110000001101011", 
    38 => "10111101110001110010111100010001", 
    39 => "00111100110110110010101100011111", 
    40 => "10111101000000100101000110010100", 
    41 => "10111101111111111001000100001100", 
    42 => "10111101000111001010011001100100", 
    43 => "00111100100101001001010110011001", 
    44 => "00111101001010001111111001011001", 
    45 => "00111101010101011110111110001001", 
    46 => "10111110001011001110000000101110", 
    47 => "10111011101010001011111100111100", 
    48 => "10111101110001100100110101110000", 
    49 => "10111100110110101101100000011110", 
    50 => "10111101100010101100011011100101", 
    51 => "10111101000101101010011100101001", 
    52 => "10111101000101110100011111001000", 
    53 => "10111110001110011010001110001011", 
    54 => "10111100101011010100010101100011", 
    55 => "00111101101100011010101010101010", 
    56 => "00111101001011000101000101011010", 
    57 => "10111110011111001110101110100001", 
    58 => "00111100011101011111101100000100", 
    59 => "10111101011110110000110110001000", 
    60 => "00111110000010000100111101000010", 
    61 => "00111101100110110101011000001111", 
    62 => "00111110010100110101010110001100", 
    63 => "10111101101010110001001011011010", 
    64 => "10111101100110100011011101010001", 
    65 => "00111100011100010000110011111110", 
    66 => "10111101101010001011000110111010", 
    67 => "00111100111101111010011100001011", 
    68 => "10111101101100110101000010011110", 
    69 => "10111100101100100100100001110111", 
    70 => "10111101100000110101001010011100", 
    71 => "00111011101001010101010111010000", 
    72 => "00111101100001111011100000100111", 
    73 => "10111100111010110001110100001010", 
    74 => "10111101100010101000001011111111", 
    75 => "10111101100110000001110110000010", 
    76 => "10111100100100001110000000100010", 
    77 => "00111101011101111101111110000000", 
    78 => "10111101100001010111000011101110", 
    79 => "00111100000100100010110000100111", 
    80 => "10111101101110110111100011100011", 
    81 => "10111101001111110010101000010100", 
    82 => "00111101111001110000101010001111", 
    83 => "10111101000101100011011111000000", 
    84 => "10111101111100001100110010001110", 
    85 => "10111101101000100010001001011000", 
    86 => "10111110000100000000110000101100", 
    87 => "10111101010000000110111001110000", 
    88 => "00111101100111111101000111001011", 
    89 => "10111011101111011111111111010101", 
    90 => "00111101000110011010101001001110", 
    91 => "00111100100001101001111000000100", 
    92 => "00111011111111101011100101011001", 
    93 => "10111101001001010010101011000010", 
    94 => "10111101100000101111001110011001", 
    95 => "10111110000011110000001010110010", 
    96 => "00111101000100101010110101111010", 
    97 => "10111101000100111000001011110100", 
    98 => "00111101001011000011111001001111", 
    99 => "00111100110000000110111111011101", 
    100 => "10111101100001011010001010010100", 
    101 => "10111110000100011100101000001111", 
    102 => "10111101011001101011111101100111", 
    103 => "10111100100000011011010011001011", 
    104 => "00111100011111100011001110100010", 
    105 => "00111101110011111110011100010001", 
    106 => "10111101001100111010101011111011", 
    107 => "10111101100101111000000101110011", 
    108 => "00111100010100110110111010100111", 
    109 => "00111010111100010110011110001100", 
    110 => "00111010001100000000110011111001", 
    111 => "10111101101001001000000010001011", 
    112 => "00111101101110010001010100001011", 
    113 => "00111101000010111011101101101101", 
    114 => "10111100001000001010111011000001", 
    115 => "10111101101001001010000111000100", 
    116 => "10111101100011110111010000101101", 
    117 => "10111011101100001011110001110110", 
    118 => "00111101001011110101000110000111", 
    119 => "00111011010110001101000011100111", 
    120 => "10111101010010100000101111100101", 
    121 => "10111101100000011010111000100010", 
    122 => "10111100001100000110011001100101", 
    123 => "00111101100010011110011110011011", 
    124 => "00111101000001101001111100100011", 
    125 => "10111101000011101001011011000001", 
    126 => "00111101100111001001110110100111", 
    127 => "00111101010111101100001010111110", 
    128 => "00111101101000001111111001110111", 
    129 => "00111101000011100100100100100100", 
    130 => "10111100101010000101100100110000", 
    131 => "10111100110110111001101010111011", 
    132 => "10111101010111111010101010000101", 
    133 => "00111101000110011010100101100111", 
    134 => "10111101111110100100010001010010", 
    135 => "10111100000010101000110010001011", 
    136 => "00111101111000100000010100001011", 
    137 => "00111110000110001011101101101111", 
    138 => "00111101101111011111110111010110", 
    139 => "00111100101000101101111011001101", 
    140 => "10111110001100100101110011010010", 
    141 => "10111101010000101101101010101110", 
    142 => "00111101000000100011010011011011", 
    143 => "00111101101100110111111001011110", 
    144 => "00111101001110000100011001001101", 
    145 => "00111100100001100001011000101010", 
    146 => "10111101001011001001010000000010", 
    147 => "10111100111101010011111010110001", 
    148 => "00111101111110101100000111010111", 
    149 => "00111101000011101100000100100110", 
    150 => "10111101111110100000100000011101", 
    151 => "10111101110100011011000111000010", 
    152 => "00111101010011110001110110100101", 
    153 => "10111101000011100000000111011001", 
    154 => "10111100100011001100110111111001", 
    155 => "10111101001110111110100110110011", 
    156 => "10111101110001010010000110111101", 
    157 => "10111101110101010101011001001111", 
    158 => "10111011111001110010100001101110", 
    159 => "10111100010000000100001100000110", 
    160 => "10111110010000011101100111001111", 
    161 => "10111101110000100001000100010011", 
    162 => "10111101111110010000011011000110", 
    163 => "10111010011110110101111101011100", 
    164 => "10111100100110000100010001001010", 
    165 => "10111110001010101100010010001110", 
    166 => "10111101101101110110100100101000", 
    167 => "00111101001001000101101001100000", 
    168 => "10111100010011110101001000111000", 
    169 => "00111100000101001010001001101111", 
    170 => "10111101100100011100111101001110", 
    171 => "00111101000011101110010001010100", 
    172 => "00111100100101000101110111001011", 
    173 => "00111011111011001101100010110001", 
    174 => "00111101101011110011000101110110", 
    175 => "10111100111010110100110011010101", 
    176 => "10111101010110110000100011000010", 
    177 => "10111110000000111010111101101100", 
    178 => "10111110001000010001000110111110", 
    179 => "00111100111001010011010101001110", 
    180 => "00111101101001010000000101100001", 
    181 => "10111110000100100100110100100111", 
    182 => "10111100110000101111101000010110", 
    183 => "00111100101010111011000010011101", 
    184 => "00111100011000111000110100000011", 
    185 => "10111101100100000110000001001110", 
    186 => "10111110001010101110110111101000", 
    187 => "00111110001100010011000000011010", 
    188 => "00111101101000000110000000111110", 
    189 => "10111100010101111110001001001010", 
    190 => "10111101110000100001111100100110", 
    191 => "10111100001010000100101111100100", 
    192 => "00111011100100100011110000011000", 
    193 => "10111101100011001011110001100110", 
    194 => "10111010101010101011100101010010", 
    195 => "10111101010000100100110010001110", 
    196 => "00111101011101101111010010001001", 
    197 => "10111100101001111010011100000011", 
    198 => "10111100010011001100110111100100", 
    199 => "10111100100110010100001001110111" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weigncg is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weigncg is
    component convolution3_weigncg_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weigncg_rom_U :  component convolution3_weigncg_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


