-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weigqcK_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weigqcK_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10111101011000100101111011011101", 
    1 => "00111101000100110011101001111101", 
    2 => "00111100010010110111110011100001", 
    3 => "10111100110011100111001000111001", 
    4 => "10111101101110001100101110000110", 
    5 => "10111101000000101001110000111111", 
    6 => "10111101011000010001101101110110", 
    7 => "10111110000001101110110011111010", 
    8 => "10111101111000101010110101101100", 
    9 => "10111110011000001001000111000101", 
    10 => "10111101111001100011100101011100", 
    11 => "10111101111110101110001100011001", 
    12 => "10111100010101110111010101111101", 
    13 => "10111110001001011000010001101011", 
    14 => "10111101100000000111100011100011", 
    15 => "10111101111110011101011001011100", 
    16 => "00111100100110101111001010101010", 
    17 => "10111110000010011000010011110110", 
    18 => "00111101101010100000101011011111", 
    19 => "10111101111011011110100111110111", 
    20 => "10111110000011100100011001101011", 
    21 => "10111101010100000000101111010100", 
    22 => "10111101001100000100100010111011", 
    23 => "10111110010000000001010101111100", 
    24 => "10111110000101100100100101010000", 
    25 => "10111110000101010100011000000100", 
    26 => "10111101100001001101001111011111", 
    27 => "10111110001010110000000001101000", 
    28 => "00111101010001110111111100001010", 
    29 => "10111101110000101111011101110110", 
    30 => "10111101100110111011010001100110", 
    31 => "10111101101110111110000001001000", 
    32 => "10111100101111111100110110110000", 
    33 => "10111101011101110111001000011111", 
    34 => "00111100011010111010101001101000", 
    35 => "10111110001011100111101110011110", 
    36 => "10111011111010101100001011000010", 
    37 => "00111101100001010110000010100110", 
    38 => "10111101111001110010001100001101", 
    39 => "00111100111010010010111110011111", 
    40 => "10111110001011100100100000100000", 
    41 => "00111101011010010111010011101110", 
    42 => "10111100110100001110011110111111", 
    43 => "10111101000101111011000011100001", 
    44 => "10111110001010111101011100000100", 
    45 => "10111110000010011110101011110111", 
    46 => "00111101110011101000110110110010", 
    47 => "10111101110000101110011110011110", 
    48 => "10111101100010000011100011010100", 
    49 => "10111101001110110011001011011100", 
    50 => "00111100101101001101001011010000", 
    51 => "00111110001000100000011110000111", 
    52 => "00111101110010011100000101111001", 
    53 => "10111110010000110100001011010100", 
    54 => "10111100110101001000110010111111", 
    55 => "00111101101111011101100000011000", 
    56 => "00111110001101011011111001110101", 
    57 => "10111110000001110101111011101110", 
    58 => "10111101101101101001100100011111", 
    59 => "00111100101110011111001010000101", 
    60 => "10111101111100111111011011011111", 
    61 => "00111110001010100010000010000111", 
    62 => "10111101100111001000001011111010", 
    63 => "10111011101011110010001100101110", 
    64 => "10111100001001100101001000101111", 
    65 => "10111100100011111101001011010001", 
    66 => "00111110000111100011001011010001", 
    67 => "00111101000000001110101101111101", 
    68 => "10111101100110010000110101110100", 
    69 => "00111101110001010011111011001010", 
    70 => "00111100000010000011000100111100", 
    71 => "10111100111100110001000000011000", 
    72 => "10111101111101011100111110000000", 
    73 => "10111100111001001100011010011001", 
    74 => "00111101001000110101001100110001", 
    75 => "10111110000101110111000011000110", 
    76 => "10111101110011000110011001110100", 
    77 => "00111100111010010000001110011111", 
    78 => "00111100011110010110001100000011", 
    79 => "00111100111011100011011111000110", 
    80 => "00110111100110110001101011111001", 
    81 => "00111101011100101111100001100000", 
    82 => "00111100000010001110101001011111", 
    83 => "10111110000011001101111010110111", 
    84 => "00111101100101110100000101101111", 
    85 => "10111101111000100000110011010011", 
    86 => "10111101110010010001110000010101", 
    87 => "10111101110111001101111000100001", 
    88 => "10111101110011000010010000001000", 
    89 => "00111101001010111001101001111101", 
    90 => "10111101110100101011011010111101", 
    91 => "10111101101100110010100101111000", 
    92 => "10111101111010101110011011111101", 
    93 => "10111101001010000011101011000111", 
    94 => "10111101101111000010010111010000", 
    95 => "00111100000100010100111111111111", 
    96 => "10111110000011100011011110001010", 
    97 => "10111101110111000010001011100100", 
    98 => "10111101111101111010111100110110", 
    99 => "00111101001010000111011110111110", 
    100 => "00111101010100001101011000101001", 
    101 => "00111101011000110101000101110001", 
    102 => "10111101011100100100110110100101", 
    103 => "10111110001010110001000110101110", 
    104 => "10111011011011010101000101111101", 
    105 => "00111101110000001111100001011100", 
    106 => "00111011010000001010100010100111", 
    107 => "10111101101100010011111110101001", 
    108 => "10111101110110011010101011001101", 
    109 => "10111101100111100010100011001100", 
    110 => "10111100111111110010010100001001", 
    111 => "00111101101010001000001101010011", 
    112 => "10111100100001000010011110011101", 
    113 => "10111110000001010110100011010101", 
    114 => "10111101111100001100111101101010", 
    115 => "00111101010000111000000101110010", 
    116 => "10111110001000011001010001101101", 
    117 => "10111100100110111001111011111000", 
    118 => "10111100110101111000101110011101", 
    119 => "10111011101101000110101010010110", 
    120 => "00111100000010111001110000010101", 
    121 => "10111101111011001110101111111000", 
    122 => "10111100011110110100000110110101", 
    123 => "00111101011011110010100111100111", 
    124 => "00111101000110010110110001101011", 
    125 => "10111101101100101010110001001010", 
    126 => "10111101011001000001101100010010", 
    127 => "10111110001010011111111100011001", 
    128 => "00111100010011100001100111110100", 
    129 => "10111110000101100110010001100110", 
    130 => "10111101011111011001010010001011", 
    131 => "10111101110110010100111001111010", 
    132 => "00111100001111110111101001001001", 
    133 => "00111110000000101110101100101110", 
    134 => "10111101101101110100001110011110", 
    135 => "10111101100001110100000010000000", 
    136 => "10111100101110001111000111011111", 
    137 => "00111100111011001111100000110110", 
    138 => "00111110000011111101101000111110", 
    139 => "00111001100101011010100111001011", 
    140 => "10111101111001011110100011000010", 
    141 => "10111011101001010110011101101110", 
    142 => "00111101001110000100100100000010", 
    143 => "00111101100110000101101000000000", 
    144 => "00111100101000111001001100101000", 
    145 => "10111100010011110111111000011000", 
    146 => "00111100110110100100001111011001", 
    147 => "00111100111000110100111011101111", 
    148 => "00111011100110100010001100000001", 
    149 => "10111101001101001010000011010100", 
    150 => "00111101110110110100110110110100", 
    151 => "00111101100010110101001001101100", 
    152 => "00111101000011011101000001000101", 
    153 => "00111101000111110000100101001011", 
    154 => "10111100111011000110000000011011", 
    155 => "10111101110000101000100001011000", 
    156 => "10111100111011011111010000101111", 
    157 => "00111100111010011001101001010011", 
    158 => "10111100101000111111011010100000", 
    159 => "10111101001110100111110000001101", 
    160 => "10111101000101000011110111110101", 
    161 => "00111101101101011100001000111001", 
    162 => "00111101111000111010110100000011", 
    163 => "00111101110001111110001110100110", 
    164 => "00111101101101010101001011100010", 
    165 => "10111100011000001001111011111100", 
    166 => "00111101110100010101011100110000", 
    167 => "00111110000010100000101111011010", 
    168 => "00111101010000100110111100001000", 
    169 => "10111101100101011010000111011010", 
    170 => "10111110001111111000010100000011", 
    171 => "00111101111011001111001000000101", 
    172 => "00111101011011010111001111100001", 
    173 => "00111101001000111101111100100000", 
    174 => "10111100011101111110001010000101", 
    175 => "00111101100100001110001100010011", 
    176 => "00111101100110001111111100001110", 
    177 => "00111101100001101110100000010001", 
    178 => "10111101111000111110111010111000", 
    179 => "10111100001101101000110101110000", 
    180 => "00111110001010000111111100000010", 
    181 => "00111110000001110011000000110010", 
    182 => "00111100101100000001100110001000", 
    183 => "10111101111111000110101111011100", 
    184 => "00111100111010011010001001100110", 
    185 => "00111110010010110100111010010110", 
    186 => "10111011111110100100001010100111", 
    187 => "00111101001111111110100101011111", 
    188 => "10111100101110010110010000111010", 
    189 => "10111101100111110111110011100011", 
    190 => "00111101111111001111010010001111", 
    191 => "00111100101000100011101010011000", 
    192 => "00111101100110001011101100000111", 
    193 => "10111100000000000000001111110001", 
    194 => "10111100101101000000111011010000", 
    195 => "00111101110010001110010000011010", 
    196 => "10111101101011000000100110011100", 
    197 => "00111110000100101000000100101010", 
    198 => "10111100100100101010111101110000", 
    199 => "10111101100000111100110111100111" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weigqcK is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weigqcK is
    component convolution3_weigqcK_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weigqcK_rom_U :  component convolution3_weigqcK_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


