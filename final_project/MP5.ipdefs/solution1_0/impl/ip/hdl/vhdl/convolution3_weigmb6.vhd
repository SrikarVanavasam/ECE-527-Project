-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weigmb6_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weigmb6_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10111110000100100000111110011101", 
    1 => "10111100011110110111111111101001", 
    2 => "10111101010000000000111010000000", 
    3 => "10111100101100001101101001111110", 
    4 => "10111110000000111111100110000010", 
    5 => "10111110000010010000111100010001", 
    6 => "10111101001111010100100001001010", 
    7 => "10111011100100001000001101110000", 
    8 => "10111110001100101000110011011110", 
    9 => "10111101100011110010100100010101", 
    10 => "10111101100011111101000110001010", 
    11 => "10111101000110100111011000000011", 
    12 => "00111101000101011101001101110001", 
    13 => "10111101100000010111101110011000", 
    14 => "10111100101110010010010010111010", 
    15 => "10111101110100011001100011000100", 
    16 => "10111101000010100001001011111001", 
    17 => "00111101000010001010111101001100", 
    18 => "10111101001010011101011001100000", 
    19 => "10111101001101001100000000011011", 
    20 => "10111101101111110100000001001010", 
    21 => "10111110001100101110100010010000", 
    22 => "00111101110101111100001100011011", 
    23 => "00111100101101011011100110000101", 
    24 => "10111110001010001011110001001010", 
    25 => "10111110000011100010011101110000", 
    26 => "10111101110000000011010010111100", 
    27 => "10111101010101110000010101000000", 
    28 => "00111101100000110111110111111111", 
    29 => "10111011100000110011001111111101", 
    30 => "10111101000111100001100110111001", 
    31 => "10111101011000101000001101101011", 
    32 => "00111101101010000001010100011101", 
    33 => "00111101100001101100110110011110", 
    34 => "10111101100000101000011111110000", 
    35 => "00111100000101100001110011001101", 
    36 => "10111101100001110010111110011100", 
    37 => "10111110000100111111011000000111", 
    38 => "10111100101000101010001101001000", 
    39 => "10111101011110111010100010101000", 
    40 => "00111100101111111011010110011101", 
    41 => "10111110001100100111100010111000", 
    42 => "10111110001100010101010011100010", 
    43 => "10111110001110010111101000101111", 
    44 => "10111101110001011111101100001011", 
    45 => "10111101110000001010010000100101", 
    46 => "00111101000110010011100100011100", 
    47 => "10111101110011101101110101010010", 
    48 => "00111101101100110001010111111010", 
    49 => "00111100100000111001101110001011", 
    50 => "00111110001010110000011000110010", 
    51 => "10111101100100100101100001010101", 
    52 => "00111101100010000011000101100001", 
    53 => "00111101101100111110001000011010", 
    54 => "00111110011011100101001000111100", 
    55 => "00111100110011111010000011110010", 
    56 => "00111101011101111111011000101011", 
    57 => "00111101000011000010101101000100", 
    58 => "00111110000000110110000100100100", 
    59 => "00111110100011101111110010010010", 
    60 => "00111101101000101101111100001111", 
    61 => "00111100101111011111101110000011", 
    62 => "10111101001001011110111111111001", 
    63 => "00111101110101010100110100011001", 
    64 => "10111101011101111000110011010010", 
    65 => "00111110100010010011001011100011", 
    66 => "00111101001100110101001110111010", 
    67 => "10111110001111111110111001111001", 
    68 => "10111101101000011000100111001000", 
    69 => "10111100101001010111001010100001", 
    70 => "00111110011000111001101001111001", 
    71 => "00111110000110011110010001111100", 
    72 => "00111100110000000000101001101100", 
    73 => "10111101001000111000101011111010", 
    74 => "00111010100111110101111000101010", 
    75 => "10111101100110100111100010110011", 
    76 => "10111110000101011110000100001101", 
    77 => "00111101010001000010010000101010", 
    78 => "10111011111001100010000111110011", 
    79 => "00111101100110110000100010000001", 
    80 => "10111101001010101001111001011001", 
    81 => "10111101110010001101111000000001", 
    82 => "00111011101010100001011010111111", 
    83 => "10111101001010011000010110100101", 
    84 => "10111101011001001101010011011100", 
    85 => "00111100111000001001110010001000", 
    86 => "10111101010010000100100011011100", 
    87 => "10111100100011001000111011011111", 
    88 => "10111101010001001111101101010111", 
    89 => "10111100000110000110010111110011", 
    90 => "10111101011111101010111111110100", 
    91 => "10111101111101111111010000110100", 
    92 => "00111100011010001000010111100110", 
    93 => "10111001110000110101110110001101", 
    94 => "10111011100011011010100011001011", 
    95 => "00111101100000010110010011100001", 
    96 => "00111101011110101001110101000010", 
    97 => "10111100111101000100011110111011", 
    98 => "10111101110011000000100101000111", 
    99 => "00111100111100010111111111101010", 
    100 => "00111100101011101010010100011111", 
    101 => "10111011100111010000111000101110", 
    102 => "10111101100100110111111110100001", 
    103 => "00111100111000001111011100111100", 
    104 => "10111101000001110010101000111011", 
    105 => "10111101100011111010010111101101", 
    106 => "00111101001110000110101010101101", 
    107 => "00111101001101010011101011011101", 
    108 => "10111100100101001000001100101111", 
    109 => "00111101110110010010100000100100", 
    110 => "00111101001010001010000001010101", 
    111 => "10111101011101110010010000011100", 
    112 => "00111100001100101100001101001100", 
    113 => "10111100111100110100100011011000", 
    114 => "10111101011111000101101010011100", 
    115 => "10111110000110000110110010111000", 
    116 => "10111110000000000110010010000010", 
    117 => "00111011100010101001101111100101", 
    118 => "00111101110001101001100011101010", 
    119 => "00111101111011010101101001010110", 
    120 => "10111101111011001111100000001000", 
    121 => "10111101011100100011100100101011", 
    122 => "10111100010101001000000000001010", 
    123 => "10111100011001110001100111101011", 
    124 => "00111010110000111101010100000001", 
    125 => "10111100110011101101100111001000", 
    126 => "10111101100000110111110000011010", 
    127 => "10111101110000001010101110011000", 
    128 => "10111101011100111100111111101110", 
    129 => "10111101000100000011011011110101", 
    130 => "10111101101100110001011001010000", 
    131 => "10111100101111010001011000100000", 
    132 => "10111101101011101010001111101001", 
    133 => "00111011111010101100110111101010", 
    134 => "10111101111010000001100001001100", 
    135 => "10111100111010011101010011110000", 
    136 => "00111101000111001010110110110011", 
    137 => "00111101100000111000010100000011", 
    138 => "00111101101010110000111101101110", 
    139 => "00111101000011011111101001101111", 
    140 => "10111101110101001000011110001011", 
    141 => "10111101001111111011100001011010", 
    142 => "00111101011011110000110010001101", 
    143 => "10111101010100110001110010100000", 
    144 => "10111101100000101100000010000100", 
    145 => "00111101000100111101010010110001", 
    146 => "10111100100111001111011001100110", 
    147 => "10111101011011100100110010100010", 
    148 => "10111101010011100000010010101110", 
    149 => "10111101100011001111101111010000", 
    150 => "00111100101010001111011111001011", 
    151 => "00111101010110000101101000101111", 
    152 => "10111101100001010011100101001010", 
    153 => "10111100100101010000010110000000", 
    154 => "10111101100000101110110001110111", 
    155 => "00111101110101010100001111010110", 
    156 => "10111101001111110010111000001011", 
    157 => "10111101111000110000011111101101", 
    158 => "10111101000000110001110010010000", 
    159 => "10111100100000001101111101101110", 
    160 => "00111101101010001111101100011100", 
    161 => "10111101001001011111100101010100", 
    162 => "00111011001110100100011010001101", 
    163 => "10111011101101001010011010010000", 
    164 => "10111101001100011001010100011110", 
    165 => "00111101101000010011011010110101", 
    166 => "00111101110110010101010101111101", 
    167 => "10111101101011001101110000110111", 
    168 => "10111100110101000000110000011100", 
    169 => "10111100111110001010110001110100", 
    170 => "00111101000101011010000001100110", 
    171 => "00111011100111001101111011110011", 
    172 => "10111000001101010111110011001111", 
    173 => "00111101001011100110011010000000", 
    174 => "10111110000001001100011010011101", 
    175 => "00111110001010100001100010100110", 
    176 => "10111110001101100001101001111010", 
    177 => "10111101000111010110001011100010", 
    178 => "00111110010101101001100110001110", 
    179 => "00111110100101110001011110011101", 
    180 => "00111101000000010110000111000010", 
    181 => "10111110010000011100100110000101", 
    182 => "00111101101110111010011011010000", 
    183 => "10111100011110110010100001010101", 
    184 => "10111101011111011010110110011101", 
    185 => "10111100111010110011101010110111", 
    186 => "10111110101001000001110001111111", 
    187 => "10111100101001101100100100000111", 
    188 => "10111101011011110111001110111110", 
    189 => "10111101110000001101110101111110", 
    190 => "10111110011101100010001010111111", 
    191 => "10111110011111001100111001111011", 
    192 => "10111101010110111001101011101110", 
    193 => "10111101010001011100001001000111", 
    194 => "10111110100000000011010011101100", 
    195 => "10111110010010001101010010011110", 
    196 => "10111101111001111111110110010001", 
    197 => "10111110000101111101001011100100", 
    198 => "10111101101000111010000100011001", 
    199 => "10111110010011010100001111010111" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weigmb6 is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weigmb6 is
    component convolution3_weigmb6_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weigmb6_rom_U :  component convolution3_weigmb6_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


