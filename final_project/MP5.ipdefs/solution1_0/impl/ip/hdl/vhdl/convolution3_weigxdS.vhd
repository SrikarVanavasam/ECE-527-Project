-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weigxdS_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weigxdS_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10111100111110001110011100010111", 
    1 => "10111101100111111101110111001100", 
    2 => "10111110001011000001001001101111", 
    3 => "10111110000111111011100101101000", 
    4 => "00111101001011111011001000011010", 
    5 => "00111010100110110110000100011010", 
    6 => "10111110001110100010011001111010", 
    7 => "10111110001110000100010011000010", 
    8 => "10111011111110001000101100010111", 
    9 => "00111101110001001110001101100000", 
    10 => "00111101110001010101111100111101", 
    11 => "00111101100010111111001101111101", 
    12 => "10111101111010101100000111011101", 
    13 => "10111101110011101110110011110111", 
    14 => "10111011100101110101111110011000", 
    15 => "10111110000101110010110001111001", 
    16 => "10111101101010001100110101100010", 
    17 => "10111101111010111010111111000001", 
    18 => "10111101101000100001001010011100", 
    19 => "10111110001000001100000001100101", 
    20 => "00111010000110100111000100110000", 
    21 => "00111101100001000110110011100100", 
    22 => "10111101100101010010000110010010", 
    23 => "10111101111001100001011011000101", 
    24 => "10111101001110101101000010011001", 
    25 => "10111101100110111001010110100011", 
    26 => "00111100100111111111011110010111", 
    27 => "10111101101101100011000110100101", 
    28 => "00111101000111100111001010001010", 
    29 => "00111101101100110000101011001110", 
    30 => "00111100110000100110110010010111", 
    31 => "10111101111000011100000010111010", 
    32 => "00111101110101001110110011000000", 
    33 => "00111100111101101100000100001101", 
    34 => "10111011110000000001101101100100", 
    35 => "00111100111000011100011000011110", 
    36 => "10111101011111010001111100101000", 
    37 => "10111100100100011001010110110100", 
    38 => "10111101101010101110110110110101", 
    39 => "10111011000010000001000000101111", 
    40 => "10111101001001000101101001111101", 
    41 => "00111001100111000011000011001110", 
    42 => "10111110010001101011100011010000", 
    43 => "10111100100100001000011101100111", 
    44 => "10111101010111100111011101010100", 
    45 => "00111011001001100101001100111011", 
    46 => "10111100001101001001001110111011", 
    47 => "00111101100011110101101000010111", 
    48 => "10111101110101110000110001100000", 
    49 => "10111101000101101111111110111110", 
    50 => "10111011111000100011011011000001", 
    51 => "10111101110001011110111110100111", 
    52 => "10111110000010001101110111000101", 
    53 => "10111011101110110110111011000001", 
    54 => "10111101111011000111101101111010", 
    55 => "10111101001001100011000100101010", 
    56 => "00111100100101010010010000111010", 
    57 => "10111101000100111001000110010010", 
    58 => "10111101110110111010011100011101", 
    59 => "10111101110111010001010000100000", 
    60 => "10111100101110001110010011101110", 
    61 => "10111100110011101010101010111000", 
    62 => "00111101010010100111100101110001", 
    63 => "00111101100000101001100100001011", 
    64 => "10111101111110011100010000110001", 
    65 => "00111100110101101000000111100010", 
    66 => "10111101010011000101101111001001", 
    67 => "10111100101001100010111100011110", 
    68 => "10111101111001010001011100111001", 
    69 => "00111101011100110110110111011110", 
    70 => "10111101101001011010111001000010", 
    71 => "00111101001100111011111101110000", 
    72 => "00111100011110001001101101110010", 
    73 => "00111101011101011001101110111011", 
    74 => "10111100010111001111011110001000", 
    75 => "10111101101111100101011101011000", 
    76 => "10111100111100000100000010100000", 
    77 => "10111100001011001010100011010101", 
    78 => "10111101000000010000111101001100", 
    79 => "10111100111101100011110010111101", 
    80 => "00111101110001111000000100110110", 
    81 => "00111101000001000010010100010001", 
    82 => "00111101010111101010100111100111", 
    83 => "00111101101110001011101011101011", 
    84 => "10111101110111000100101111001101", 
    85 => "10111100101000101010110000100010", 
    86 => "00111101000100011101111010010010", 
    87 => "00111101110011100100010110011111", 
    88 => "10111101101110101100011101011111", 
    89 => "00111101010010100110101011111000", 
    90 => "00111101000001011001011101010100", 
    91 => "10111101100110000011100010011011", 
    92 => "10111101101100101001101000100100", 
    93 => "00111101010101111001011001111111", 
    94 => "10111101011101101010010110010110", 
    95 => "10111100000100001110101010111111", 
    96 => "00111100011001100011010011011110", 
    97 => "10111101110100101110100010101001", 
    98 => "00111101011001111101000110100000", 
    99 => "00111100000101100011101101100000", 
    100 => "10111100111110110001010111010110", 
    101 => "10111101111001010000011000010011", 
    102 => "10111101001010000001111011001011", 
    103 => "00111101000011010111101001101111", 
    104 => "00111100110110100111011111000110", 
    105 => "10111101001110110100010001000100", 
    106 => "10111011101100001111010111010111", 
    107 => "00111010011100111111010011011010", 
    108 => "00111101000110101011111011001000", 
    109 => "10111101011100100100111110111110", 
    110 => "00111100110110001000110010011001", 
    111 => "00111100011110101001101001100101", 
    112 => "10111101111101111011011100011101", 
    113 => "00111100100000101010101001011111", 
    114 => "10111101000110110110010111000010", 
    115 => "00111100110111001111001101000000", 
    116 => "00111100010100010010011111100110", 
    117 => "10111101101111010101001101000000", 
    118 => "10111110001101001000001010011100", 
    119 => "10111101010111000110101100010011", 
    120 => "10111101101111010110111010110011", 
    121 => "10111110000110100100010101110001", 
    122 => "10111101000100001101100111001111", 
    123 => "10111101110000001011000001101000", 
    124 => "10111101101011111001001101010111", 
    125 => "00111101110000010100110000000001", 
    126 => "00111100010100001010010000000111", 
    127 => "00111101111001001110001100010010", 
    128 => "00111110001001001001001111111010", 
    129 => "00111101010111100000111100000111", 
    130 => "10111110001010011111011010001010", 
    131 => "10111110011011100001111101100001", 
    132 => "10111110100101001111110110111000", 
    133 => "10111110001001110010111011101010", 
    134 => "10111110101001101011001011101010", 
    135 => "00111011110010011111100011110010", 
    136 => "10111110000110000101111100011101", 
    137 => "10111111000100101011101101111110", 
    138 => "10111110111111001101011010110111", 
    139 => "10111110001011001110010110101110", 
    140 => "10111100101101001110110111100011", 
    141 => "10111101100011100000100101111100", 
    142 => "00111100100101111110001101100001", 
    143 => "10111110000100001100011100110111", 
    144 => "10111110001011000111000101110110", 
    145 => "00111110000001101001000011100111", 
    146 => "00111110000110011111010100001111", 
    147 => "00111101001101011101100101010000", 
    148 => "00111101011010111100100010010011", 
    149 => "10111110000111100001100101000100", 
    150 => "10111110100100100111010011100011", 
    151 => "10111110001110110000000011001000", 
    152 => "00111101110001111011110001110001", 
    153 => "00111110100010111101001100010111", 
    154 => "00111110100001110110110000110010", 
    155 => "10111110100101000000001010001000", 
    156 => "00111100111001000010111100011111", 
    157 => "10111100011111001011100110111010", 
    158 => "00111110011000001011010011001000", 
    159 => "00111110001010100100100000010100", 
    160 => "10111101001100110000110111110111", 
    161 => "10111101110001101111110001010101", 
    162 => "10111101000010000101110100110001", 
    163 => "10111110010000110000010101101111", 
    164 => "10111101010000010100101100011001", 
    165 => "10111101100010111011001000101001", 
    166 => "10111101110000111010000010000101", 
    167 => "10111110001001101000010110001001", 
    168 => "10111110001110011010000011001010", 
    169 => "10111110000100100011100101010111", 
    170 => "10111110100011100101111101111000", 
    171 => "10111110011100100011110011101001", 
    172 => "10111110001001011010010001000100", 
    173 => "10111110000010101011100111110001", 
    174 => "00111110000001110011111111110010", 
    175 => "10111101001001011001110110000100", 
    176 => "10111101011110100011011101000001", 
    177 => "10111101010111000101000011001110", 
    178 => "10111110000010001110101010111010", 
    179 => "10111101111001110110000101001000", 
    180 => "10111101010111100011100110000001", 
    181 => "00111101100001000110111100100111", 
    182 => "00111100111011001100000001110011", 
    183 => "00111101100000110010100101110011", 
    184 => "10111101000100111000101101100000", 
    185 => "00111100001011100110110101111100", 
    186 => "10111101101110010000111001111010", 
    187 => "10111101001100110000110110001001", 
    188 => "00111101101000101100110010000101", 
    189 => "00111101110011011111000111011111", 
    190 => "10111101101101001111100001110101", 
    191 => "10111101110001001011110110001000", 
    192 => "10111100110010111100101110010110", 
    193 => "00111101001010110010110010111010", 
    194 => "10111101010100101001010010001101", 
    195 => "10111011010011010001101011111011", 
    196 => "00111100100111000110000110100101", 
    197 => "00111100100110001101000100000111", 
    198 => "10111100011100111011010000010111", 
    199 => "10111101100000001001100010100001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weigxdS is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weigxdS is
    component convolution3_weigxdS_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weigxdS_rom_U :  component convolution3_weigxdS_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


