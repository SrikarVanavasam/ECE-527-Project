-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weigpcA_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weigpcA_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10111101101101101010101001000000", 
    1 => "10111110001000010000110010100011", 
    2 => "10111101110010101011110100101001", 
    3 => "10111100101000011010111100110010", 
    4 => "10111100010011000011000100010001", 
    5 => "10111110000101001110000111100001", 
    6 => "10111110001001101110010001101000", 
    7 => "10111101110000001001010000010000", 
    8 => "10111101110100100011101100101110", 
    9 => "10111101110101000100000001010000", 
    10 => "10111101111010100110101010000011", 
    11 => "10111101011011000010000101010100", 
    12 => "00111101000011010100101011110010", 
    13 => "10111110001100110110011000001010", 
    14 => "10111101000100010010110110010101", 
    15 => "10111110001001000100100101010010", 
    16 => "10111101110001101001101110001101", 
    17 => "00111101101101101001111010001001", 
    18 => "10111010100000000110011111101111", 
    19 => "10111101100001000100101000101000", 
    20 => "10111110000101000010100111110011", 
    21 => "10111101001111010101100111001101", 
    22 => "00111101000001010000011011011000", 
    23 => "00111100000000000101101110000101", 
    24 => "10111100101000000001011001010000", 
    25 => "10111101001011111000101111110111", 
    26 => "00111101000111100000000000010011", 
    27 => "10111101100000001111010100010000", 
    28 => "10111110000000100100100010000110", 
    29 => "10111101110000110011001001110111", 
    30 => "10111110001110101011101110111110", 
    31 => "10111101111001101101101101100010", 
    32 => "10111110000011011101011101111110", 
    33 => "10111100100100100000010100110110", 
    34 => "10111110001101100000100101000011", 
    35 => "00111101101000101001000001100010", 
    36 => "00111100001100011010001101100110", 
    37 => "00111011100011101101111111000010", 
    38 => "10111100101011001010000000111100", 
    39 => "10111101001111000110110100111110", 
    40 => "00111011011100001010110011111100", 
    41 => "10111110000000110001001011000110", 
    42 => "10111110001110010101100111101000", 
    43 => "10111110000001101110001111001010", 
    44 => "10111101111110011110101000110110", 
    45 => "00111101100101111101001101101010", 
    46 => "00111100000010110011010111001001", 
    47 => "10111101100101111111101101111110", 
    48 => "00111101100110011111010111101101", 
    49 => "00111101100000010100010001111011", 
    50 => "10111101101111001110000100111101", 
    51 => "10111110001010101101010011101110", 
    52 => "10111110100011111101110000100001", 
    53 => "00111110010000011011100110100110", 
    54 => "10111100011001101110010111111110", 
    55 => "00111100110100001000110110010111", 
    56 => "10111101001001010001110010010010", 
    57 => "10111101011111111100010101110011", 
    58 => "10111100110001110011011101101100", 
    59 => "10111100010000111010111100110111", 
    60 => "10111101100001011101101001101100", 
    61 => "00111100100000010001100100100101", 
    62 => "10111101110001010101010011101110", 
    63 => "10111101010100010111011100100001", 
    64 => "10111101110000110001100111101001", 
    65 => "00111100111110101110010110111111", 
    66 => "10111101110000010100001000101110", 
    67 => "10111110001111101111001001111101", 
    68 => "10111100100110100100011101001111", 
    69 => "00111100010101101110111110111011", 
    70 => "10111100110111001001110110101011", 
    71 => "10111100000001100010110110110111", 
    72 => "00111100101100110110111101001001", 
    73 => "00111100111001000111101101011010", 
    74 => "10111110001110000101010101111001", 
    75 => "10111100110011001010100001101111", 
    76 => "10111101110000110001011011110000", 
    77 => "10111101101110100101001001101000", 
    78 => "10111101011000010100001010010000", 
    79 => "10111100111001100010011110000111", 
    80 => "00111100101100111011010001011000", 
    81 => "10111100001010010000001100000100", 
    82 => "10111101000001000110101000110101", 
    83 => "10111100001000001101000001110000", 
    84 => "10111101101111111110011101101001", 
    85 => "00111101000010001011100110110000", 
    86 => "10111110000101000010110100011000", 
    87 => "10111101111001000010111101001000", 
    88 => "10111101101100010000101101001110", 
    89 => "00111100001100000111110100100000", 
    90 => "10111101101111111111100101001110", 
    91 => "10111101101100000111000010000000", 
    92 => "10111100110000010110110011111101", 
    93 => "00111000100001111010111110001100", 
    94 => "10111101101111100011011010010110", 
    95 => "10111101100001010111100111010001", 
    96 => "10111101000101101111010100011111", 
    97 => "00111100101100111111001000000000", 
    98 => "10111101100100101001000110010100", 
    99 => "10111101100100001100110100111000", 
    100 => "00111010100100101111110111110100", 
    101 => "10111100101010010111100111110111", 
    102 => "00111101100010010010010101110011", 
    103 => "10111100001101111000110010001001", 
    104 => "10111101101110001110001010101110", 
    105 => "00111101000010100100111001011101", 
    106 => "00111100011111100001010111000101", 
    107 => "00111101011010111100010001010001", 
    108 => "00111101101011100111011101111101", 
    109 => "00111101101110110000101001000010", 
    110 => "00111010110010011111101110110111", 
    111 => "10111101101000011111100001100001", 
    112 => "10111101100010011010100110010111", 
    113 => "10111101100110011101111011100010", 
    114 => "00111101101001000110111010000010", 
    115 => "00111101010001101100100000110001", 
    116 => "10111101010100111100001010111101", 
    117 => "00111101101110100000101011101010", 
    118 => "00111101001111010101100111100011", 
    119 => "00111100101011101000000011010010", 
    120 => "00111100000001000001110110010001", 
    121 => "00111101101101101010110000111110", 
    122 => "00111101101101100110000000110111", 
    123 => "00111101100101100000000101001111", 
    124 => "00111100110010011110110111001010", 
    125 => "10111110001000010101101011101110", 
    126 => "00111101110010111011001101000011", 
    127 => "10111101000001011010100001000110", 
    128 => "10111101010100110110010010101001", 
    129 => "10111101110001010111001010001010", 
    130 => "00111101000101010011011010101001", 
    131 => "00111101100011011110110101011100", 
    132 => "10111100111111000000101000111101", 
    133 => "00111101000000110101100110111111", 
    134 => "10111101101110000101101110100111", 
    135 => "10111101111010010100001011110010", 
    136 => "10111101011111011100011101001011", 
    137 => "10111100111000010001000100001101", 
    138 => "10111101110000100001111110111111", 
    139 => "00111101010010100101000110011101", 
    140 => "00111101101011111000011100000111", 
    141 => "10111100100001000100110001000101", 
    142 => "10111101100000010010100000111000", 
    143 => "00111101011000100001101110101110", 
    144 => "00111101011001000000011011001101", 
    145 => "10111011111101010000000111100000", 
    146 => "00111100101011001101000110000101", 
    147 => "00111100110001111001100011101011", 
    148 => "10111010100101101011000011011100", 
    149 => "10111101110000100100111011001110", 
    150 => "10111101101100000101000111100110", 
    151 => "00111011010100100000100111111000", 
    152 => "00111101110000000010101010110101", 
    153 => "10111100101110010011001001101100", 
    154 => "00111101001111010100111111101010", 
    155 => "00111101100111110000110110100010", 
    156 => "00111101100100111110100001001011", 
    157 => "10111101000010101010110100110101", 
    158 => "00111101101110100010010000011001", 
    159 => "10111101011011000001110010011110", 
    160 => "10111101100111100010110000111010", 
    161 => "00111010110000110010111000111110", 
    162 => "10111101000011100011111111111111", 
    163 => "00111010011000000111011101001111", 
    164 => "10111101101111100001110111010101", 
    165 => "10111101010000011001111000111011", 
    166 => "00111100100111110110100000010101", 
    167 => "00111100010111110111011000110010", 
    168 => "10111100001110001110111000010011", 
    169 => "10111101010100100001001010000010", 
    170 => "10111101101011111010110001010010", 
    171 => "00111101011000010010000010010001", 
    172 => "00111100001001000011011100100010", 
    173 => "10111100100100010111110011100101", 
    174 => "10111110000011001110011000111101", 
    175 => "00111101110101111110101111011001", 
    176 => "10111101010101011101101000110111", 
    177 => "10111101101111110001101010111000", 
    178 => "10111101001010111010111100010110", 
    179 => "00111101100010100110011010011011", 
    180 => "00111101110001110100011110000101", 
    181 => "10111001111001110000010001011100", 
    182 => "10111100010001000110110110100011", 
    183 => "10111101011110111001111001111111", 
    184 => "00111010011101100100101011001010", 
    185 => "00111100111101110110110111010101", 
    186 => "10111100100011000100100111100101", 
    187 => "10111101101010001011010000001101", 
    188 => "00111011100011100111011111010010", 
    189 => "10111101011011011100110111000110", 
    190 => "00111011110000001110011100111011", 
    191 => "10111101000011101000111011101001", 
    192 => "00111101001111101100100100110110", 
    193 => "00111101111011110000001000110011", 
    194 => "00111101101001000100011111110011", 
    195 => "10111100111000101100110110110000", 
    196 => "00111101101001111100001111011111", 
    197 => "00111101111111000001101111110101", 
    198 => "00111011001100101111100010010000", 
    199 => "00111101111100101011101100111001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weigpcA is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weigpcA is
    component convolution3_weigpcA_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weigpcA_rom_U :  component convolution3_weigpcA_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


