-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weigudo_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weigudo_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00111101010100011011001101100100", 
    1 => "00111101101100011111111110001110", 
    2 => "00111101000110110010001011000001", 
    3 => "10111011100011011101100111110011", 
    4 => "10111101010001101010110100111011", 
    5 => "10111110001000001001010001111110", 
    6 => "10111101101110011011010010101010", 
    7 => "00111101011001010101001001001111", 
    8 => "10111100110101000101001100010011", 
    9 => "10111110000011100101001111010011", 
    10 => "10111101010110001011000001000000", 
    11 => "10111101101101100010001110001100", 
    12 => "10111101011101111101010001001101", 
    13 => "10111101101010111100011001010001", 
    14 => "10111100110110010000011011000111", 
    15 => "10111110000110100010110011110000", 
    16 => "10111110001011101010010000010110", 
    17 => "10111100111101011000101001010110", 
    18 => "10111101010011010000101001111010", 
    19 => "10111110001010000011001001011001", 
    20 => "10111100100001011101011100110101", 
    21 => "10111110000111100010011111010000", 
    22 => "10111101100000101101010110010011", 
    23 => "00111101101110000111110010000110", 
    24 => "10111101010100000101011111111111", 
    25 => "00111101000011000010100000010100", 
    26 => "10111101101010010010001101111110", 
    27 => "10111101101100011000000101111110", 
    28 => "10111110000011011011011000101101", 
    29 => "10111101010011000101101011101010", 
    30 => "10111100011111100000011010100001", 
    31 => "10111101111101110110101011110101", 
    32 => "10111101101010101110001100000100", 
    33 => "10111101101111001111000111100111", 
    34 => "10111100111110010001010101011011", 
    35 => "10111101010001110011100000001101", 
    36 => "00111101100010001100111101011100", 
    37 => "00111100111111001110100000001101", 
    38 => "10111101100101000101000111000000", 
    39 => "10111101110000001001110011011101", 
    40 => "10111101011100110001101010000010", 
    41 => "00111100011010100101110101110111", 
    42 => "00111101101010000100111001101100", 
    43 => "00111101101010110011010011101010", 
    44 => "00111101100101100100110011011111", 
    45 => "10111101100010000101111110111101", 
    46 => "10111100001100010111011001000101", 
    47 => "10111100010101110110110001101110", 
    48 => "00111100011110000110000011110000", 
    49 => "00111110000001000001000110100001", 
    50 => "10111110000011010100101011111001", 
    51 => "10111101101001010001100101010010", 
    52 => "00111011101011011101000110011111", 
    53 => "10111101001100010100000100110000", 
    54 => "00111101001010101011100111110011", 
    55 => "10111100000011011100110010000111", 
    56 => "10111110000011100001001110001010", 
    57 => "10111101111010100011111011101100", 
    58 => "10111101000100001111100011010100", 
    59 => "10111101101001010000000010000100", 
    60 => "10111101100111000101110100011110", 
    61 => "00111101001001110011100000111011", 
    62 => "00111101000011111011111110111100", 
    63 => "00111101001001110010011100000110", 
    64 => "10111100111000111000101011111111", 
    65 => "10111101000101101101000111101100", 
    66 => "10111001100010011010111011101011", 
    67 => "10111101101101011001000000011000", 
    68 => "10111101010011000010110111111001", 
    69 => "00111101001000011001011110100000", 
    70 => "10111100010110000011100001111011", 
    71 => "10111101001001011001000010010000", 
    72 => "10111101101010111011100000011110", 
    73 => "10111101100110010010110101000000", 
    74 => "10111110000100011110100111011010", 
    75 => "10111101111111010011000111100110", 
    76 => "00111101101101010000011001001111", 
    77 => "10111100101000100011011111010011", 
    78 => "00111100110101101100010100100100", 
    79 => "00111100010001001001100111000011", 
    80 => "00111101011001101111111001110010", 
    81 => "00111101011011101101001011101111", 
    82 => "10111101101001101101101111010111", 
    83 => "10111100101000010111100001000000", 
    84 => "00111101010010101001100011000101", 
    85 => "00111010000110110001000110010100", 
    86 => "10111101011110011001000000001111", 
    87 => "00111011111001000010100001001001", 
    88 => "10111101100011011100000111001010", 
    89 => "00111101010110010010110110001110", 
    90 => "10111101100010101110110111001001", 
    91 => "10111101101001011111000101101010", 
    92 => "00111101001100101111011100011110", 
    93 => "00111100100110110011010001110100", 
    94 => "10111101100101110011011100110011", 
    95 => "10111110000001111110011100110011", 
    96 => "00111100001100001101001101010010", 
    97 => "00111100110100100000101111000110", 
    98 => "00111100001111010110010000011001", 
    99 => "10111101110101011001010001000111", 
    100 => "10111101000000011111100111011000", 
    101 => "10111101110110000101110100100010", 
    102 => "10111100001010101100110111011111", 
    103 => "00111101010010111000101000000100", 
    104 => "00111101000110111011000111100101", 
    105 => "00111101011100111100010000101000", 
    106 => "00111100110011010100010100001000", 
    107 => "00111110000000000101001001000100", 
    108 => "00111101000100000100101111011000", 
    109 => "00111101110101111010100101011111", 
    110 => "00111101100100000001111001100001", 
    111 => "00111100111110011001000011000000", 
    112 => "00111101100001110111001110001010", 
    113 => "10111101101011101001010000110000", 
    114 => "10111101110010000111000011001101", 
    115 => "10111101101001010110011000110110", 
    116 => "10111011111101011001101101111000", 
    117 => "10111101100100111000010100101011", 
    118 => "10111101101011000100111000100100", 
    119 => "10111110000010111111110001100001", 
    120 => "10111101101010101100001010001100", 
    121 => "10111110001000101100000111111111", 
    122 => "10111100100011110000011101011010", 
    123 => "10111101101000100011000010001011", 
    124 => "00111101001101011010001011010010", 
    125 => "10111101010000001100001101110111", 
    126 => "00111110000000111001110001100001", 
    127 => "00111101111101111000101001010000", 
    128 => "00111110011011000110010111100010", 
    129 => "10111101100001110011110111110001", 
    130 => "10111110110101101010100010010111", 
    131 => "10111110011100000011110011100000", 
    132 => "10111101000110011000111010110010", 
    133 => "00111101110111100111010010111001", 
    134 => "00111101101101101101101110011000", 
    135 => "10111101011000011100001000010010", 
    136 => "10111101110101111011010011110001", 
    137 => "10111110100010100101110000110111", 
    138 => "00111011100101010000010000110100", 
    139 => "10111110000100110011110110000010", 
    140 => "00111101110110101010111100100011", 
    141 => "00111101101000011111111101001001", 
    142 => "00111101111101111111101101011110", 
    143 => "10111110001010010111010010110100", 
    144 => "10111110111011001111011001010000", 
    145 => "00111101110010111110010100001011", 
    146 => "00111101111000001111011110101100", 
    147 => "00111101101101111010111101010000", 
    148 => "00111110000100110101001111100010", 
    149 => "00111101101111111001110100100100", 
    150 => "00111101010111010110011111001010", 
    151 => "10111110001100101011101110010001", 
    152 => "10111101101110010111000010111001", 
    153 => "10111100110110111101011101011100", 
    154 => "10111110011111100110111001011100", 
    155 => "00111101011110010011010100011000", 
    156 => "10111110011000001101101000010101", 
    157 => "00111101000101011011010000001010", 
    158 => "10111101111101101010101101011100", 
    159 => "10111110001101100100101000111000", 
    160 => "10111110011011010001111110011100", 
    161 => "10111110100111111111001100100101", 
    162 => "10111110110111100101001001101100", 
    163 => "10111110100110011000001101010111", 
    164 => "00111110010010110001101100101011", 
    165 => "10111110100000101100101010010110", 
    166 => "10111110010010000110011101101110", 
    167 => "10111110010101110101111011111100", 
    168 => "10111011110101111001010001111100", 
    169 => "10111101100001010010110111010011", 
    170 => "10111100100001010010101011010111", 
    171 => "10111101000000111010101110011001", 
    172 => "00111101110011010000011001110001", 
    173 => "10111101011111101100110001001001", 
    174 => "10111110000000011101111001011001", 
    175 => "10111101110001100001000100010010", 
    176 => "10111101111011101000000111110110", 
    177 => "10111110000001001101010001001101", 
    178 => "10111110001001101001101011100011", 
    179 => "00111101101011111011111101101010", 
    180 => "00111100111010011110001010111000", 
    181 => "10111110001110000001101110011110", 
    182 => "10111101001100000010111010110111", 
    183 => "10111100010100111010011010011011", 
    184 => "00111100100110100000000100111000", 
    185 => "10111110000101001000111011001110", 
    186 => "10111101110011010101001110011111", 
    187 => "10111101001010001011110001111010", 
    188 => "00111101110001111101111100110101", 
    189 => "10111101111000011100100001100110", 
    190 => "10111101011111110111011010111110", 
    191 => "00111101110010101101111110111100", 
    192 => "00111010100010001001000001011101", 
    193 => "10111101101000010110001001011010", 
    194 => "10111110000000011011111010001001", 
    195 => "10111101100001011010101001000110", 
    196 => "00111101100011000111001000101101", 
    197 => "00111101101001101001101110111000", 
    198 => "10111101010110110111000001101001", 
    199 => "00111100100011101011100100000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weigudo is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weigudo is
    component convolution3_weigudo_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weigudo_rom_U :  component convolution3_weigudo_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


