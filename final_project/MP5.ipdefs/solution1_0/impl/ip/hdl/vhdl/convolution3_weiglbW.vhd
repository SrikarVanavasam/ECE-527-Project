-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weiglbW_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weiglbW_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10111110000001000101110011101010", 
    1 => "10111100111011001101010010001111", 
    2 => "00111100100101110100111011100111", 
    3 => "10111110000011010110001101110110", 
    4 => "10111100010010111111100101011101", 
    5 => "10111100111010011110100100000010", 
    6 => "00111100000001101111010000100110", 
    7 => "10111100111100111011000001100110", 
    8 => "10111101100101111110011111001110", 
    9 => "10111101111001010001110111000111", 
    10 => "10111011000111100111001101001000", 
    11 => "10111101000100100111100110101000", 
    12 => "10111101100100111100111011001000", 
    13 => "10111101100011010101100011111100", 
    14 => "10111101001111011010101010111110", 
    15 => "10111101011000111010000101111011", 
    16 => "10111110001011000011001110101100", 
    17 => "00111100000010110011110110001011", 
    18 => "10111100100110101011010011111101", 
    19 => "10111101011101101000011101010011", 
    20 => "00111100000110101111100101110110", 
    21 => "10111100110000110110011101001000", 
    22 => "10111101011101000101000101010011", 
    23 => "10111100100010000111001110111101", 
    24 => "00111101100011101011101000101001", 
    25 => "00111100010000111001101100000000", 
    26 => "10111101111000100000101100101011", 
    27 => "10111101100000001100000010011010", 
    28 => "00111011001101100100011100100100", 
    29 => "10111010011000101001010000110100", 
    30 => "10111110000010010011011100001011", 
    31 => "10111100000000101101100110100100", 
    32 => "10111110001101111100001110000110", 
    33 => "00111101101011010110110010110011", 
    34 => "00111100100011011001111000101110", 
    35 => "10111101101101010000000000100111", 
    36 => "10111101110000011100101100110011", 
    37 => "10111101100100000000001011001001", 
    38 => "10111101000000111000010101010011", 
    39 => "10111100100100000101111100011110", 
    40 => "00111100100000111110100011101110", 
    41 => "10111101111111110010100111000001", 
    42 => "10111110001000011100111001011100", 
    43 => "10111011000001010111100110100111", 
    44 => "00111100011001011000111111111101", 
    45 => "10111101011100101110000000100100", 
    46 => "10111101000111110111110100010110", 
    47 => "10111101110011110100010011000110", 
    48 => "00111100011011110001101110101100", 
    49 => "10111101011101111011000101011111", 
    50 => "10111101010111001111110010010000", 
    51 => "00111100110101100001100110110010", 
    52 => "00111101100100000110111111100111", 
    53 => "00111101010100011010110100101100", 
    54 => "00111101101010000110100011001011", 
    55 => "10111110001111101001100110011010", 
    56 => "10111011110000010110101010011001", 
    57 => "10111101000110101101111111011011", 
    58 => "10111101101011001101000111010011", 
    59 => "10111101000010011111010001111011", 
    60 => "10111110100100111011010100110000", 
    61 => "10111110000111001100111011100101", 
    62 => "10111110001000001011101000100010", 
    63 => "10111110011101110011100111100001", 
    64 => "10111101000110111010010111111110", 
    65 => "10111101111001110100010110111000", 
    66 => "10111101001000101101101010111001", 
    67 => "10111110011010001110010101100100", 
    68 => "10111110001001011011010100001101", 
    69 => "10111110010011111101100100100101", 
    70 => "00111101001101001010100111110110", 
    71 => "00111100111001010000100000111000", 
    72 => "10111110000100111001001101010001", 
    73 => "10111101010101011000100111000101", 
    74 => "10111110000101110011111011100101", 
    75 => "10111110000011111001100000111010", 
    76 => "00111011001101100011101010111010", 
    77 => "10111101001010000001110101001000", 
    78 => "10111100110001010011010101010100", 
    79 => "10111110000011011100011001011110", 
    80 => "10111110000001011111011110101110", 
    81 => "10111101011000010000001110101110", 
    82 => "00111101000001000100001110001100", 
    83 => "10111101100110101001000011001111", 
    84 => "10111101101000001000100110110110", 
    85 => "00111101011100101110001101001010", 
    86 => "10111100100100101001010010011000", 
    87 => "10111101110111111101111001111001", 
    88 => "00111101110000101000010000101100", 
    89 => "00111101111010001100000011100100", 
    90 => "00111100101101111001001100000100", 
    91 => "00111100100000100000100111010110", 
    92 => "10111101110101000000010101110001", 
    93 => "00111101101110011011001111110011", 
    94 => "10111101011000111000111111010111", 
    95 => "10111100010010010111010111010101", 
    96 => "10111100011001000011010000010010", 
    97 => "10111011100111111101110111000001", 
    98 => "10111110000010010100011100110010", 
    99 => "00111101000000110000110101000011", 
    100 => "00111101101010101011110011000111", 
    101 => "00111101111000010000011111110011", 
    102 => "10111101001010000101111011011001", 
    103 => "10111100001111101000100010011100", 
    104 => "10111101011011000011110101101011", 
    105 => "10111101100101001100001001011011", 
    106 => "00111101110011011011001100001011", 
    107 => "10111101000011100001000011010101", 
    108 => "00111101100101011000010001001110", 
    109 => "10111101000000010110001001101000", 
    110 => "00111101101000101110101101010110", 
    111 => "00111101111000001001110001101011", 
    112 => "00111101111100110000000001100110", 
    113 => "00111101100010001000101011010100", 
    114 => "00111101100101111001010101001101", 
    115 => "10111101100110010101000101110011", 
    116 => "00111101101110001011111011100101", 
    117 => "00111101101111010001110100010110", 
    118 => "00111101011111001010111010010111", 
    119 => "00111100000011010001100010101101", 
    120 => "00111011100001001010000001111001", 
    121 => "10111101101110010011001001000010", 
    122 => "00111101101101010011000101111101", 
    123 => "00111101010111001010000001001100", 
    124 => "10111100100111100111011000110010", 
    125 => "10111101100101110110000110110000", 
    126 => "10111101110011101010010110011000", 
    127 => "10111101001011001101011111111101", 
    128 => "00111100111011110010000011010000", 
    129 => "10111101100001100111111001101011", 
    130 => "10111101100001100001100000010110", 
    131 => "10111011101111010101010100100000", 
    132 => "10111101110001110111100001110101", 
    133 => "00111100110100010100110001101001", 
    134 => "10111100101010111010100101100001", 
    135 => "00111100110000100001000110110011", 
    136 => "10111101010011000110000101011101", 
    137 => "00111100001010101010010011100100", 
    138 => "10111101101100101111000000110100", 
    139 => "10111101000011101110010001010111", 
    140 => "00111100100001001011101011011011", 
    141 => "10111011111111010000110110011101", 
    142 => "00111101101100000001101110000110", 
    143 => "10111101010010011100101010111111", 
    144 => "10111110000100111011111010100110", 
    145 => "00111011100010100111011111111110", 
    146 => "00111101001101010011010010000101", 
    147 => "10111101000011001010111010101111", 
    148 => "00111101101111000011011010111000", 
    149 => "10111101100111111100110111111101", 
    150 => "10111101101111000001111010000001", 
    151 => "10111100010000100000010000011100", 
    152 => "10111101100011001100001011101101", 
    153 => "00111101100010011011010110110000", 
    154 => "00111101101000000101101111100110", 
    155 => "10111101001000001010111000010011", 
    156 => "10111101110010010001100101111011", 
    157 => "10111100101101011000110100010101", 
    158 => "00111101000101110011110000000111", 
    159 => "00111101001001110011111101010111", 
    160 => "10111101010011001101010000110100", 
    161 => "00111101100001010011101010111001", 
    162 => "10111110000001110110100110100100", 
    163 => "10111101001101000110000011111011", 
    164 => "00111101101111100111111010111111", 
    165 => "10111101110111000011101110011111", 
    166 => "10111110001001100010111010110001", 
    167 => "10111101100101100101001111010000", 
    168 => "00111100111011001011101010101001", 
    169 => "10111011011111110000000101111101", 
    170 => "10111101111101100101110001100100", 
    171 => "10111101110100011101101100001111", 
    172 => "10111011111010110000000110000001", 
    173 => "00111101011011000111011000110101", 
    174 => "10111100100001101110101101010111", 
    175 => "00111100110000100010001101100001", 
    176 => "10111101001000001010100001110111", 
    177 => "10111100101100010111101011000111", 
    178 => "10111100101110100001110101010010", 
    179 => "10111101001011110010010100000001", 
    180 => "10111101111011000100110001100011", 
    181 => "10111101100101111111110000001100", 
    182 => "10111101010110100101111100101010", 
    183 => "10111100111100100010100001110111", 
    184 => "10111101111000001000101001101001", 
    185 => "10111110101101000001101011001001", 
    186 => "10111110010001011110010001101010", 
    187 => "10111101111110010110011110111111", 
    188 => "00111100010010111000011000011011", 
    189 => "10111101000101110001111000110111", 
    190 => "10111110101010011111110111101100", 
    191 => "10111110100110000100010000110000", 
    192 => "10111110110010010101110111010010", 
    193 => "10111101010001111101110111010101", 
    194 => "00111101000100001010110011000011", 
    195 => "10111110000111011001001100101011", 
    196 => "10111101111110110001010001110111", 
    197 => "10111101111001110111010011111110", 
    198 => "10111101011000110001101111101001", 
    199 => "10111101100011101010110011001001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weiglbW is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weiglbW is
    component convolution3_weiglbW_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weiglbW_rom_U :  component convolution3_weiglbW_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


