-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weigwdI_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weigwdI_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00111100011010010100110111110111", 
    1 => "00111101101101101011011110110000", 
    2 => "00111100010010111111000000100011", 
    3 => "10111110000100001110101101011111", 
    4 => "00111101101100100000000110010000", 
    5 => "10111110001110101111100011110000", 
    6 => "10111101010011011001010010110110", 
    7 => "00111101101110000001001010110101", 
    8 => "10111100101101101001101011111100", 
    9 => "10111101111110111010001101010010", 
    10 => "10111101101010010111001011010010", 
    11 => "10111110000110001111111001011100", 
    12 => "00111100101101100001000100110100", 
    13 => "10111110001101110111011101011010", 
    14 => "10111101100011100111101011010010", 
    15 => "10111101101101111111111001110011", 
    16 => "00111101101101101011011011100100", 
    17 => "00111101100001010000001000010101", 
    18 => "00111101101100111101001011111010", 
    19 => "10111101110110111101000100001011", 
    20 => "10111100101100100110000111111000", 
    21 => "00111100101111000110111111111110", 
    22 => "00111101110001101100100101001001", 
    23 => "10111110001101010010100001001011", 
    24 => "10111110000101110101111101101010", 
    25 => "00111101011000001111110100100000", 
    26 => "00111101110000111001111101001010", 
    27 => "00111101010000100011011111000110", 
    28 => "10111101001001101111100011100011", 
    29 => "10111101001110001100010010110010", 
    30 => "10111101000011010100110000000001", 
    31 => "10111101010101001011010000110010", 
    32 => "10111101011001111011100010010100", 
    33 => "00111100101101101110111101110000", 
    34 => "00111100111100111111001111111000", 
    35 => "10111100111011001001000000100110", 
    36 => "00111101010100010111011101110100", 
    37 => "00111101100001000101010101100101", 
    38 => "00111011100001100001011101000110", 
    39 => "10111100011101011010111111100101", 
    40 => "00111100110010111011111100111011", 
    41 => "00111101001100000001001011001000", 
    42 => "10111101110001101100010111010010", 
    43 => "00111101110101110011110000111100", 
    44 => "10111011110111000010000101010100", 
    45 => "10111101001000111111011100001000", 
    46 => "00111101101010110101101110010101", 
    47 => "10111101101001001011110010110010", 
    48 => "10111101000010100100100010001001", 
    49 => "00111101101001010101111000111010", 
    50 => "10111110000000010011001101000010", 
    51 => "10111101011100111010101011010000", 
    52 => "10111101110001101001010010010100", 
    53 => "10111101100011110101100101111100", 
    54 => "10111101101000010101010011111111", 
    55 => "10111101111001110010100011110011", 
    56 => "10111101110111010000111100110001", 
    57 => "00111101000011010010101100000100", 
    58 => "10111100100100000110101000010000", 
    59 => "10111101111111000010111110101110", 
    60 => "10111101011011011100011100001110", 
    61 => "00111101010111111101110011001111", 
    62 => "00111100110101011010110110001100", 
    63 => "10111101111000000111011000011001", 
    64 => "10111101110110001010000000010010", 
    65 => "10111101010101111010111111011010", 
    66 => "00111011000011100100001001111000", 
    67 => "10111101111000110011001010111110", 
    68 => "10111101110000001111111111001001", 
    69 => "00111101001000001010110011011001", 
    70 => "10111100110010001010110000000001", 
    71 => "10111101001101100100011100110010", 
    72 => "10111101100100101000011001100010", 
    73 => "10111101011110100010000001101101", 
    74 => "10111110000001111011101001101000", 
    75 => "10111101101010011100010110101000", 
    76 => "00111100011001001010111010100001", 
    77 => "10111110000001011000001111110100", 
    78 => "00111101000010100110111101010010", 
    79 => "00111100001010101001001110000111", 
    80 => "10111101001010100010100110100010", 
    81 => "10111110001001111100000001110000", 
    82 => "00111100010010110000111100010010", 
    83 => "00111101010111100010001100011110", 
    84 => "00111100001111000101000110100000", 
    85 => "10111101111100100111111001101000", 
    86 => "00111100101110101011000101010111", 
    87 => "10111100110011010001010001110110", 
    88 => "10111011110111000111110100101110", 
    89 => "10111110000110000011010101000101", 
    90 => "00111101000111101100010100100010", 
    91 => "10111100001100101111111011010000", 
    92 => "10111110000010100111011110111100", 
    93 => "10111101111000011110110111110101", 
    94 => "10111101001100010010001101111001", 
    95 => "10111101001101101110111111110100", 
    96 => "10111101011001000110110100001111", 
    97 => "00111001111110100011011101101001", 
    98 => "10111101100010110101010011110011", 
    99 => "10111110000000000111101100110100", 
    100 => "00111101101001010000001110100011", 
    101 => "00111101100101101011111001111110", 
    102 => "10111101010011010110000100011010", 
    103 => "00111101110001001101000000111111", 
    104 => "00111101000111010111010000110101", 
    105 => "10111101010100010010100111110001", 
    106 => "00111101110011000011010111101100", 
    107 => "00111101001011110111101111001001", 
    108 => "00111100100110001101010111011111", 
    109 => "00111101000111111111101001001001", 
    110 => "00111101101011000001010100110011", 
    111 => "10111011011110101111111000001110", 
    112 => "10111101010100110010100010101111", 
    113 => "10111100111010100000000100010101", 
    114 => "10111100100000111001010011110101", 
    115 => "00111101100011101010101110111111", 
    116 => "00111100111001011111100011101000", 
    117 => "10111101000100000100101101011010", 
    118 => "10111101101001011000011100110101", 
    119 => "10111110001101011001000100111111", 
    120 => "10111101111010100011010100100111", 
    121 => "10111101011001111001111110010001", 
    122 => "10111100111001000110101100101001", 
    123 => "10111100101011000111100010011111", 
    124 => "00111100111010001110011001001110", 
    125 => "10111110000001111001100111000111", 
    126 => "10111101101010101011110111011111", 
    127 => "00111100000011001011111100000000", 
    128 => "10111001110101011110010011001110", 
    129 => "00111101000001100010100000101101", 
    130 => "10111110100010100001011000011001", 
    131 => "10111110100101111011100110000011", 
    132 => "10111101110101110110110000101100", 
    133 => "00111100101011111100100001100101", 
    134 => "00111101110101101100110111100001", 
    135 => "10111101111110001100111001011001", 
    136 => "10111110100101110001101010011001", 
    137 => "10111110001110000110011101100011", 
    138 => "10111100101010110010100010011101", 
    139 => "10111101100101111010011000011011", 
    140 => "00111110000001011110011001110001", 
    141 => "00111101100101101110001000100011", 
    142 => "10111110001010000110100001110011", 
    143 => "10111110001010101001111010001011", 
    144 => "10111110110001000110111001000100", 
    145 => "00111110001111000100000010101001", 
    146 => "00111110000101111001101010111011", 
    147 => "00111110010001011001001010100010", 
    148 => "00111110010000101111100001111001", 
    149 => "00111110000010110001100110101110", 
    150 => "00111011110011110010110001001110", 
    151 => "00111101101000001101001110011010", 
    152 => "00111110010101000011010100101110", 
    153 => "00111010100001010011000100000010", 
    154 => "10111110100111000000111110100101", 
    155 => "00111101001011101010101110000100", 
    156 => "00111011101001100100010000100010", 
    157 => "00111011010100111111110101101110", 
    158 => "10111110001111000111101100010010", 
    159 => "10111110010100011100101010111000", 
    160 => "10111100100101101001100001000011", 
    161 => "00111101000111000011101010101110", 
    162 => "00111101101011010111000110001001", 
    163 => "10111101101111110010001111111000", 
    164 => "10111100111000111101101000001010", 
    165 => "10111100110000110001101001100001", 
    166 => "10111010100000011001000000111000", 
    167 => "10111101001111001110000010110100", 
    168 => "00111101111001110001110011110110", 
    169 => "00111101100100011011000111000110", 
    170 => "00111110000001011100111100001110", 
    171 => "00111110000111001010101111000011", 
    172 => "00111011000001010000001100001010", 
    173 => "10111100001001100101111001111001", 
    174 => "00111101110001100101001010101100", 
    175 => "10111101010000000000001000110110", 
    176 => "10111101001110100100010110010100", 
    177 => "00111100000011101111011010101000", 
    178 => "00111100101010010111010101001111", 
    179 => "10111100110000010110100010110110", 
    180 => "00111101011100011001001101001110", 
    181 => "10111010110000101111010011011101", 
    182 => "10111101110100110001010010011000", 
    183 => "10111101010100100001110001010101", 
    184 => "10111110001110101110001110010110", 
    185 => "00111101101001001011000010110101", 
    186 => "00111011010001101010101101001011", 
    187 => "10111100110001111100010011010000", 
    188 => "10111100101011101101011111000100", 
    189 => "10111101001011010011010000001000", 
    190 => "10111110000100100010100100101000", 
    191 => "10111101000011010111111101101111", 
    192 => "10111101101110010011011011111001", 
    193 => "10111110000101000000101101100000", 
    194 => "10111110001001000000101100010110", 
    195 => "10111101101000110101100110001111", 
    196 => "10111101100010100000111000000110", 
    197 => "00111101100100000010101010101001", 
    198 => "10111101001101100111001000101010", 
    199 => "00111101010100001101110101111011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weigwdI is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weigwdI is
    component convolution3_weigwdI_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weigwdI_rom_U :  component convolution3_weigwdI_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


