-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weigsc4_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weigsc4_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10111101101101110110011100101010", 
    1 => "10111101001010011100100011110100", 
    2 => "00111101110011100001011100001011", 
    3 => "10111100111001000101000100000011", 
    4 => "00111100100000101111111001100111", 
    5 => "10111101010000001101101101011010", 
    6 => "10111101011111111000100001101001", 
    7 => "10111101101101011110111100010010", 
    8 => "10111101010100001011101111001101", 
    9 => "10111101100100111001100100101110", 
    10 => "00111101010100001001110010001011", 
    11 => "10111110000110100101001100100001", 
    12 => "10111110000100110010000001110111", 
    13 => "00111101101111100100010110110111", 
    14 => "10111101100000001100100111100011", 
    15 => "10111100110111000111111010010001", 
    16 => "00111101110010010011101000001000", 
    17 => "10111101101111000011100101011101", 
    18 => "00111101100110100101100100000111", 
    19 => "00111101010100101111111100101001", 
    20 => "10111101010111101001010101111111", 
    21 => "10111101111110011111011110000100", 
    22 => "10111010011000001001111110010011", 
    23 => "10111101011111000000111100010010", 
    24 => "00111100110011100011101011100001", 
    25 => "00111101110100101000101011111101", 
    26 => "00111101110110110011111001010011", 
    27 => "00111101010010101110000001101001", 
    28 => "10111110000001100001111001001001", 
    29 => "10111100101111000111110000111000", 
    30 => "00111101001011101111100110001011", 
    31 => "00111100110011100111010110111111", 
    32 => "10111101000001000100100011111101", 
    33 => "10111101001100110111101000100110", 
    34 => "10111101000001010111100001111000", 
    35 => "10111101001010111001000111001001", 
    36 => "00111101100011011010011110111101", 
    37 => "00111100100110100011101101110000", 
    38 => "00111101001000000100000110001100", 
    39 => "10111101000000000110100011010001", 
    40 => "00111101110101110100100101011011", 
    41 => "00111100101111111001001001100111", 
    42 => "00111101100101100110101101011001", 
    43 => "10111100010011101011000100111110", 
    44 => "10111101000110110001010101011010", 
    45 => "00111101011000001001001000110100", 
    46 => "00111101001010111110110110000001", 
    47 => "00111101100100010000110101101000", 
    48 => "00111100100010100011110011010000", 
    49 => "10111101101011110111001110111001", 
    50 => "10111101110101111000111000100011", 
    51 => "00111100111110100110001101101110", 
    52 => "10111100011011000001110111000000", 
    53 => "00111010011101111000011110001011", 
    54 => "00111101001101110110000110101110", 
    55 => "10111100111010010111010110000101", 
    56 => "00111101011111110110000100000001", 
    57 => "00111101000100010011010000100101", 
    58 => "00111011100001100110101011101001", 
    59 => "00111100001110000100000101000101", 
    60 => "00111100000010011111101010101011", 
    61 => "10111101101101101010011000010110", 
    62 => "00111101001110100101110010111101", 
    63 => "00111101100000111110001101010010", 
    64 => "10111101011110001010011110011111", 
    65 => "10111100110010011000000101110100", 
    66 => "10111101101111001110111111011011", 
    67 => "10111100001100110110110111001011", 
    68 => "10111101110111011010000101110010", 
    69 => "10111101001011001010011100110000", 
    70 => "10111101111101001011100010100001", 
    71 => "00111101001010010101000111001110", 
    72 => "00111100110011110100011010101111", 
    73 => "00111101000111001001100111100100", 
    74 => "10111101111010010000011011011011", 
    75 => "10111100010111010010111000111001", 
    76 => "10111100101100010011100001001100", 
    77 => "00111011111111000011100001100000", 
    78 => "10111010000001110110110111001000", 
    79 => "10111110000000101010111111111001", 
    80 => "10111101111000111000101001000111", 
    81 => "10111101110100111100000000100100", 
    82 => "00111101100011011111101011001101", 
    83 => "10111101110011101000000111001101", 
    84 => "10111100100110010111011100100101", 
    85 => "00111101001100111001101000101001", 
    86 => "10111100100000010010100100000000", 
    87 => "10111100001100000001010001110000", 
    88 => "10111101000101001011001100111110", 
    89 => "10111100111010110111100000010011", 
    90 => "10111110000001010000110000100101", 
    91 => "10111101101001110010011101011100", 
    92 => "10111101011011110000101001100111", 
    93 => "00111100111100010100010111001000", 
    94 => "10111101001100001110010010010100", 
    95 => "10111101010110110011000110000111", 
    96 => "00111011100101110100001000100110", 
    97 => "00111101110010001001110011001011", 
    98 => "10111101111111111001000010010111", 
    99 => "00111011010001110110110011100111", 
    100 => "00111100010111111001001100001110", 
    101 => "10111011110011001100101001001001", 
    102 => "10111101110011010110110111101010", 
    103 => "00111101000100000100010000001101", 
    104 => "00111100100000001111110100000101", 
    105 => "00111101000101011001111111001010", 
    106 => "10111101000000101011110000111101", 
    107 => "10111101101000111000110110101110", 
    108 => "10111011101010010110101101001001", 
    109 => "00111101001100000110000101011100", 
    110 => "00111101011011011101110111100001", 
    111 => "10111011110000101100111000000110", 
    112 => "10111100100101001000001010000011", 
    113 => "00111101000010111011000101011001", 
    114 => "10111011010010101001101000011000", 
    115 => "10111101010011010001001101000100", 
    116 => "10111010101100101010111010111110", 
    117 => "00111100110010001010010111110111", 
    118 => "00111101110010101000010110101010", 
    119 => "00111101111011001011111101110101", 
    120 => "00111110000110000100000110001111", 
    121 => "00111101100101011101011101000100", 
    122 => "00111011001011001110100100101101", 
    123 => "00111110001001011000011101111011", 
    124 => "00111101101110010000000000000101", 
    125 => "10111101101111001001100010111001", 
    126 => "00111110000100000010010100111100", 
    127 => "00111110000011011101001000001110", 
    128 => "00111101101010000111000100010001", 
    129 => "10111101010001010001011011010000", 
    130 => "00111110100100011110101011111000", 
    131 => "00111101101111110011000001011011", 
    132 => "10111101011110001110110000000010", 
    133 => "00111100000101111000111010110010", 
    134 => "10111101101100100001001100100011", 
    135 => "00111110001110100100110001100011", 
    136 => "00111101101001111001110001100011", 
    137 => "10111110010011010100001000101011", 
    138 => "10111110001111110000111101011111", 
    139 => "10111110101011001111100000110111", 
    140 => "10111101110000000110110001000001", 
    141 => "10111101111110100101110110010110", 
    142 => "10111101111111010001011001011001", 
    143 => "10111110011111000011100001010011", 
    144 => "10111101101100100110010011000110", 
    145 => "10111100100000111011000001011001", 
    146 => "10111110010101101010101010011011", 
    147 => "00111101011000011110011001010100", 
    148 => "00111101101101101000110110001010", 
    149 => "00111101111111111100011011100100", 
    150 => "10111101110110011111011110110110", 
    151 => "00111101110110100110101011011001", 
    152 => "00111110001011111111111101100100", 
    153 => "10111100101101010101110101000100", 
    154 => "10111110101001000001000111111000", 
    155 => "00111101001111010111000110111011", 
    156 => "00111101101110111110001000001111", 
    157 => "10111100001011011010001101000111", 
    158 => "10111101000110000110000100111011", 
    159 => "10111110001111010010111010111100", 
    160 => "10111110010111000101011001001101", 
    161 => "10111110000101100100100100010001", 
    162 => "00111100011011100111011101001100", 
    163 => "00111110010001100101000101111110", 
    164 => "10111100110001110111100111011100", 
    165 => "10111110000101010001001101100000", 
    166 => "10111101110000101010010100110001", 
    167 => "00111110000111010111100001100001", 
    168 => "00111110001110101110101001000100", 
    169 => "10111110010000111001111001010100", 
    170 => "00111110000111110011110001111011", 
    171 => "00111110010011010011001000000010", 
    172 => "00111101100001010100111101011100", 
    173 => "10111101101100001001100000010001", 
    174 => "10111101101010100001000101101110", 
    175 => "10111100010100010010101000110100", 
    176 => "00111101100100010000110000111100", 
    177 => "10111101010110011111001110010111", 
    178 => "10111101110111001111001000001000", 
    179 => "00111100011110101111101010111101", 
    180 => "00111100000001101010101010111111", 
    181 => "00111100100110011110000000100001", 
    182 => "00111101100001001111001011010100", 
    183 => "10111101100000010100010110100100", 
    184 => "10111010010001011001010010011111", 
    185 => "10111101110000100001001010011100", 
    186 => "10111110000111001011111101010000", 
    187 => "10111101111010011010111001010101", 
    188 => "10111011101001011011010011110000", 
    189 => "00111100101110100111101111011101", 
    190 => "10111100100011110111000101000111", 
    191 => "10111101110101110001001001110101", 
    192 => "00111100101111101101110011001010", 
    193 => "00111100101110111111001101000000", 
    194 => "10111011111101101101001011011011", 
    195 => "00111011100000001010110001100011", 
    196 => "10111100011110010000100111110111", 
    197 => "10111101100011000011010000100101", 
    198 => "10111101101001011010100010111010", 
    199 => "10111101101101100000000011110111" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weigsc4 is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weigsc4 is
    component convolution3_weigsc4_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weigsc4_rom_U :  component convolution3_weigsc4_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


