-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity convolution3_weigvdy_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 200
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of convolution3_weigvdy_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10111101100000110001000111011111", 
    1 => "00111011101010001010011111101010", 
    2 => "10111100000101001000111101111001", 
    3 => "00111100010010101010101101011111", 
    4 => "00111100111011100110110000011001", 
    5 => "10111101010010101000100000111100", 
    6 => "10111101111011101110100111010000", 
    7 => "10111110001011101011100001110011", 
    8 => "10111100111101000100000110001011", 
    9 => "00111101010100110011011001001000", 
    10 => "10111101100110100001100111000010", 
    11 => "10111100101111011001011110101011", 
    12 => "10111100111110100001110100001101", 
    13 => "00111011110011010110101100000010", 
    14 => "10111101100011101100110111010000", 
    15 => "00111100001001111111111100111000", 
    16 => "10111101001001111001111011101110", 
    17 => "10111110001110011110001101110100", 
    18 => "10111101110000110010000100101101", 
    19 => "10111101011000110100100111010100", 
    20 => "10111101000001000001111010001000", 
    21 => "00111100110001111101010010000101", 
    22 => "10111100110110001011010000000110", 
    23 => "00111100011000110000000000001010", 
    24 => "10111101110011111011100100001011", 
    25 => "10111101101001111111101111010110", 
    26 => "00111101101101010011000100101011", 
    27 => "10111100001111011100001111011011", 
    28 => "00111100101100111101111100001010", 
    29 => "10111101101110111111100010000101", 
    30 => "00111101111100010100010100101010", 
    31 => "00111101101001010100010010000101", 
    32 => "00111101110101011001101010110101", 
    33 => "10111101011110000010001001100011", 
    34 => "00111101100001110110111001100010", 
    35 => "00111101100101100100000011110011", 
    36 => "00111110000100101100000000011100", 
    37 => "10111100100000001011010011110001", 
    38 => "10111101101100100011100011011101", 
    39 => "10111101101001010101000000011001", 
    40 => "00111101000001000101111101110011", 
    41 => "00111101101000110111001101011011", 
    42 => "00111100101100000101010001000001", 
    43 => "00111101000110101111101100100110", 
    44 => "00111100001110001110010001100011", 
    45 => "10111011000100001111111001000000", 
    46 => "00111101100010101111101110111010", 
    47 => "00111101000010001100011100000110", 
    48 => "10111101110001001000000110100011", 
    49 => "10111100110101000101011111110001", 
    50 => "00111101001011011101111101110111", 
    51 => "10111100110001000101010010111001", 
    52 => "10111101110100000101100010010001", 
    53 => "10111101101000101001011000101100", 
    54 => "00111100110110110011111010011010", 
    55 => "10111101000101010001000010111001", 
    56 => "00111100111111000010100001001111", 
    57 => "00111101010000000111001010101100", 
    58 => "10111101000100000101010111000011", 
    59 => "10111101011000101011111111111100", 
    60 => "10111101111000101000110000100000", 
    61 => "10111101101111011111110010111100", 
    62 => "00111101010111000101000100010111", 
    63 => "10111101100010001111101101110000", 
    64 => "10111110000001110011001001011100", 
    65 => "00111101010011011010110000000101", 
    66 => "00111101001001101101101111110111", 
    67 => "00111101010100011111010011001101", 
    68 => "10111100110010000111010100111111", 
    69 => "00111101000000101100011100100101", 
    70 => "10111101100001011100000000110110", 
    71 => "00111101010000111011001100101011", 
    72 => "10111100001011010001110001001110", 
    73 => "10111101110001100101001111101010", 
    74 => "10111101111100010010011000100111", 
    75 => "10111101001110001001010010100111", 
    76 => "10111101100000100000001111000011", 
    77 => "10111110000010001101110111110110", 
    78 => "10111101101010111110010010001010", 
    79 => "10111101110100011100100010011110", 
    80 => "10111110000000101010100101100001", 
    81 => "10111110000000111001111011000010", 
    82 => "00111101000100110101111010011111", 
    83 => "00111101000111111110101000000011", 
    84 => "10111101100010010111100000110011", 
    85 => "00111011110010011101010101100001", 
    86 => "10111101000011110000101110000100", 
    87 => "10111101011011000010001111111011", 
    88 => "10111101010000000111000111010101", 
    89 => "10111100110001001101101100000001", 
    90 => "10111101111101111110000011000001", 
    91 => "10111101110011110110010001111110", 
    92 => "10111101110110110011100000101100", 
    93 => "10111100101100011010110000001111", 
    94 => "10111110000000111001110110101011", 
    95 => "00111101000010100111000110111001", 
    96 => "10111101000111110100000001100111", 
    97 => "10111100111010001110101110010111", 
    98 => "10111110000001001101110111001110", 
    99 => "10111100101011100011000000011111", 
    100 => "00111100000010111001011010101100", 
    101 => "10111101010001111011100111111110", 
    102 => "10111010100110010010000001001101", 
    103 => "00111100011111110101110110011001", 
    104 => "00111101001100100001001110011011", 
    105 => "00111101011110010111010001010101", 
    106 => "10111101100011000000111110100110", 
    107 => "10111100111101100001100111001000", 
    108 => "00111101001011000011001011111111", 
    109 => "00111100110111111001000010010100", 
    110 => "10111100000000100000010101011110", 
    111 => "00111100101101000111000100000001", 
    112 => "10111101011011110111011110110010", 
    113 => "00111100100100011101100000001010", 
    114 => "00111101010011101111100100000100", 
    115 => "00111011001001101011010100001011", 
    116 => "10111101000001010110010111110011", 
    117 => "10111110000011100000101001110101", 
    118 => "10111101100001100011110010101100", 
    119 => "00111100110010101101111111110011", 
    120 => "10111100110010100001101000000000", 
    121 => "10111101100000010100110101111111", 
    122 => "10111110010110111111001111111101", 
    123 => "10111100000101001010001010011010", 
    124 => "10111100100101100000100111011000", 
    125 => "00111101001100011000101111100100", 
    126 => "00111011100000100101000100111110", 
    127 => "10111101000111011000100111000001", 
    128 => "10111101000101000000011101000110", 
    129 => "00111100011011001110011101101010", 
    130 => "10111101111001000101111100110100", 
    131 => "10111110001101101101101000011010", 
    132 => "10111110011011000111100001110000", 
    133 => "10111110001110001100011100001100", 
    134 => "10111110000100111101000101010111", 
    135 => "10111110110001110001011100001100", 
    136 => "10111111000111011011111011111000", 
    137 => "10111110101001010011101001000100", 
    138 => "10111110110100111011001000110111", 
    139 => "10111110001001010010100000111101", 
    140 => "00111100110111011101111011101110", 
    141 => "10111101110100101101011011011001", 
    142 => "10111110010011010011111110101100", 
    143 => "10111101111010010110001011100001", 
    144 => "10111110100010111011010101011100", 
    145 => "00111100111100011110100100010001", 
    146 => "00111101101000110000001001110000", 
    147 => "00111011110101111010111100101001", 
    148 => "00111101001001110101111111010011", 
    149 => "10111110001010000011001000001000", 
    150 => "10111110011101010010001100001111", 
    151 => "10111110110001110110100011000000", 
    152 => "00111100110100000111100100011111", 
    153 => "00111101101001110010000010111011", 
    154 => "00111110000100100101110010100100", 
    155 => "00111101100100111011010111000111", 
    156 => "00111101000010110011101101010000", 
    157 => "00111101110010101001111001000100", 
    158 => "10111100010010001011011101011111", 
    159 => "00111110000011001010001000110110", 
    160 => "00111101110110010100111001111110", 
    161 => "00111100000001010010010011001101", 
    162 => "10111101100110011110010100000101", 
    163 => "10111011010010010110110011110001", 
    164 => "10111110100111101000001001110100", 
    165 => "00111101100111111101100011111100", 
    166 => "00111011101110001000010111101110", 
    167 => "10111101111101111010110111111010", 
    168 => "10111110100110000100100010110110", 
    169 => "00111101001000110111101110001101", 
    170 => "10111100110111010011111100000101", 
    171 => "10111101000110110000101111101010", 
    172 => "10111100101010100100011001110000", 
    173 => "10111110000001100010010111100000", 
    174 => "00111101110011001101101010001101", 
    175 => "10111101110000011000111010100100", 
    176 => "10111101001000110011011011101001", 
    177 => "10111101100110011000100100101101", 
    178 => "10111101110101011001010010000110", 
    179 => "10111110001010110100101001001000", 
    180 => "10111110000011000011000000100110", 
    181 => "10111101000011001011010100111101", 
    182 => "10111101100101111011001111100000", 
    183 => "10111101110001010111011001000101", 
    184 => "10111110000100010101101101101101", 
    185 => "10111101000110000000001111010010", 
    186 => "00111011001101101100101110101111", 
    187 => "10111110001000010011001001100110", 
    188 => "10111011000000111111111001010010", 
    189 => "00111101011100000101110100001101", 
    190 => "10111101000111000100111000111111", 
    191 => "10111110000001001110110001101110", 
    192 => "10111101101100000111011000010011", 
    193 => "10111110001000101010111100101110", 
    194 => "00111101100010111111001111010011", 
    195 => "00111100101001100001111001001101", 
    196 => "10111101101001011001111110011100", 
    197 => "10111101101001000010111001000000", 
    198 => "10111101110111100011110110100111", 
    199 => "10111110000011001110100101111100" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity convolution3_weigvdy is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 200;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of convolution3_weigvdy is
    component convolution3_weigvdy_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    convolution3_weigvdy_rom_U :  component convolution3_weigvdy_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


