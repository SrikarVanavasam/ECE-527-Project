// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convolution5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        input_0_address1,
        input_0_ce1,
        input_0_q1,
        input_1_address0,
        input_1_ce0,
        input_1_q0,
        input_1_address1,
        input_1_ce1,
        input_1_q1,
        output_0_0_0_address0,
        output_0_0_0_ce0,
        output_0_0_0_q0,
        output_0_0_0_address1,
        output_0_0_0_ce1,
        output_0_0_0_we1,
        output_0_0_0_d1,
        output_1_0_0_address0,
        output_1_0_0_ce0,
        output_1_0_0_q0,
        output_1_0_0_address1,
        output_1_0_0_ce1,
        output_1_0_0_we1,
        output_1_0_0_d1,
        output_2_0_0_address0,
        output_2_0_0_ce0,
        output_2_0_0_q0,
        output_2_0_0_address1,
        output_2_0_0_ce1,
        output_2_0_0_we1,
        output_2_0_0_d1,
        output_3_0_0_address0,
        output_3_0_0_ce0,
        output_3_0_0_q0,
        output_3_0_0_address1,
        output_3_0_0_ce1,
        output_3_0_0_we1,
        output_3_0_0_d1,
        output_4_0_0_address0,
        output_4_0_0_ce0,
        output_4_0_0_q0,
        output_4_0_0_address1,
        output_4_0_0_ce1,
        output_4_0_0_we1,
        output_4_0_0_d1,
        output_5_0_0_address0,
        output_5_0_0_ce0,
        output_5_0_0_q0,
        output_5_0_0_address1,
        output_5_0_0_ce1,
        output_5_0_0_we1,
        output_5_0_0_d1
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state39 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [7:0] input_0_address0;
output   input_0_ce0;
input  [31:0] input_0_q0;
output  [7:0] input_0_address1;
output   input_0_ce1;
input  [31:0] input_0_q1;
output  [7:0] input_1_address0;
output   input_1_ce0;
input  [31:0] input_1_q0;
output  [7:0] input_1_address1;
output   input_1_ce1;
input  [31:0] input_1_q1;
output  [4:0] output_0_0_0_address0;
output   output_0_0_0_ce0;
input  [31:0] output_0_0_0_q0;
output  [4:0] output_0_0_0_address1;
output   output_0_0_0_ce1;
output   output_0_0_0_we1;
output  [31:0] output_0_0_0_d1;
output  [4:0] output_1_0_0_address0;
output   output_1_0_0_ce0;
input  [31:0] output_1_0_0_q0;
output  [4:0] output_1_0_0_address1;
output   output_1_0_0_ce1;
output   output_1_0_0_we1;
output  [31:0] output_1_0_0_d1;
output  [4:0] output_2_0_0_address0;
output   output_2_0_0_ce0;
input  [31:0] output_2_0_0_q0;
output  [4:0] output_2_0_0_address1;
output   output_2_0_0_ce1;
output   output_2_0_0_we1;
output  [31:0] output_2_0_0_d1;
output  [4:0] output_3_0_0_address0;
output   output_3_0_0_ce0;
input  [31:0] output_3_0_0_q0;
output  [4:0] output_3_0_0_address1;
output   output_3_0_0_ce1;
output   output_3_0_0_we1;
output  [31:0] output_3_0_0_d1;
output  [4:0] output_4_0_0_address0;
output   output_4_0_0_ce0;
input  [31:0] output_4_0_0_q0;
output  [4:0] output_4_0_0_address1;
output   output_4_0_0_ce1;
output   output_4_0_0_we1;
output  [31:0] output_4_0_0_d1;
output  [4:0] output_5_0_0_address0;
output   output_5_0_0_ce0;
input  [31:0] output_5_0_0_q0;
output  [4:0] output_5_0_0_address1;
output   output_5_0_0_ce1;
output   output_5_0_0_we1;
output  [31:0] output_5_0_0_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_0_ce0;
reg input_0_ce1;
reg input_1_ce0;
reg input_1_ce1;
reg output_0_0_0_ce0;
reg output_0_0_0_ce1;
reg output_0_0_0_we1;
reg output_1_0_0_ce0;
reg output_1_0_0_ce1;
reg output_1_0_0_we1;
reg output_2_0_0_ce0;
reg output_2_0_0_ce1;
reg output_2_0_0_we1;
reg output_3_0_0_ce0;
reg output_3_0_0_ce1;
reg output_3_0_0_we1;
reg output_4_0_0_ce0;
reg output_4_0_0_ce1;
reg output_4_0_0_we1;
reg output_5_0_0_ce0;
reg output_5_0_0_ce1;
reg output_5_0_0_we1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] bias_conv5_buffer_0_address0;
reg    bias_conv5_buffer_0_ce0;
wire   [31:0] bias_conv5_buffer_0_q0;
reg   [11:0] weights_conv5_buffer_11_address0;
reg    weights_conv5_buffer_11_ce0;
wire   [31:0] weights_conv5_buffer_11_q0;
reg   [11:0] weights_conv5_buffer_10_address0;
reg    weights_conv5_buffer_10_ce0;
wire   [31:0] weights_conv5_buffer_10_q0;
reg   [11:0] weights_conv5_buffer_9_address0;
reg    weights_conv5_buffer_9_ce0;
wire   [31:0] weights_conv5_buffer_9_q0;
reg   [11:0] weights_conv5_buffer_8_address0;
reg    weights_conv5_buffer_8_ce0;
wire   [31:0] weights_conv5_buffer_8_q0;
reg   [11:0] weights_conv5_buffer_7_address0;
reg    weights_conv5_buffer_7_ce0;
wire   [31:0] weights_conv5_buffer_7_q0;
reg   [11:0] weights_conv5_buffer_6_address0;
reg    weights_conv5_buffer_6_ce0;
wire   [31:0] weights_conv5_buffer_6_q0;
reg   [11:0] weights_conv5_buffer_5_address0;
reg    weights_conv5_buffer_5_ce0;
wire   [31:0] weights_conv5_buffer_5_q0;
reg   [11:0] weights_conv5_buffer_4_address0;
reg    weights_conv5_buffer_4_ce0;
wire   [31:0] weights_conv5_buffer_4_q0;
reg   [11:0] weights_conv5_buffer_3_address0;
reg    weights_conv5_buffer_3_ce0;
wire   [31:0] weights_conv5_buffer_3_q0;
reg   [11:0] weights_conv5_buffer_2_address0;
reg    weights_conv5_buffer_2_ce0;
wire   [31:0] weights_conv5_buffer_2_q0;
reg   [11:0] weights_conv5_buffer_1_address0;
reg    weights_conv5_buffer_1_ce0;
wire   [31:0] weights_conv5_buffer_1_q0;
reg   [11:0] weights_conv5_buffer_address0;
reg    weights_conv5_buffer_ce0;
wire   [31:0] weights_conv5_buffer_q0;
reg   [10:0] indvar_flatten115_reg_584;
reg   [2:0] m_0_reg_595;
reg   [9:0] indvar_flatten53_reg_607;
reg   [2:0] n_0_reg_619;
reg   [7:0] indvar_flatten_reg_631;
reg   [4:0] ci_0_reg_643;
reg   [6:0] co_0_reg_655;
wire   [0:0] icmp_ln181_fu_790_p2;
reg   [0:0] icmp_ln181_reg_3279;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state14_pp0_stage0_iter6;
wire    ap_block_state16_pp0_stage0_iter7;
wire    ap_block_state18_pp0_stage0_iter8;
wire    ap_block_state20_pp0_stage0_iter9;
wire    ap_block_state22_pp0_stage0_iter10;
wire    ap_block_state24_pp0_stage0_iter11;
wire    ap_block_state26_pp0_stage0_iter12;
wire    ap_block_state28_pp0_stage0_iter13;
wire    ap_block_state30_pp0_stage0_iter14;
wire    ap_block_state32_pp0_stage0_iter15;
wire    ap_block_state34_pp0_stage0_iter16;
wire    ap_block_state36_pp0_stage0_iter17;
wire    ap_block_state38_pp0_stage0_iter18;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln181_1_fu_796_p2;
reg   [0:0] icmp_ln181_1_reg_3284;
wire   [0:0] icmp_ln176_fu_838_p2;
reg   [0:0] icmp_ln176_reg_3289;
reg   [3:0] lshr_ln_reg_3294;
wire   [2:0] or_ln178_fu_864_p2;
reg   [2:0] or_ln178_reg_3299;
reg   [2:0] lshr_ln178_2_reg_3304;
wire   [0:0] and_ln181_1_fu_898_p2;
reg   [0:0] and_ln181_1_reg_3309;
wire   [0:0] icmp_ln165_fu_904_p2;
reg   [0:0] icmp_ln165_reg_3314;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter1_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter2_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter3_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter4_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter5_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter6_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter7_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter8_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter9_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter10_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter11_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter12_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter13_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter14_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter15_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter16_reg;
reg   [0:0] icmp_ln165_reg_3314_pp0_iter17_reg;
wire   [10:0] add_ln165_fu_910_p2;
reg   [10:0] add_ln165_reg_3318;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln166_fu_916_p2;
reg   [0:0] icmp_ln166_reg_3323;
wire   [0:0] xor_ln178_fu_922_p2;
reg   [0:0] xor_ln178_reg_3335;
wire   [0:0] icmp_ln168_fu_928_p2;
reg   [0:0] icmp_ln168_reg_3341;
wire   [0:0] icmp_ln167_fu_934_p2;
reg   [0:0] icmp_ln167_reg_3346;
wire   [0:0] and_ln178_2_fu_940_p2;
reg   [0:0] and_ln178_2_reg_3351;
wire   [2:0] select_ln178_1_fu_959_p3;
reg   [2:0] select_ln178_1_reg_3360;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
wire    ap_block_state9_pp0_stage1_iter3;
wire    ap_block_state11_pp0_stage1_iter4;
wire    ap_block_state13_pp0_stage1_iter5;
wire    ap_block_state15_pp0_stage1_iter6;
wire    ap_block_state17_pp0_stage1_iter7;
wire    ap_block_state19_pp0_stage1_iter8;
wire    ap_block_state21_pp0_stage1_iter9;
wire    ap_block_state23_pp0_stage1_iter10;
wire    ap_block_state25_pp0_stage1_iter11;
wire    ap_block_state27_pp0_stage1_iter12;
wire    ap_block_state29_pp0_stage1_iter13;
wire    ap_block_state31_pp0_stage1_iter14;
wire    ap_block_state33_pp0_stage1_iter15;
wire    ap_block_state35_pp0_stage1_iter16;
wire    ap_block_state37_pp0_stage1_iter17;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] zext_ln178_fu_966_p1;
reg   [63:0] zext_ln178_reg_3365;
wire   [2:0] select_ln178_6_fu_1040_p3;
reg   [2:0] select_ln178_6_reg_3389;
wire   [6:0] select_ln167_fu_1135_p3;
reg   [6:0] select_ln167_reg_3396;
wire   [0:0] select_ln167_1_fu_1185_p3;
reg   [0:0] select_ln167_1_reg_3403;
reg   [0:0] select_ln167_1_reg_3403_pp0_iter1_reg;
reg   [0:0] select_ln167_1_reg_3403_pp0_iter2_reg;
reg   [0:0] select_ln167_1_reg_3403_pp0_iter3_reg;
wire   [3:0] select_ln167_2_fu_1203_p3;
reg   [3:0] select_ln167_2_reg_3413;
wire   [8:0] trunc_ln178_fu_1239_p1;
reg   [8:0] trunc_ln178_reg_3418;
wire   [6:0] trunc_ln178_1_fu_1243_p1;
reg   [6:0] trunc_ln178_1_reg_3423;
wire   [2:0] select_ln167_3_fu_1263_p3;
reg   [2:0] select_ln167_3_reg_3428;
wire   [2:0] select_ln167_4_fu_1287_p3;
reg   [2:0] select_ln167_4_reg_3446;
wire   [0:0] select_ln167_5_fu_1313_p3;
reg   [0:0] select_ln167_5_reg_3464;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter1_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter2_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter3_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter4_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter5_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter6_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter7_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter8_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter9_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter10_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter11_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter12_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter13_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter14_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter15_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter16_reg;
reg   [0:0] select_ln167_5_reg_3464_pp0_iter17_reg;
wire   [4:0] select_ln167_6_fu_1321_p3;
reg   [4:0] select_ln167_6_reg_3474;
reg  signed [5:0] tmp_19_reg_3479;
reg  signed [5:0] tmp_22_reg_3485;
reg  signed [5:0] tmp_25_reg_3491;
wire   [6:0] co_fu_1401_p2;
reg   [6:0] co_reg_3497;
wire   [7:0] select_ln167_7_fu_1413_p3;
reg   [7:0] select_ln167_7_reg_3502;
wire   [9:0] select_ln166_fu_1427_p3;
reg   [9:0] select_ln166_reg_3507;
wire   [8:0] zext_ln178_2_fu_1434_p1;
reg   [8:0] zext_ln178_2_reg_3512;
wire   [12:0] trunc_ln178_6_fu_1512_p1;
reg   [12:0] trunc_ln178_6_reg_3528;
wire   [10:0] trunc_ln178_7_fu_1516_p1;
reg   [10:0] trunc_ln178_7_reg_3533;
wire   [12:0] trunc_ln178_12_fu_1568_p1;
reg   [12:0] trunc_ln178_12_reg_3538;
wire   [10:0] trunc_ln178_13_fu_1572_p1;
reg   [10:0] trunc_ln178_13_reg_3543;
wire   [12:0] trunc_ln178_18_fu_1624_p1;
reg   [12:0] trunc_ln178_18_reg_3548;
wire   [10:0] trunc_ln178_19_fu_1628_p1;
reg   [10:0] trunc_ln178_19_reg_3553;
wire  signed [5:0] tmp_28_fu_1647_p4;
reg  signed [5:0] tmp_28_reg_3558;
wire   [10:0] add_ln178_55_fu_1673_p2;
reg   [10:0] add_ln178_55_reg_3563;
wire  signed [5:0] tmp_31_fu_1694_p4;
reg  signed [5:0] tmp_31_reg_3569;
wire   [10:0] add_ln178_68_fu_1720_p2;
reg   [10:0] add_ln178_68_reg_3574;
wire  signed [5:0] tmp_55_fu_1741_p4;
reg  signed [5:0] tmp_55_reg_3580;
wire   [10:0] add_ln178_81_fu_1767_p2;
reg   [10:0] add_ln178_81_reg_3585;
wire   [12:0] zext_ln178_1_fu_1773_p1;
reg   [12:0] zext_ln178_1_reg_3591;
wire   [8:0] add_ln178_11_fu_1823_p2;
reg   [8:0] add_ln178_11_reg_3607;
wire   [8:0] add_ln178_15_fu_1875_p2;
reg   [8:0] add_ln178_15_reg_3612;
wire  signed [6:0] sext_ln179_fu_1880_p1;
reg  signed [6:0] sext_ln179_reg_3617;
reg  signed [6:0] sext_ln179_reg_3617_pp0_iter2_reg;
wire   [12:0] trunc_ln178_8_fu_1938_p1;
reg   [12:0] trunc_ln178_8_reg_3627;
wire   [10:0] trunc_ln178_9_fu_1942_p1;
reg   [10:0] trunc_ln178_9_reg_3632;
wire   [12:0] trunc_ln178_10_fu_1977_p1;
reg   [12:0] trunc_ln178_10_reg_3642;
wire   [10:0] trunc_ln178_11_fu_1981_p1;
reg   [10:0] trunc_ln178_11_reg_3647;
reg   [31:0] input_0_load_reg_3652;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] input_0_load_reg_3652_pp0_iter2_reg;
reg   [31:0] input_1_load_reg_3662;
reg   [31:0] input_1_load_reg_3662_pp0_iter2_reg;
wire   [12:0] trunc_ln178_14_fu_2048_p1;
reg   [12:0] trunc_ln178_14_reg_3677;
wire   [10:0] trunc_ln178_15_fu_2052_p1;
reg   [10:0] trunc_ln178_15_reg_3682;
wire   [12:0] trunc_ln178_16_fu_2087_p1;
reg   [12:0] trunc_ln178_16_reg_3692;
wire   [10:0] trunc_ln178_17_fu_2091_p1;
reg   [10:0] trunc_ln178_17_reg_3697;
reg   [4:0] output_1_0_0_addr_reg_3702;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter2_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter3_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter4_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter5_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter6_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter7_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter8_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter9_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter10_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter11_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter12_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter13_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter14_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter15_reg;
reg   [4:0] output_1_0_0_addr_reg_3702_pp0_iter16_reg;
wire   [12:0] trunc_ln178_20_fu_2158_p1;
reg   [12:0] trunc_ln178_20_reg_3713;
wire   [10:0] trunc_ln178_21_fu_2162_p1;
reg   [10:0] trunc_ln178_21_reg_3718;
wire   [12:0] trunc_ln178_22_fu_2197_p1;
reg   [12:0] trunc_ln178_22_reg_3728;
wire   [10:0] trunc_ln178_23_fu_2201_p1;
reg   [10:0] trunc_ln178_23_reg_3733;
reg   [4:0] output_2_0_0_addr_reg_3738;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter2_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter3_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter4_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter5_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter6_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter7_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter8_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter9_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter10_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter11_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter12_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter13_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter14_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter15_reg;
reg   [4:0] output_2_0_0_addr_reg_3738_pp0_iter16_reg;
wire   [12:0] add_ln178_59_fu_2260_p2;
reg   [12:0] add_ln178_59_reg_3744;
wire   [12:0] trunc_ln178_26_fu_2297_p1;
reg   [12:0] trunc_ln178_26_reg_3749;
wire   [10:0] trunc_ln178_27_fu_2301_p1;
reg   [10:0] trunc_ln178_27_reg_3754;
wire   [12:0] trunc_ln178_28_fu_2336_p1;
reg   [12:0] trunc_ln178_28_reg_3759;
wire   [10:0] trunc_ln178_29_fu_2340_p1;
reg   [10:0] trunc_ln178_29_reg_3764;
reg   [4:0] output_3_0_0_addr_reg_3769;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter2_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter3_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter4_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter5_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter6_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter7_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter8_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter9_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter10_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter11_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter12_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter13_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter14_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter15_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter16_reg;
reg   [4:0] output_3_0_0_addr_reg_3769_pp0_iter17_reg;
wire   [12:0] add_ln178_72_fu_2399_p2;
reg   [12:0] add_ln178_72_reg_3775;
wire   [12:0] trunc_ln178_32_fu_2436_p1;
reg   [12:0] trunc_ln178_32_reg_3780;
wire   [10:0] trunc_ln178_33_fu_2440_p1;
reg   [10:0] trunc_ln178_33_reg_3785;
wire   [12:0] trunc_ln178_34_fu_2475_p1;
reg   [12:0] trunc_ln178_34_reg_3790;
wire   [10:0] trunc_ln178_35_fu_2479_p1;
reg   [10:0] trunc_ln178_35_reg_3795;
reg   [4:0] output_4_0_0_addr_reg_3800;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter2_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter3_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter4_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter5_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter6_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter7_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter8_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter9_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter10_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter11_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter12_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter13_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter14_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter15_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter16_reg;
reg   [4:0] output_4_0_0_addr_reg_3800_pp0_iter17_reg;
wire   [12:0] add_ln178_85_fu_2538_p2;
reg   [12:0] add_ln178_85_reg_3806;
wire   [12:0] trunc_ln178_38_fu_2575_p1;
reg   [12:0] trunc_ln178_38_reg_3811;
wire   [10:0] trunc_ln178_39_fu_2579_p1;
reg   [10:0] trunc_ln178_39_reg_3816;
wire   [12:0] trunc_ln178_40_fu_2614_p1;
reg   [12:0] trunc_ln178_40_reg_3821;
wire   [10:0] trunc_ln178_41_fu_2618_p1;
reg   [10:0] trunc_ln178_41_reg_3826;
reg   [4:0] output_5_0_0_addr_reg_3831;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter2_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter3_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter4_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter5_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter6_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter7_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter8_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter9_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter10_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter11_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter12_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter13_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter14_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter15_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter16_reg;
reg   [4:0] output_5_0_0_addr_reg_3831_pp0_iter17_reg;
reg   [31:0] weights_conv5_buffer_16_reg_3857;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] weights_conv5_buffer_17_reg_3862;
reg   [31:0] weights_conv5_buffer_24_reg_3877;
reg   [31:0] weights_conv5_buffer_25_reg_3882;
reg   [31:0] weights_conv5_buffer_32_reg_3897;
reg   [31:0] weights_conv5_buffer_33_reg_3902;
wire   [12:0] add_ln178_63_fu_2779_p2;
reg   [12:0] add_ln178_63_reg_3912;
wire   [12:0] add_ln178_67_fu_2796_p2;
reg   [12:0] add_ln178_67_reg_3922;
wire   [12:0] add_ln178_76_fu_2818_p2;
reg   [12:0] add_ln178_76_reg_3932;
wire   [12:0] add_ln178_80_fu_2835_p2;
reg   [12:0] add_ln178_80_reg_3942;
wire   [12:0] add_ln178_89_fu_2857_p2;
reg   [12:0] add_ln178_89_reg_3952;
wire   [12:0] add_ln178_93_fu_2874_p2;
reg   [12:0] add_ln178_93_reg_3962;
reg   [31:0] weights_conv5_buffer_18_reg_3967;
reg   [31:0] input_0_load_1_reg_3972;
reg   [31:0] weights_conv5_buffer_19_reg_3982;
reg   [31:0] input_1_load_1_reg_3987;
reg   [31:0] weights_conv5_buffer_26_reg_3997;
reg   [31:0] weights_conv5_buffer_27_reg_4002;
reg   [31:0] weights_conv5_buffer_34_reg_4007;
reg   [31:0] weights_conv5_buffer_35_reg_4012;
reg   [31:0] weights_conv5_buffer_40_reg_4027;
reg   [31:0] weights_conv5_buffer_41_reg_4032;
reg   [31:0] weights_conv5_buffer_48_reg_4047;
reg   [31:0] weights_conv5_buffer_49_reg_4052;
reg   [31:0] weights_conv5_buffer_56_reg_4067;
reg   [31:0] weights_conv5_buffer_57_reg_4072;
reg   [31:0] weights_conv5_buffer_42_reg_4077;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] weights_conv5_buffer_43_reg_4082;
reg   [31:0] weights_conv5_buffer_50_reg_4087;
reg   [31:0] weights_conv5_buffer_51_reg_4092;
reg   [31:0] weights_conv5_buffer_58_reg_4097;
reg   [31:0] weights_conv5_buffer_59_reg_4102;
wire   [63:0] zext_ln179_fu_2903_p1;
reg   [63:0] zext_ln179_reg_4107;
reg   [63:0] zext_ln179_reg_4107_pp0_iter4_reg;
reg   [63:0] zext_ln179_reg_4107_pp0_iter5_reg;
reg   [63:0] zext_ln179_reg_4107_pp0_iter6_reg;
reg   [63:0] zext_ln179_reg_4107_pp0_iter7_reg;
reg   [63:0] zext_ln179_reg_4107_pp0_iter8_reg;
reg   [63:0] zext_ln179_reg_4107_pp0_iter9_reg;
reg   [63:0] zext_ln179_reg_4107_pp0_iter10_reg;
reg   [63:0] zext_ln179_reg_4107_pp0_iter11_reg;
reg   [63:0] zext_ln179_reg_4107_pp0_iter12_reg;
reg   [4:0] output_0_0_0_addr_reg_4112;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter4_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter5_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter6_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter7_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter8_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter9_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter10_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter11_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter12_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter13_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter14_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter15_reg;
reg   [4:0] output_0_0_0_addr_reg_4112_pp0_iter16_reg;
reg   [31:0] output_0_0_0_load_reg_4118;
reg    ap_enable_reg_pp0_iter4;
wire   [31:0] grp_fu_727_p2;
reg   [31:0] tmp1_reg_4123;
wire   [31:0] grp_fu_731_p2;
reg   [31:0] tmp_0_1_reg_4128;
reg   [31:0] tmp_0_1_reg_4128_pp0_iter5_reg;
reg   [31:0] tmp_0_1_reg_4128_pp0_iter6_reg;
reg   [31:0] output_1_0_0_load_reg_4133;
wire   [31:0] grp_fu_735_p2;
reg   [31:0] tmp_1_reg_4138;
wire   [31:0] grp_fu_739_p2;
reg   [31:0] tmp_1_1_reg_4143;
reg   [31:0] tmp_1_1_reg_4143_pp0_iter5_reg;
reg   [31:0] tmp_1_1_reg_4143_pp0_iter6_reg;
reg   [31:0] output_2_0_0_load_reg_4148;
wire   [31:0] grp_fu_743_p2;
reg   [31:0] tmp_2_reg_4153;
wire   [31:0] grp_fu_747_p2;
reg   [31:0] tmp_2_1_reg_4158;
reg   [31:0] tmp_2_1_reg_4158_pp0_iter5_reg;
reg   [31:0] tmp_2_1_reg_4158_pp0_iter6_reg;
wire   [31:0] select_ln176_fu_2907_p3;
reg   [31:0] tmp_0_2_reg_4168;
reg   [31:0] tmp_0_2_reg_4168_pp0_iter5_reg;
reg   [31:0] tmp_0_2_reg_4168_pp0_iter6_reg;
reg   [31:0] tmp_0_2_reg_4168_pp0_iter7_reg;
reg   [31:0] tmp_0_2_reg_4168_pp0_iter8_reg;
reg   [31:0] tmp_0_3_reg_4173;
reg   [31:0] tmp_0_3_reg_4173_pp0_iter5_reg;
reg   [31:0] tmp_0_3_reg_4173_pp0_iter6_reg;
reg   [31:0] tmp_0_3_reg_4173_pp0_iter7_reg;
reg   [31:0] tmp_0_3_reg_4173_pp0_iter8_reg;
reg   [31:0] tmp_0_3_reg_4173_pp0_iter9_reg;
reg   [31:0] tmp_0_3_reg_4173_pp0_iter10_reg;
reg   [31:0] tmp_0_3_reg_4173_pp0_iter11_reg;
wire   [31:0] select_ln176_1_fu_2914_p3;
reg   [31:0] tmp_1_2_reg_4183;
reg   [31:0] tmp_1_2_reg_4183_pp0_iter5_reg;
reg   [31:0] tmp_1_2_reg_4183_pp0_iter6_reg;
reg   [31:0] tmp_1_2_reg_4183_pp0_iter7_reg;
reg   [31:0] tmp_1_2_reg_4183_pp0_iter8_reg;
reg   [31:0] tmp_1_3_reg_4188;
reg   [31:0] tmp_1_3_reg_4188_pp0_iter5_reg;
reg   [31:0] tmp_1_3_reg_4188_pp0_iter6_reg;
reg   [31:0] tmp_1_3_reg_4188_pp0_iter7_reg;
reg   [31:0] tmp_1_3_reg_4188_pp0_iter8_reg;
reg   [31:0] tmp_1_3_reg_4188_pp0_iter9_reg;
reg   [31:0] tmp_1_3_reg_4188_pp0_iter10_reg;
reg   [31:0] tmp_1_3_reg_4188_pp0_iter11_reg;
wire   [31:0] select_ln176_2_fu_2921_p3;
reg   [31:0] tmp_2_2_reg_4198;
reg   [31:0] tmp_2_2_reg_4198_pp0_iter5_reg;
reg   [31:0] tmp_2_2_reg_4198_pp0_iter6_reg;
reg   [31:0] tmp_2_2_reg_4198_pp0_iter7_reg;
reg   [31:0] tmp_2_2_reg_4198_pp0_iter8_reg;
reg   [31:0] tmp_2_3_reg_4203;
reg   [31:0] tmp_2_3_reg_4203_pp0_iter5_reg;
reg   [31:0] tmp_2_3_reg_4203_pp0_iter6_reg;
reg   [31:0] tmp_2_3_reg_4203_pp0_iter7_reg;
reg   [31:0] tmp_2_3_reg_4203_pp0_iter8_reg;
reg   [31:0] tmp_2_3_reg_4203_pp0_iter9_reg;
reg   [31:0] tmp_2_3_reg_4203_pp0_iter10_reg;
reg   [31:0] tmp_2_3_reg_4203_pp0_iter11_reg;
wire   [31:0] select_ln176_3_fu_2928_p3;
reg   [31:0] select_ln176_3_reg_4208;
wire   [31:0] grp_fu_751_p2;
reg   [31:0] tmp_3_reg_4213;
wire   [31:0] grp_fu_755_p2;
reg   [31:0] tmp_3_1_reg_4218;
reg   [31:0] tmp_3_1_reg_4218_pp0_iter5_reg;
reg   [31:0] tmp_3_1_reg_4218_pp0_iter6_reg;
wire   [31:0] select_ln176_4_fu_2935_p3;
reg   [31:0] select_ln176_4_reg_4223;
wire   [31:0] grp_fu_759_p2;
reg   [31:0] tmp_4_reg_4228;
wire   [31:0] grp_fu_763_p2;
reg   [31:0] tmp_4_1_reg_4233;
reg   [31:0] tmp_4_1_reg_4233_pp0_iter5_reg;
reg   [31:0] tmp_4_1_reg_4233_pp0_iter6_reg;
wire   [31:0] select_ln176_5_fu_2942_p3;
reg   [31:0] select_ln176_5_reg_4238;
wire   [31:0] grp_fu_767_p2;
reg   [31:0] tmp_5_reg_4243;
wire   [31:0] grp_fu_771_p2;
reg   [31:0] tmp_5_1_reg_4248;
reg   [31:0] tmp_5_1_reg_4248_pp0_iter5_reg;
reg   [31:0] tmp_5_1_reg_4248_pp0_iter6_reg;
reg   [31:0] tmp_3_2_reg_4253;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] tmp_3_2_reg_4253_pp0_iter6_reg;
reg   [31:0] tmp_3_2_reg_4253_pp0_iter7_reg;
reg   [31:0] tmp_3_2_reg_4253_pp0_iter8_reg;
reg   [31:0] tmp_3_2_reg_4253_pp0_iter9_reg;
reg   [31:0] tmp_3_3_reg_4258;
reg   [31:0] tmp_3_3_reg_4258_pp0_iter6_reg;
reg   [31:0] tmp_3_3_reg_4258_pp0_iter7_reg;
reg   [31:0] tmp_3_3_reg_4258_pp0_iter8_reg;
reg   [31:0] tmp_3_3_reg_4258_pp0_iter9_reg;
reg   [31:0] tmp_3_3_reg_4258_pp0_iter10_reg;
reg   [31:0] tmp_3_3_reg_4258_pp0_iter11_reg;
reg   [31:0] tmp_3_3_reg_4258_pp0_iter12_reg;
reg   [31:0] tmp_4_2_reg_4263;
reg   [31:0] tmp_4_2_reg_4263_pp0_iter6_reg;
reg   [31:0] tmp_4_2_reg_4263_pp0_iter7_reg;
reg   [31:0] tmp_4_2_reg_4263_pp0_iter8_reg;
reg   [31:0] tmp_4_2_reg_4263_pp0_iter9_reg;
reg   [31:0] tmp_4_3_reg_4268;
reg   [31:0] tmp_4_3_reg_4268_pp0_iter6_reg;
reg   [31:0] tmp_4_3_reg_4268_pp0_iter7_reg;
reg   [31:0] tmp_4_3_reg_4268_pp0_iter8_reg;
reg   [31:0] tmp_4_3_reg_4268_pp0_iter9_reg;
reg   [31:0] tmp_4_3_reg_4268_pp0_iter10_reg;
reg   [31:0] tmp_4_3_reg_4268_pp0_iter11_reg;
reg   [31:0] tmp_4_3_reg_4268_pp0_iter12_reg;
reg   [31:0] tmp_5_2_reg_4273;
reg   [31:0] tmp_5_2_reg_4273_pp0_iter6_reg;
reg   [31:0] tmp_5_2_reg_4273_pp0_iter7_reg;
reg   [31:0] tmp_5_2_reg_4273_pp0_iter8_reg;
reg   [31:0] tmp_5_2_reg_4273_pp0_iter9_reg;
reg   [31:0] tmp_5_3_reg_4278;
reg   [31:0] tmp_5_3_reg_4278_pp0_iter6_reg;
reg   [31:0] tmp_5_3_reg_4278_pp0_iter7_reg;
reg   [31:0] tmp_5_3_reg_4278_pp0_iter8_reg;
reg   [31:0] tmp_5_3_reg_4278_pp0_iter9_reg;
reg   [31:0] tmp_5_3_reg_4278_pp0_iter10_reg;
reg   [31:0] tmp_5_3_reg_4278_pp0_iter11_reg;
reg   [31:0] tmp_5_3_reg_4278_pp0_iter12_reg;
wire   [31:0] grp_fu_667_p2;
reg   [31:0] acc_reg_4283;
reg    ap_enable_reg_pp0_iter6;
wire   [31:0] grp_fu_671_p2;
reg   [31:0] acc_1_reg_4288;
wire   [31:0] grp_fu_675_p2;
reg   [31:0] acc_2_reg_4293;
reg   [31:0] acc_3_reg_4298;
reg    ap_enable_reg_pp0_iter7;
reg   [31:0] acc_4_reg_4303;
reg   [31:0] acc_5_reg_4308;
wire   [31:0] grp_fu_679_p2;
reg   [31:0] acc_0_1_reg_4313;
reg    ap_enable_reg_pp0_iter9;
wire   [31:0] grp_fu_683_p2;
reg   [31:0] acc_1_1_reg_4318;
wire   [31:0] grp_fu_687_p2;
reg   [31:0] acc_2_1_reg_4323;
reg   [31:0] acc_3_1_reg_4328;
reg   [31:0] acc_4_1_reg_4333;
reg   [31:0] acc_5_1_reg_4338;
wire   [31:0] grp_fu_691_p2;
reg   [31:0] acc_0_2_reg_4343;
reg    ap_enable_reg_pp0_iter11;
wire   [31:0] grp_fu_695_p2;
reg   [31:0] acc_1_2_reg_4348;
wire   [31:0] grp_fu_699_p2;
reg   [31:0] acc_2_2_reg_4353;
reg   [31:0] acc_3_2_reg_4358;
reg    ap_enable_reg_pp0_iter12;
reg   [31:0] acc_4_2_reg_4363;
reg   [31:0] acc_5_2_reg_4368;
reg   [31:0] bias_conv5_buffer_0_1_reg_4378;
wire   [31:0] grp_fu_703_p2;
reg   [31:0] acc_0_3_reg_4385;
reg    ap_enable_reg_pp0_iter14;
reg   [31:0] acc_0_3_reg_4385_pp0_iter15_reg;
reg   [31:0] acc_0_3_reg_4385_pp0_iter16_reg;
reg   [31:0] acc_0_3_reg_4385_pp0_iter17_reg;
wire   [31:0] grp_fu_707_p2;
reg   [31:0] acc_1_3_reg_4391;
reg   [31:0] acc_1_3_reg_4391_pp0_iter15_reg;
reg   [31:0] acc_1_3_reg_4391_pp0_iter16_reg;
reg   [31:0] acc_1_3_reg_4391_pp0_iter17_reg;
wire   [31:0] grp_fu_711_p2;
reg   [31:0] acc_2_3_reg_4397;
reg   [31:0] acc_2_3_reg_4397_pp0_iter15_reg;
reg   [31:0] acc_2_3_reg_4397_pp0_iter16_reg;
reg   [31:0] acc_2_3_reg_4397_pp0_iter17_reg;
reg   [31:0] acc_3_3_reg_4403;
reg   [31:0] acc_3_3_reg_4403_pp0_iter15_reg;
reg   [31:0] acc_3_3_reg_4403_pp0_iter16_reg;
reg   [31:0] acc_3_3_reg_4403_pp0_iter17_reg;
reg   [31:0] acc_4_3_reg_4409;
reg   [31:0] acc_4_3_reg_4409_pp0_iter15_reg;
reg   [31:0] acc_4_3_reg_4409_pp0_iter16_reg;
reg   [31:0] acc_4_3_reg_4409_pp0_iter17_reg;
reg   [31:0] acc_5_3_reg_4415;
reg   [31:0] acc_5_3_reg_4415_pp0_iter15_reg;
reg   [31:0] acc_5_3_reg_4415_pp0_iter16_reg;
reg   [31:0] acc_5_3_reg_4415_pp0_iter17_reg;
wire   [31:0] grp_fu_715_p2;
reg   [31:0] biased_0_3_reg_4421;
reg    ap_enable_reg_pp0_iter16;
wire   [31:0] grp_fu_719_p2;
reg   [31:0] biased_1_3_reg_4428;
wire   [31:0] grp_fu_723_p2;
reg   [31:0] biased_2_3_reg_4435;
reg   [31:0] biased_311_3_reg_4442;
reg    ap_enable_reg_pp0_iter17;
reg   [31:0] biased_412_3_reg_4449;
reg   [31:0] biased_5_3_reg_4456;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter18;
reg   [10:0] ap_phi_mux_indvar_flatten115_phi_fu_588_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_m_0_phi_fu_599_p4;
reg   [9:0] ap_phi_mux_indvar_flatten53_phi_fu_611_p4;
reg   [2:0] ap_phi_mux_n_0_phi_fu_623_p4;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_635_p4;
reg   [4:0] ap_phi_mux_ci_0_phi_fu_647_p4;
reg   [6:0] ap_phi_mux_co_0_phi_fu_659_p4;
wire   [63:0] zext_ln178_4_fu_1458_p1;
wire   [63:0] zext_ln178_12_fu_1901_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln178_18_fu_2011_p1;
wire   [63:0] zext_ln181_fu_1988_p1;
wire   [63:0] zext_ln178_24_fu_2121_p1;
wire   [63:0] zext_ln181_1_fu_2098_p1;
wire   [63:0] zext_ln181_2_fu_2208_p1;
wire   [63:0] zext_ln181_3_fu_2347_p1;
wire   [63:0] zext_ln181_4_fu_2486_p1;
wire   [63:0] zext_ln178_6_fu_2622_p1;
wire   [63:0] zext_ln178_8_fu_2626_p1;
wire   [63:0] zext_ln178_13_fu_2647_p1;
wire   [63:0] zext_ln178_14_fu_2669_p1;
wire   [63:0] zext_ln178_19_fu_2691_p1;
wire   [63:0] zext_ln178_20_fu_2713_p1;
wire   [63:0] zext_ln178_25_fu_2735_p1;
wire   [63:0] zext_ln178_26_fu_2757_p1;
wire   [63:0] zext_ln178_30_fu_2762_p1;
wire   [63:0] zext_ln178_36_fu_2801_p1;
wire   [63:0] zext_ln178_42_fu_2840_p1;
wire   [63:0] zext_ln178_31_fu_2879_p1;
wire   [63:0] zext_ln178_32_fu_2883_p1;
wire   [63:0] zext_ln178_37_fu_2887_p1;
wire   [63:0] zext_ln178_38_fu_2891_p1;
wire   [63:0] zext_ln178_43_fu_2895_p1;
wire   [63:0] zext_ln178_44_fu_2899_p1;
reg   [31:0] grp_fu_667_p0;
reg   [31:0] grp_fu_667_p1;
reg   [31:0] grp_fu_671_p0;
reg   [31:0] grp_fu_671_p1;
reg   [31:0] grp_fu_675_p0;
reg   [31:0] grp_fu_675_p1;
reg   [31:0] grp_fu_679_p0;
reg   [31:0] grp_fu_679_p1;
reg   [31:0] grp_fu_683_p0;
reg   [31:0] grp_fu_683_p1;
reg   [31:0] grp_fu_687_p0;
reg   [31:0] grp_fu_687_p1;
reg   [31:0] grp_fu_691_p0;
reg   [31:0] grp_fu_691_p1;
reg   [31:0] grp_fu_695_p0;
reg   [31:0] grp_fu_695_p1;
reg   [31:0] grp_fu_699_p0;
reg   [31:0] grp_fu_699_p1;
reg   [31:0] grp_fu_703_p0;
reg   [31:0] grp_fu_703_p1;
reg   [31:0] grp_fu_707_p0;
reg   [31:0] grp_fu_707_p1;
reg   [31:0] grp_fu_711_p0;
reg   [31:0] grp_fu_711_p1;
reg   [31:0] grp_fu_715_p0;
reg   [31:0] grp_fu_719_p0;
reg   [31:0] grp_fu_723_p0;
reg   [31:0] grp_fu_727_p0;
reg   [31:0] grp_fu_727_p1;
reg   [31:0] grp_fu_731_p0;
reg   [31:0] grp_fu_731_p1;
reg   [31:0] grp_fu_735_p0;
reg   [31:0] grp_fu_735_p1;
reg   [31:0] grp_fu_739_p0;
reg   [31:0] grp_fu_739_p1;
reg   [31:0] grp_fu_743_p0;
reg   [31:0] grp_fu_743_p1;
reg   [31:0] grp_fu_747_p0;
reg   [31:0] grp_fu_747_p1;
reg   [31:0] grp_fu_751_p0;
reg   [31:0] grp_fu_751_p1;
reg   [31:0] grp_fu_755_p0;
reg   [31:0] grp_fu_755_p1;
reg   [31:0] grp_fu_759_p0;
reg   [31:0] grp_fu_759_p1;
reg   [31:0] grp_fu_763_p0;
reg   [31:0] grp_fu_763_p1;
reg   [31:0] grp_fu_767_p0;
reg   [31:0] grp_fu_767_p1;
reg   [31:0] grp_fu_771_p0;
reg   [31:0] grp_fu_771_p1;
reg   [31:0] grp_fu_775_p0;
reg   [31:0] grp_fu_780_p0;
reg   [31:0] grp_fu_785_p0;
wire   [2:0] trunc_ln176_fu_806_p1;
wire   [2:0] or_ln176_fu_810_p2;
wire   [0:0] tmp_14_fu_822_p3;
wire   [2:0] or_ln176_2_fu_816_p2;
wire   [3:0] or_ln176_1_fu_830_p3;
wire   [2:0] trunc_ln8_fu_854_p4;
wire   [3:0] trunc_ln167_fu_802_p1;
wire   [3:0] or_ln178_1_fu_870_p2;
wire   [0:0] icmp_ln181_2_fu_886_p2;
wire   [0:0] and_ln181_fu_892_p2;
wire   [2:0] m_fu_946_p2;
wire   [0:0] icmp_ln181_3_fu_970_p2;
wire   [3:0] or_ln176_1_mid_fu_986_p3;
wire   [0:0] icmp_ln176_1_fu_994_p2;
wire   [2:0] select_ln178_fu_952_p3;
wire   [0:0] or_ln178_4_fu_1020_p2;
wire   [2:0] n_fu_1014_p2;
wire   [0:0] icmp_ln181_4_fu_1047_p2;
wire   [0:0] and_ln178_fu_982_p2;
wire   [2:0] or_ln176_3_fu_1060_p2;
wire   [3:0] or_ln176_1_mid2_fu_1066_p3;
wire   [0:0] icmp_ln176_2_fu_1074_p2;
wire   [0:0] select_ln178_3_fu_1000_p3;
wire   [0:0] xor_ln178_1_fu_1108_p2;
wire   [0:0] and_ln178_1_fu_1006_p2;
wire   [0:0] or_ln178_5_fu_1113_p2;
wire   [0:0] or_ln178_3_fu_1010_p2;
wire   [4:0] select_ln178_4_fu_1024_p3;
wire   [0:0] or_ln178_6_fu_1124_p2;
wire   [6:0] select_ln178_5_fu_1032_p3;
wire   [4:0] ci_fu_1129_p2;
wire   [2:0] trunc_ln176_1_fu_1147_p1;
wire   [2:0] or_ln176_4_fu_1151_p2;
wire   [0:0] tmp_15_fu_1163_p3;
wire   [2:0] or_ln176_5_fu_1157_p2;
wire   [3:0] or_ln176_1_mid1_fu_1171_p3;
wire   [0:0] select_ln178_8_fu_1080_p3;
wire   [0:0] icmp_ln176_3_fu_1179_p2;
wire   [3:0] select_ln178_9_fu_1087_p3;
wire   [3:0] lshr_ln178_mid1_fu_1193_p4;
wire   [5:0] tmp_16_fu_1215_p3;
wire   [63:0] zext_ln178_3_fu_1223_p1;
wire   [63:0] zext_ln167_1_fu_1211_p1;
wire   [63:0] add_ln178_4_fu_1227_p2;
wire   [63:0] add_ln178_5_fu_1233_p2;
wire   [2:0] trunc_ln178_mid1_fu_1247_p4;
wire   [2:0] select_ln178_10_fu_1094_p3;
wire   [2:0] or_ln178_7_fu_1257_p2;
wire   [3:0] trunc_ln167_1_fu_1143_p1;
wire   [3:0] or_ln178_8_fu_1271_p2;
wire   [2:0] select_ln178_11_fu_1101_p3;
wire   [2:0] lshr_ln178_2_mid1_fu_1277_p4;
wire   [0:0] select_ln178_7_fu_1053_p3;
wire   [0:0] icmp_ln181_5_fu_1295_p2;
wire   [0:0] and_ln181_2_fu_1301_p2;
wire   [0:0] select_ln178_2_fu_976_p3;
wire   [0:0] and_ln178_3_fu_1118_p2;
wire   [0:0] and_ln181_3_fu_1307_p2;
wire   [6:0] mul_ln179_fu_1333_p1;
wire   [15:0] mul_ln179_fu_1333_p2;
wire   [6:0] or_ln178_2_fu_1349_p2;
wire   [6:0] mul_ln181_fu_1359_p1;
wire   [15:0] mul_ln181_fu_1359_p2;
wire   [6:0] add_ln178_fu_1375_p2;
wire   [6:0] mul_ln181_1_fu_1385_p1;
wire   [15:0] mul_ln181_1_fu_1385_p2;
wire   [7:0] add_ln167_1_fu_1407_p2;
wire   [9:0] add_ln166_1_fu_1421_p2;
wire   [8:0] p_shl4_cast_fu_1440_p3;
wire   [8:0] add_ln178_6_fu_1447_p2;
wire   [8:0] add_ln178_7_fu_1452_p2;
wire   [8:0] tmp_20_fu_1464_p3;
wire  signed [9:0] sext_ln178_fu_1471_p1;
wire   [10:0] zext_ln167_fu_1437_p1;
wire   [10:0] zext_ln178_9_fu_1475_p1;
wire   [10:0] add_ln178_16_fu_1479_p2;
wire   [12:0] tmp_21_fu_1489_p3;
wire   [63:0] zext_ln178_11_fu_1497_p1;
wire   [63:0] zext_ln178_10_fu_1485_p1;
wire   [63:0] add_ln178_17_fu_1501_p2;
wire   [63:0] add_ln178_18_fu_1507_p2;
wire   [8:0] tmp_23_fu_1520_p3;
wire  signed [9:0] sext_ln178_1_fu_1527_p1;
wire   [10:0] zext_ln178_15_fu_1531_p1;
wire   [10:0] add_ln178_29_fu_1535_p2;
wire   [12:0] tmp_24_fu_1545_p3;
wire   [63:0] zext_ln178_17_fu_1553_p1;
wire   [63:0] zext_ln178_16_fu_1541_p1;
wire   [63:0] add_ln178_30_fu_1557_p2;
wire   [63:0] add_ln178_31_fu_1563_p2;
wire   [8:0] tmp_26_fu_1576_p3;
wire  signed [9:0] sext_ln178_2_fu_1583_p1;
wire   [10:0] zext_ln178_21_fu_1587_p1;
wire   [10:0] add_ln178_42_fu_1591_p2;
wire   [12:0] tmp_27_fu_1601_p3;
wire   [63:0] zext_ln178_23_fu_1609_p1;
wire   [63:0] zext_ln178_22_fu_1597_p1;
wire   [63:0] add_ln178_43_fu_1613_p2;
wire   [63:0] add_ln178_44_fu_1619_p2;
wire   [6:0] add_ln178_1_fu_1632_p2;
wire   [6:0] mul_ln181_2_fu_1641_p1;
wire   [15:0] mul_ln181_2_fu_1641_p2;
wire   [8:0] tmp_29_fu_1657_p3;
wire  signed [9:0] sext_ln178_3_fu_1665_p1;
wire   [10:0] zext_ln178_27_fu_1669_p1;
wire   [6:0] add_ln178_2_fu_1679_p2;
wire   [6:0] mul_ln181_3_fu_1688_p1;
wire   [15:0] mul_ln181_3_fu_1688_p2;
wire   [8:0] tmp_32_fu_1704_p3;
wire  signed [9:0] sext_ln178_4_fu_1712_p1;
wire   [10:0] zext_ln178_33_fu_1716_p1;
wire   [6:0] add_ln178_3_fu_1726_p2;
wire   [6:0] mul_ln181_4_fu_1735_p1;
wire   [15:0] mul_ln181_4_fu_1735_p2;
wire   [8:0] tmp_56_fu_1751_p3;
wire  signed [9:0] sext_ln178_5_fu_1759_p1;
wire   [10:0] zext_ln178_39_fu_1763_p1;
wire   [4:0] tmp_17_fu_1779_p3;
wire   [63:0] zext_ln178_5_fu_1786_p1;
wire   [63:0] zext_ln167_2_fu_1776_p1;
wire   [63:0] add_ln178_8_fu_1790_p2;
wire   [63:0] add_ln178_9_fu_1796_p2;
wire   [6:0] trunc_ln178_3_fu_1805_p1;
wire   [8:0] p_shl6_cast_fu_1809_p3;
wire   [8:0] trunc_ln178_2_fu_1801_p1;
wire   [8:0] add_ln178_10_fu_1817_p2;
wire   [4:0] tmp_18_fu_1831_p3;
wire   [63:0] zext_ln178_7_fu_1838_p1;
wire   [63:0] zext_ln167_3_fu_1828_p1;
wire   [63:0] add_ln178_12_fu_1842_p2;
wire   [63:0] add_ln178_13_fu_1848_p2;
wire   [6:0] trunc_ln178_5_fu_1857_p1;
wire   [8:0] p_shl8_cast_fu_1861_p3;
wire   [8:0] trunc_ln178_4_fu_1853_p1;
wire   [8:0] add_ln178_14_fu_1869_p2;
wire   [12:0] p_shl10_cast_fu_1883_p3;
wire   [12:0] add_ln178_19_fu_1890_p2;
wire   [12:0] add_ln178_20_fu_1895_p2;
wire   [63:0] p_shl_fu_1916_p5;
wire   [63:0] tmp_s_fu_1907_p4;
wire   [63:0] add_ln178_21_fu_1927_p2;
wire   [63:0] add_ln178_22_fu_1933_p2;
wire   [63:0] p_shl1_fu_1955_p5;
wire   [63:0] tmp_45_fu_1946_p4;
wire   [63:0] add_ln178_25_fu_1966_p2;
wire   [63:0] add_ln178_26_fu_1972_p2;
wire  signed [6:0] sext_ln181_fu_1985_p1;
wire   [12:0] p_shl16_cast_fu_1993_p3;
wire   [12:0] add_ln178_32_fu_2000_p2;
wire   [12:0] add_ln178_33_fu_2005_p2;
wire   [63:0] p_shl2_fu_2026_p5;
wire   [63:0] tmp_46_fu_2017_p4;
wire   [63:0] add_ln178_34_fu_2037_p2;
wire   [63:0] add_ln178_35_fu_2043_p2;
wire   [63:0] p_shl3_fu_2065_p5;
wire   [63:0] tmp_47_fu_2056_p4;
wire   [63:0] add_ln178_38_fu_2076_p2;
wire   [63:0] add_ln178_39_fu_2082_p2;
wire  signed [6:0] sext_ln181_1_fu_2095_p1;
wire   [12:0] p_shl22_cast_fu_2103_p3;
wire   [12:0] add_ln178_45_fu_2110_p2;
wire   [12:0] add_ln178_46_fu_2115_p2;
wire   [63:0] p_shl4_fu_2136_p5;
wire   [63:0] tmp_48_fu_2127_p4;
wire   [63:0] add_ln178_47_fu_2147_p2;
wire   [63:0] add_ln178_48_fu_2153_p2;
wire   [63:0] p_shl5_fu_2175_p5;
wire   [63:0] tmp_49_fu_2166_p4;
wire   [63:0] add_ln178_51_fu_2186_p2;
wire   [63:0] add_ln178_52_fu_2192_p2;
wire  signed [6:0] sext_ln181_2_fu_2205_p1;
wire   [12:0] tmp_30_fu_2216_p3;
wire   [63:0] zext_ln178_29_fu_2223_p1;
wire   [63:0] zext_ln178_28_fu_2213_p1;
wire   [63:0] add_ln178_56_fu_2227_p2;
wire   [63:0] add_ln178_57_fu_2233_p2;
wire   [10:0] trunc_ln178_25_fu_2242_p1;
wire   [12:0] p_shl28_cast_fu_2246_p3;
wire   [12:0] trunc_ln178_24_fu_2238_p1;
wire   [12:0] add_ln178_58_fu_2254_p2;
wire   [63:0] p_shl6_fu_2275_p5;
wire   [63:0] tmp_50_fu_2266_p4;
wire   [63:0] add_ln178_60_fu_2286_p2;
wire   [63:0] add_ln178_61_fu_2292_p2;
wire   [63:0] p_shl7_fu_2314_p5;
wire   [63:0] tmp_51_fu_2305_p4;
wire   [63:0] add_ln178_64_fu_2325_p2;
wire   [63:0] add_ln178_65_fu_2331_p2;
wire  signed [6:0] sext_ln181_3_fu_2344_p1;
wire   [12:0] tmp_52_fu_2355_p3;
wire   [63:0] zext_ln178_35_fu_2362_p1;
wire   [63:0] zext_ln178_34_fu_2352_p1;
wire   [63:0] add_ln178_69_fu_2366_p2;
wire   [63:0] add_ln178_70_fu_2372_p2;
wire   [10:0] trunc_ln178_31_fu_2381_p1;
wire   [12:0] p_shl34_cast_fu_2385_p3;
wire   [12:0] trunc_ln178_30_fu_2377_p1;
wire   [12:0] add_ln178_71_fu_2393_p2;
wire   [63:0] p_shl8_fu_2414_p5;
wire   [63:0] tmp_53_fu_2405_p4;
wire   [63:0] add_ln178_73_fu_2425_p2;
wire   [63:0] add_ln178_74_fu_2431_p2;
wire   [63:0] p_shl9_fu_2453_p5;
wire   [63:0] tmp_54_fu_2444_p4;
wire   [63:0] add_ln178_77_fu_2464_p2;
wire   [63:0] add_ln178_78_fu_2470_p2;
wire  signed [6:0] sext_ln181_4_fu_2483_p1;
wire   [12:0] tmp_57_fu_2494_p3;
wire   [63:0] zext_ln178_41_fu_2501_p1;
wire   [63:0] zext_ln178_40_fu_2491_p1;
wire   [63:0] add_ln178_82_fu_2505_p2;
wire   [63:0] add_ln178_83_fu_2511_p2;
wire   [10:0] trunc_ln178_37_fu_2520_p1;
wire   [12:0] p_shl40_cast_fu_2524_p3;
wire   [12:0] trunc_ln178_36_fu_2516_p1;
wire   [12:0] add_ln178_84_fu_2532_p2;
wire   [63:0] p_shl10_fu_2553_p5;
wire   [63:0] tmp_58_fu_2544_p4;
wire   [63:0] add_ln178_86_fu_2564_p2;
wire   [63:0] add_ln178_87_fu_2570_p2;
wire   [63:0] p_shl11_fu_2592_p5;
wire   [63:0] tmp_59_fu_2583_p4;
wire   [63:0] add_ln178_90_fu_2603_p2;
wire   [63:0] add_ln178_91_fu_2609_p2;
wire   [12:0] p_shl12_cast_fu_2630_p3;
wire   [12:0] add_ln178_23_fu_2637_p2;
wire   [12:0] add_ln178_24_fu_2642_p2;
wire   [12:0] p_shl14_cast_fu_2652_p3;
wire   [12:0] add_ln178_27_fu_2659_p2;
wire   [12:0] add_ln178_28_fu_2664_p2;
wire   [12:0] p_shl18_cast_fu_2674_p3;
wire   [12:0] add_ln178_36_fu_2681_p2;
wire   [12:0] add_ln178_37_fu_2686_p2;
wire   [12:0] p_shl20_cast_fu_2696_p3;
wire   [12:0] add_ln178_40_fu_2703_p2;
wire   [12:0] add_ln178_41_fu_2708_p2;
wire   [12:0] p_shl24_cast_fu_2718_p3;
wire   [12:0] add_ln178_49_fu_2725_p2;
wire   [12:0] add_ln178_50_fu_2730_p2;
wire   [12:0] p_shl26_cast_fu_2740_p3;
wire   [12:0] add_ln178_53_fu_2747_p2;
wire   [12:0] add_ln178_54_fu_2752_p2;
wire   [12:0] p_shl30_cast_fu_2767_p3;
wire   [12:0] add_ln178_62_fu_2774_p2;
wire   [12:0] p_shl32_cast_fu_2784_p3;
wire   [12:0] add_ln178_66_fu_2791_p2;
wire   [12:0] p_shl36_cast_fu_2806_p3;
wire   [12:0] add_ln178_75_fu_2813_p2;
wire   [12:0] p_shl38_cast_fu_2823_p3;
wire   [12:0] add_ln178_79_fu_2830_p2;
wire   [12:0] p_shl42_cast_fu_2845_p3;
wire   [12:0] add_ln178_88_fu_2852_p2;
wire   [12:0] p_shl_cast_fu_2862_p3;
wire   [12:0] add_ln178_92_fu_2869_p2;
wire   [31:0] bitcast_ln180_fu_2949_p1;
wire   [7:0] tmp_33_fu_2952_p4;
wire   [22:0] trunc_ln180_fu_2962_p1;
wire   [0:0] icmp_ln180_1_fu_2972_p2;
wire   [0:0] icmp_ln180_fu_2966_p2;
wire   [0:0] or_ln180_fu_2978_p2;
wire   [0:0] grp_fu_775_p2;
wire   [0:0] and_ln180_fu_2984_p2;
wire   [31:0] select_ln180_fu_2990_p3;
wire   [31:0] bitcast_ln180_1_fu_3004_p1;
wire   [7:0] tmp_35_fu_3007_p4;
wire   [22:0] trunc_ln180_1_fu_3017_p1;
wire   [0:0] icmp_ln180_3_fu_3027_p2;
wire   [0:0] icmp_ln180_2_fu_3021_p2;
wire   [0:0] or_ln180_1_fu_3033_p2;
wire   [0:0] grp_fu_780_p2;
wire   [0:0] and_ln180_1_fu_3039_p2;
wire   [31:0] select_ln180_1_fu_3045_p3;
wire   [31:0] bitcast_ln180_2_fu_3059_p1;
wire   [7:0] tmp_37_fu_3062_p4;
wire   [22:0] trunc_ln180_2_fu_3072_p1;
wire   [0:0] icmp_ln180_5_fu_3082_p2;
wire   [0:0] icmp_ln180_4_fu_3076_p2;
wire   [0:0] or_ln180_2_fu_3088_p2;
wire   [0:0] grp_fu_785_p2;
wire   [0:0] and_ln180_2_fu_3094_p2;
wire   [31:0] select_ln180_2_fu_3100_p3;
wire   [31:0] bitcast_ln180_3_fu_3114_p1;
wire   [7:0] tmp_39_fu_3117_p4;
wire   [22:0] trunc_ln180_3_fu_3127_p1;
wire   [0:0] icmp_ln180_7_fu_3137_p2;
wire   [0:0] icmp_ln180_6_fu_3131_p2;
wire   [0:0] or_ln180_3_fu_3143_p2;
wire   [0:0] and_ln180_3_fu_3149_p2;
wire   [31:0] select_ln180_3_fu_3155_p3;
wire   [31:0] bitcast_ln180_4_fu_3169_p1;
wire   [7:0] tmp_41_fu_3172_p4;
wire   [22:0] trunc_ln180_4_fu_3182_p1;
wire   [0:0] icmp_ln180_9_fu_3192_p2;
wire   [0:0] icmp_ln180_8_fu_3186_p2;
wire   [0:0] or_ln180_4_fu_3198_p2;
wire   [0:0] and_ln180_4_fu_3204_p2;
wire   [31:0] select_ln180_4_fu_3210_p3;
wire   [31:0] bitcast_ln180_5_fu_3224_p1;
wire   [7:0] tmp_43_fu_3227_p4;
wire   [22:0] trunc_ln180_5_fu_3237_p1;
wire   [0:0] icmp_ln180_11_fu_3247_p2;
wire   [0:0] icmp_ln180_10_fu_3241_p2;
wire   [0:0] or_ln180_5_fu_3253_p2;
wire   [0:0] and_ln180_5_fu_3259_p2;
wire   [31:0] select_ln180_5_fu_3265_p3;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_CS_fsm_state39;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] mul_ln179_fu_1333_p10;
wire   [15:0] mul_ln181_1_fu_1385_p10;
wire   [15:0] mul_ln181_2_fu_1641_p10;
wire   [15:0] mul_ln181_3_fu_1688_p10;
wire   [15:0] mul_ln181_4_fu_1735_p10;
wire   [15:0] mul_ln181_fu_1359_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
end

convolution5_biasyd2 #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
bias_conv5_buffer_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_conv5_buffer_0_address0),
    .ce0(bias_conv5_buffer_0_ce0),
    .q0(bias_conv5_buffer_0_q0)
);

convolution5_weigzec #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_11_address0),
    .ce0(weights_conv5_buffer_11_ce0),
    .q0(weights_conv5_buffer_11_q0)
);

convolution5_weigAem #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_10_address0),
    .ce0(weights_conv5_buffer_10_ce0),
    .q0(weights_conv5_buffer_10_q0)
);

convolution5_weigBew #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_9_address0),
    .ce0(weights_conv5_buffer_9_ce0),
    .q0(weights_conv5_buffer_9_q0)
);

convolution5_weigCeG #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_8_address0),
    .ce0(weights_conv5_buffer_8_ce0),
    .q0(weights_conv5_buffer_8_q0)
);

convolution5_weigDeQ #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_7_address0),
    .ce0(weights_conv5_buffer_7_ce0),
    .q0(weights_conv5_buffer_7_q0)
);

convolution5_weigEe0 #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_6_address0),
    .ce0(weights_conv5_buffer_6_ce0),
    .q0(weights_conv5_buffer_6_q0)
);

convolution5_weigFfa #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_5_address0),
    .ce0(weights_conv5_buffer_5_ce0),
    .q0(weights_conv5_buffer_5_q0)
);

convolution5_weigGfk #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_4_address0),
    .ce0(weights_conv5_buffer_4_ce0),
    .q0(weights_conv5_buffer_4_q0)
);

convolution5_weigHfu #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_3_address0),
    .ce0(weights_conv5_buffer_3_ce0),
    .q0(weights_conv5_buffer_3_q0)
);

convolution5_weigIfE #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_2_address0),
    .ce0(weights_conv5_buffer_2_ce0),
    .q0(weights_conv5_buffer_2_q0)
);

convolution5_weigJfO #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_1_address0),
    .ce0(weights_conv5_buffer_1_ce0),
    .q0(weights_conv5_buffer_1_q0)
);

convolution5_weigKfY #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
weights_conv5_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv5_buffer_address0),
    .ce0(weights_conv5_buffer_ce0),
    .q0(weights_conv5_buffer_q0)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_667_p0),
    .din1(grp_fu_667_p1),
    .ce(1'b1),
    .dout(grp_fu_667_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_671_p0),
    .din1(grp_fu_671_p1),
    .ce(1'b1),
    .dout(grp_fu_671_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_675_p0),
    .din1(grp_fu_675_p1),
    .ce(1'b1),
    .dout(grp_fu_675_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_679_p0),
    .din1(grp_fu_679_p1),
    .ce(1'b1),
    .dout(grp_fu_679_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_683_p0),
    .din1(grp_fu_683_p1),
    .ce(1'b1),
    .dout(grp_fu_683_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_687_p0),
    .din1(grp_fu_687_p1),
    .ce(1'b1),
    .dout(grp_fu_687_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_691_p0),
    .din1(grp_fu_691_p1),
    .ce(1'b1),
    .dout(grp_fu_691_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_695_p0),
    .din1(grp_fu_695_p1),
    .ce(1'b1),
    .dout(grp_fu_695_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_699_p0),
    .din1(grp_fu_699_p1),
    .ce(1'b1),
    .dout(grp_fu_699_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U131(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_703_p0),
    .din1(grp_fu_703_p1),
    .ce(1'b1),
    .dout(grp_fu_703_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U132(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_707_p0),
    .din1(grp_fu_707_p1),
    .ce(1'b1),
    .dout(grp_fu_707_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_711_p0),
    .din1(grp_fu_711_p1),
    .ce(1'b1),
    .dout(grp_fu_711_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U134(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_715_p0),
    .din1(bias_conv5_buffer_0_1_reg_4378),
    .ce(1'b1),
    .dout(grp_fu_715_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U135(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_719_p0),
    .din1(bias_conv5_buffer_0_1_reg_4378),
    .ce(1'b1),
    .dout(grp_fu_719_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U136(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_723_p0),
    .din1(bias_conv5_buffer_0_1_reg_4378),
    .ce(1'b1),
    .dout(grp_fu_723_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U137(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_727_p0),
    .din1(grp_fu_727_p1),
    .ce(1'b1),
    .dout(grp_fu_727_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U138(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_731_p0),
    .din1(grp_fu_731_p1),
    .ce(1'b1),
    .dout(grp_fu_731_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U139(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_735_p0),
    .din1(grp_fu_735_p1),
    .ce(1'b1),
    .dout(grp_fu_735_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U140(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_739_p0),
    .din1(grp_fu_739_p1),
    .ce(1'b1),
    .dout(grp_fu_739_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U141(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_743_p0),
    .din1(grp_fu_743_p1),
    .ce(1'b1),
    .dout(grp_fu_743_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_747_p0),
    .din1(grp_fu_747_p1),
    .ce(1'b1),
    .dout(grp_fu_747_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_751_p0),
    .din1(grp_fu_751_p1),
    .ce(1'b1),
    .dout(grp_fu_751_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_755_p0),
    .din1(grp_fu_755_p1),
    .ce(1'b1),
    .dout(grp_fu_755_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_759_p0),
    .din1(grp_fu_759_p1),
    .ce(1'b1),
    .dout(grp_fu_759_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_763_p0),
    .din1(grp_fu_763_p1),
    .ce(1'b1),
    .dout(grp_fu_763_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_767_p0),
    .din1(grp_fu_767_p1),
    .ce(1'b1),
    .dout(grp_fu_767_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_771_p0),
    .din1(grp_fu_771_p1),
    .ce(1'b1),
    .dout(grp_fu_771_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_775_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_775_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_780_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_780_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_785_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_785_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ci_0_reg_643 <= select_ln167_6_reg_3474;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ci_0_reg_643 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        co_0_reg_655 <= co_reg_3497;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_0_reg_655 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten115_reg_584 <= add_ln165_reg_3318;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten115_reg_584 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten53_reg_607 <= select_ln166_reg_3507;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten53_reg_607 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_631 <= select_ln167_7_reg_3502;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_631 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_0_reg_595 <= select_ln178_1_reg_3360;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_0_reg_595 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_0_reg_619 <= select_ln178_6_reg_3389;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_0_reg_619 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        acc_0_1_reg_4313 <= grp_fu_679_p2;
        acc_1_1_reg_4318 <= grp_fu_683_p2;
        acc_2_1_reg_4323 <= grp_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter11_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        acc_0_2_reg_4343 <= grp_fu_691_p2;
        acc_1_2_reg_4348 <= grp_fu_695_p2;
        acc_2_2_reg_4353 <= grp_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        acc_0_3_reg_4385 <= grp_fu_703_p2;
        acc_1_3_reg_4391 <= grp_fu_707_p2;
        acc_2_3_reg_4397 <= grp_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_0_3_reg_4385_pp0_iter15_reg <= acc_0_3_reg_4385;
        acc_0_3_reg_4385_pp0_iter16_reg <= acc_0_3_reg_4385_pp0_iter15_reg;
        acc_0_3_reg_4385_pp0_iter17_reg <= acc_0_3_reg_4385_pp0_iter16_reg;
        acc_1_3_reg_4391_pp0_iter15_reg <= acc_1_3_reg_4391;
        acc_1_3_reg_4391_pp0_iter16_reg <= acc_1_3_reg_4391_pp0_iter15_reg;
        acc_1_3_reg_4391_pp0_iter17_reg <= acc_1_3_reg_4391_pp0_iter16_reg;
        acc_2_3_reg_4397_pp0_iter15_reg <= acc_2_3_reg_4397;
        acc_2_3_reg_4397_pp0_iter16_reg <= acc_2_3_reg_4397_pp0_iter15_reg;
        acc_2_3_reg_4397_pp0_iter17_reg <= acc_2_3_reg_4397_pp0_iter16_reg;
        and_ln181_1_reg_3309 <= and_ln181_1_fu_898_p2;
        icmp_ln165_reg_3314 <= icmp_ln165_fu_904_p2;
        icmp_ln165_reg_3314_pp0_iter10_reg <= icmp_ln165_reg_3314_pp0_iter9_reg;
        icmp_ln165_reg_3314_pp0_iter11_reg <= icmp_ln165_reg_3314_pp0_iter10_reg;
        icmp_ln165_reg_3314_pp0_iter12_reg <= icmp_ln165_reg_3314_pp0_iter11_reg;
        icmp_ln165_reg_3314_pp0_iter13_reg <= icmp_ln165_reg_3314_pp0_iter12_reg;
        icmp_ln165_reg_3314_pp0_iter14_reg <= icmp_ln165_reg_3314_pp0_iter13_reg;
        icmp_ln165_reg_3314_pp0_iter15_reg <= icmp_ln165_reg_3314_pp0_iter14_reg;
        icmp_ln165_reg_3314_pp0_iter16_reg <= icmp_ln165_reg_3314_pp0_iter15_reg;
        icmp_ln165_reg_3314_pp0_iter17_reg <= icmp_ln165_reg_3314_pp0_iter16_reg;
        icmp_ln165_reg_3314_pp0_iter1_reg <= icmp_ln165_reg_3314;
        icmp_ln165_reg_3314_pp0_iter2_reg <= icmp_ln165_reg_3314_pp0_iter1_reg;
        icmp_ln165_reg_3314_pp0_iter3_reg <= icmp_ln165_reg_3314_pp0_iter2_reg;
        icmp_ln165_reg_3314_pp0_iter4_reg <= icmp_ln165_reg_3314_pp0_iter3_reg;
        icmp_ln165_reg_3314_pp0_iter5_reg <= icmp_ln165_reg_3314_pp0_iter4_reg;
        icmp_ln165_reg_3314_pp0_iter6_reg <= icmp_ln165_reg_3314_pp0_iter5_reg;
        icmp_ln165_reg_3314_pp0_iter7_reg <= icmp_ln165_reg_3314_pp0_iter6_reg;
        icmp_ln165_reg_3314_pp0_iter8_reg <= icmp_ln165_reg_3314_pp0_iter7_reg;
        icmp_ln165_reg_3314_pp0_iter9_reg <= icmp_ln165_reg_3314_pp0_iter8_reg;
        icmp_ln176_reg_3289 <= icmp_ln176_fu_838_p2;
        icmp_ln181_1_reg_3284 <= icmp_ln181_1_fu_796_p2;
        icmp_ln181_reg_3279 <= icmp_ln181_fu_790_p2;
        lshr_ln178_2_reg_3304 <= {{or_ln178_1_fu_870_p2[3:1]}};
        lshr_ln_reg_3294 <= {{ap_phi_mux_ci_0_phi_fu_647_p4[4:1]}};
        or_ln178_reg_3299[2 : 1] <= or_ln178_fu_864_p2[2 : 1];
        tmp_0_1_reg_4128_pp0_iter5_reg <= tmp_0_1_reg_4128;
        tmp_0_1_reg_4128_pp0_iter6_reg <= tmp_0_1_reg_4128_pp0_iter5_reg;
        tmp_1_1_reg_4143_pp0_iter5_reg <= tmp_1_1_reg_4143;
        tmp_1_1_reg_4143_pp0_iter6_reg <= tmp_1_1_reg_4143_pp0_iter5_reg;
        tmp_2_1_reg_4158_pp0_iter5_reg <= tmp_2_1_reg_4158;
        tmp_2_1_reg_4158_pp0_iter6_reg <= tmp_2_1_reg_4158_pp0_iter5_reg;
        tmp_3_2_reg_4253_pp0_iter6_reg <= tmp_3_2_reg_4253;
        tmp_3_2_reg_4253_pp0_iter7_reg <= tmp_3_2_reg_4253_pp0_iter6_reg;
        tmp_3_2_reg_4253_pp0_iter8_reg <= tmp_3_2_reg_4253_pp0_iter7_reg;
        tmp_3_2_reg_4253_pp0_iter9_reg <= tmp_3_2_reg_4253_pp0_iter8_reg;
        tmp_3_3_reg_4258_pp0_iter10_reg <= tmp_3_3_reg_4258_pp0_iter9_reg;
        tmp_3_3_reg_4258_pp0_iter11_reg <= tmp_3_3_reg_4258_pp0_iter10_reg;
        tmp_3_3_reg_4258_pp0_iter12_reg <= tmp_3_3_reg_4258_pp0_iter11_reg;
        tmp_3_3_reg_4258_pp0_iter6_reg <= tmp_3_3_reg_4258;
        tmp_3_3_reg_4258_pp0_iter7_reg <= tmp_3_3_reg_4258_pp0_iter6_reg;
        tmp_3_3_reg_4258_pp0_iter8_reg <= tmp_3_3_reg_4258_pp0_iter7_reg;
        tmp_3_3_reg_4258_pp0_iter9_reg <= tmp_3_3_reg_4258_pp0_iter8_reg;
        tmp_4_2_reg_4263_pp0_iter6_reg <= tmp_4_2_reg_4263;
        tmp_4_2_reg_4263_pp0_iter7_reg <= tmp_4_2_reg_4263_pp0_iter6_reg;
        tmp_4_2_reg_4263_pp0_iter8_reg <= tmp_4_2_reg_4263_pp0_iter7_reg;
        tmp_4_2_reg_4263_pp0_iter9_reg <= tmp_4_2_reg_4263_pp0_iter8_reg;
        tmp_4_3_reg_4268_pp0_iter10_reg <= tmp_4_3_reg_4268_pp0_iter9_reg;
        tmp_4_3_reg_4268_pp0_iter11_reg <= tmp_4_3_reg_4268_pp0_iter10_reg;
        tmp_4_3_reg_4268_pp0_iter12_reg <= tmp_4_3_reg_4268_pp0_iter11_reg;
        tmp_4_3_reg_4268_pp0_iter6_reg <= tmp_4_3_reg_4268;
        tmp_4_3_reg_4268_pp0_iter7_reg <= tmp_4_3_reg_4268_pp0_iter6_reg;
        tmp_4_3_reg_4268_pp0_iter8_reg <= tmp_4_3_reg_4268_pp0_iter7_reg;
        tmp_4_3_reg_4268_pp0_iter9_reg <= tmp_4_3_reg_4268_pp0_iter8_reg;
        tmp_5_2_reg_4273_pp0_iter6_reg <= tmp_5_2_reg_4273;
        tmp_5_2_reg_4273_pp0_iter7_reg <= tmp_5_2_reg_4273_pp0_iter6_reg;
        tmp_5_2_reg_4273_pp0_iter8_reg <= tmp_5_2_reg_4273_pp0_iter7_reg;
        tmp_5_2_reg_4273_pp0_iter9_reg <= tmp_5_2_reg_4273_pp0_iter8_reg;
        tmp_5_3_reg_4278_pp0_iter10_reg <= tmp_5_3_reg_4278_pp0_iter9_reg;
        tmp_5_3_reg_4278_pp0_iter11_reg <= tmp_5_3_reg_4278_pp0_iter10_reg;
        tmp_5_3_reg_4278_pp0_iter12_reg <= tmp_5_3_reg_4278_pp0_iter11_reg;
        tmp_5_3_reg_4278_pp0_iter6_reg <= tmp_5_3_reg_4278;
        tmp_5_3_reg_4278_pp0_iter7_reg <= tmp_5_3_reg_4278_pp0_iter6_reg;
        tmp_5_3_reg_4278_pp0_iter8_reg <= tmp_5_3_reg_4278_pp0_iter7_reg;
        tmp_5_3_reg_4278_pp0_iter9_reg <= tmp_5_3_reg_4278_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        acc_1_reg_4288 <= grp_fu_671_p2;
        acc_2_reg_4293 <= grp_fu_675_p2;
        acc_reg_4283 <= grp_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        acc_3_1_reg_4328 <= grp_fu_679_p2;
        acc_4_1_reg_4333 <= grp_fu_683_p2;
        acc_5_1_reg_4338 <= grp_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        acc_3_2_reg_4358 <= grp_fu_691_p2;
        acc_4_2_reg_4363 <= grp_fu_695_p2;
        acc_5_2_reg_4368 <= grp_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter14_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        acc_3_3_reg_4403 <= grp_fu_703_p2;
        acc_4_3_reg_4409 <= grp_fu_707_p2;
        acc_5_3_reg_4415 <= grp_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        acc_3_3_reg_4403_pp0_iter15_reg <= acc_3_3_reg_4403;
        acc_3_3_reg_4403_pp0_iter16_reg <= acc_3_3_reg_4403_pp0_iter15_reg;
        acc_3_3_reg_4403_pp0_iter17_reg <= acc_3_3_reg_4403_pp0_iter16_reg;
        acc_4_3_reg_4409_pp0_iter15_reg <= acc_4_3_reg_4409;
        acc_4_3_reg_4409_pp0_iter16_reg <= acc_4_3_reg_4409_pp0_iter15_reg;
        acc_4_3_reg_4409_pp0_iter17_reg <= acc_4_3_reg_4409_pp0_iter16_reg;
        acc_5_3_reg_4415_pp0_iter15_reg <= acc_5_3_reg_4415;
        acc_5_3_reg_4415_pp0_iter16_reg <= acc_5_3_reg_4415_pp0_iter15_reg;
        acc_5_3_reg_4415_pp0_iter17_reg <= acc_5_3_reg_4415_pp0_iter16_reg;
        input_0_load_reg_3652_pp0_iter2_reg <= input_0_load_reg_3652;
        input_1_load_reg_3662_pp0_iter2_reg <= input_1_load_reg_3662;
        output_0_0_0_addr_reg_4112_pp0_iter10_reg <= output_0_0_0_addr_reg_4112_pp0_iter9_reg;
        output_0_0_0_addr_reg_4112_pp0_iter11_reg <= output_0_0_0_addr_reg_4112_pp0_iter10_reg;
        output_0_0_0_addr_reg_4112_pp0_iter12_reg <= output_0_0_0_addr_reg_4112_pp0_iter11_reg;
        output_0_0_0_addr_reg_4112_pp0_iter13_reg <= output_0_0_0_addr_reg_4112_pp0_iter12_reg;
        output_0_0_0_addr_reg_4112_pp0_iter14_reg <= output_0_0_0_addr_reg_4112_pp0_iter13_reg;
        output_0_0_0_addr_reg_4112_pp0_iter15_reg <= output_0_0_0_addr_reg_4112_pp0_iter14_reg;
        output_0_0_0_addr_reg_4112_pp0_iter16_reg <= output_0_0_0_addr_reg_4112_pp0_iter15_reg;
        output_0_0_0_addr_reg_4112_pp0_iter4_reg <= output_0_0_0_addr_reg_4112;
        output_0_0_0_addr_reg_4112_pp0_iter5_reg <= output_0_0_0_addr_reg_4112_pp0_iter4_reg;
        output_0_0_0_addr_reg_4112_pp0_iter6_reg <= output_0_0_0_addr_reg_4112_pp0_iter5_reg;
        output_0_0_0_addr_reg_4112_pp0_iter7_reg <= output_0_0_0_addr_reg_4112_pp0_iter6_reg;
        output_0_0_0_addr_reg_4112_pp0_iter8_reg <= output_0_0_0_addr_reg_4112_pp0_iter7_reg;
        output_0_0_0_addr_reg_4112_pp0_iter9_reg <= output_0_0_0_addr_reg_4112_pp0_iter8_reg;
        output_1_0_0_addr_reg_3702_pp0_iter10_reg <= output_1_0_0_addr_reg_3702_pp0_iter9_reg;
        output_1_0_0_addr_reg_3702_pp0_iter11_reg <= output_1_0_0_addr_reg_3702_pp0_iter10_reg;
        output_1_0_0_addr_reg_3702_pp0_iter12_reg <= output_1_0_0_addr_reg_3702_pp0_iter11_reg;
        output_1_0_0_addr_reg_3702_pp0_iter13_reg <= output_1_0_0_addr_reg_3702_pp0_iter12_reg;
        output_1_0_0_addr_reg_3702_pp0_iter14_reg <= output_1_0_0_addr_reg_3702_pp0_iter13_reg;
        output_1_0_0_addr_reg_3702_pp0_iter15_reg <= output_1_0_0_addr_reg_3702_pp0_iter14_reg;
        output_1_0_0_addr_reg_3702_pp0_iter16_reg <= output_1_0_0_addr_reg_3702_pp0_iter15_reg;
        output_1_0_0_addr_reg_3702_pp0_iter2_reg <= output_1_0_0_addr_reg_3702;
        output_1_0_0_addr_reg_3702_pp0_iter3_reg <= output_1_0_0_addr_reg_3702_pp0_iter2_reg;
        output_1_0_0_addr_reg_3702_pp0_iter4_reg <= output_1_0_0_addr_reg_3702_pp0_iter3_reg;
        output_1_0_0_addr_reg_3702_pp0_iter5_reg <= output_1_0_0_addr_reg_3702_pp0_iter4_reg;
        output_1_0_0_addr_reg_3702_pp0_iter6_reg <= output_1_0_0_addr_reg_3702_pp0_iter5_reg;
        output_1_0_0_addr_reg_3702_pp0_iter7_reg <= output_1_0_0_addr_reg_3702_pp0_iter6_reg;
        output_1_0_0_addr_reg_3702_pp0_iter8_reg <= output_1_0_0_addr_reg_3702_pp0_iter7_reg;
        output_1_0_0_addr_reg_3702_pp0_iter9_reg <= output_1_0_0_addr_reg_3702_pp0_iter8_reg;
        output_2_0_0_addr_reg_3738_pp0_iter10_reg <= output_2_0_0_addr_reg_3738_pp0_iter9_reg;
        output_2_0_0_addr_reg_3738_pp0_iter11_reg <= output_2_0_0_addr_reg_3738_pp0_iter10_reg;
        output_2_0_0_addr_reg_3738_pp0_iter12_reg <= output_2_0_0_addr_reg_3738_pp0_iter11_reg;
        output_2_0_0_addr_reg_3738_pp0_iter13_reg <= output_2_0_0_addr_reg_3738_pp0_iter12_reg;
        output_2_0_0_addr_reg_3738_pp0_iter14_reg <= output_2_0_0_addr_reg_3738_pp0_iter13_reg;
        output_2_0_0_addr_reg_3738_pp0_iter15_reg <= output_2_0_0_addr_reg_3738_pp0_iter14_reg;
        output_2_0_0_addr_reg_3738_pp0_iter16_reg <= output_2_0_0_addr_reg_3738_pp0_iter15_reg;
        output_2_0_0_addr_reg_3738_pp0_iter2_reg <= output_2_0_0_addr_reg_3738;
        output_2_0_0_addr_reg_3738_pp0_iter3_reg <= output_2_0_0_addr_reg_3738_pp0_iter2_reg;
        output_2_0_0_addr_reg_3738_pp0_iter4_reg <= output_2_0_0_addr_reg_3738_pp0_iter3_reg;
        output_2_0_0_addr_reg_3738_pp0_iter5_reg <= output_2_0_0_addr_reg_3738_pp0_iter4_reg;
        output_2_0_0_addr_reg_3738_pp0_iter6_reg <= output_2_0_0_addr_reg_3738_pp0_iter5_reg;
        output_2_0_0_addr_reg_3738_pp0_iter7_reg <= output_2_0_0_addr_reg_3738_pp0_iter6_reg;
        output_2_0_0_addr_reg_3738_pp0_iter8_reg <= output_2_0_0_addr_reg_3738_pp0_iter7_reg;
        output_2_0_0_addr_reg_3738_pp0_iter9_reg <= output_2_0_0_addr_reg_3738_pp0_iter8_reg;
        output_3_0_0_addr_reg_3769_pp0_iter10_reg <= output_3_0_0_addr_reg_3769_pp0_iter9_reg;
        output_3_0_0_addr_reg_3769_pp0_iter11_reg <= output_3_0_0_addr_reg_3769_pp0_iter10_reg;
        output_3_0_0_addr_reg_3769_pp0_iter12_reg <= output_3_0_0_addr_reg_3769_pp0_iter11_reg;
        output_3_0_0_addr_reg_3769_pp0_iter13_reg <= output_3_0_0_addr_reg_3769_pp0_iter12_reg;
        output_3_0_0_addr_reg_3769_pp0_iter14_reg <= output_3_0_0_addr_reg_3769_pp0_iter13_reg;
        output_3_0_0_addr_reg_3769_pp0_iter15_reg <= output_3_0_0_addr_reg_3769_pp0_iter14_reg;
        output_3_0_0_addr_reg_3769_pp0_iter16_reg <= output_3_0_0_addr_reg_3769_pp0_iter15_reg;
        output_3_0_0_addr_reg_3769_pp0_iter17_reg <= output_3_0_0_addr_reg_3769_pp0_iter16_reg;
        output_3_0_0_addr_reg_3769_pp0_iter2_reg <= output_3_0_0_addr_reg_3769;
        output_3_0_0_addr_reg_3769_pp0_iter3_reg <= output_3_0_0_addr_reg_3769_pp0_iter2_reg;
        output_3_0_0_addr_reg_3769_pp0_iter4_reg <= output_3_0_0_addr_reg_3769_pp0_iter3_reg;
        output_3_0_0_addr_reg_3769_pp0_iter5_reg <= output_3_0_0_addr_reg_3769_pp0_iter4_reg;
        output_3_0_0_addr_reg_3769_pp0_iter6_reg <= output_3_0_0_addr_reg_3769_pp0_iter5_reg;
        output_3_0_0_addr_reg_3769_pp0_iter7_reg <= output_3_0_0_addr_reg_3769_pp0_iter6_reg;
        output_3_0_0_addr_reg_3769_pp0_iter8_reg <= output_3_0_0_addr_reg_3769_pp0_iter7_reg;
        output_3_0_0_addr_reg_3769_pp0_iter9_reg <= output_3_0_0_addr_reg_3769_pp0_iter8_reg;
        output_4_0_0_addr_reg_3800_pp0_iter10_reg <= output_4_0_0_addr_reg_3800_pp0_iter9_reg;
        output_4_0_0_addr_reg_3800_pp0_iter11_reg <= output_4_0_0_addr_reg_3800_pp0_iter10_reg;
        output_4_0_0_addr_reg_3800_pp0_iter12_reg <= output_4_0_0_addr_reg_3800_pp0_iter11_reg;
        output_4_0_0_addr_reg_3800_pp0_iter13_reg <= output_4_0_0_addr_reg_3800_pp0_iter12_reg;
        output_4_0_0_addr_reg_3800_pp0_iter14_reg <= output_4_0_0_addr_reg_3800_pp0_iter13_reg;
        output_4_0_0_addr_reg_3800_pp0_iter15_reg <= output_4_0_0_addr_reg_3800_pp0_iter14_reg;
        output_4_0_0_addr_reg_3800_pp0_iter16_reg <= output_4_0_0_addr_reg_3800_pp0_iter15_reg;
        output_4_0_0_addr_reg_3800_pp0_iter17_reg <= output_4_0_0_addr_reg_3800_pp0_iter16_reg;
        output_4_0_0_addr_reg_3800_pp0_iter2_reg <= output_4_0_0_addr_reg_3800;
        output_4_0_0_addr_reg_3800_pp0_iter3_reg <= output_4_0_0_addr_reg_3800_pp0_iter2_reg;
        output_4_0_0_addr_reg_3800_pp0_iter4_reg <= output_4_0_0_addr_reg_3800_pp0_iter3_reg;
        output_4_0_0_addr_reg_3800_pp0_iter5_reg <= output_4_0_0_addr_reg_3800_pp0_iter4_reg;
        output_4_0_0_addr_reg_3800_pp0_iter6_reg <= output_4_0_0_addr_reg_3800_pp0_iter5_reg;
        output_4_0_0_addr_reg_3800_pp0_iter7_reg <= output_4_0_0_addr_reg_3800_pp0_iter6_reg;
        output_4_0_0_addr_reg_3800_pp0_iter8_reg <= output_4_0_0_addr_reg_3800_pp0_iter7_reg;
        output_4_0_0_addr_reg_3800_pp0_iter9_reg <= output_4_0_0_addr_reg_3800_pp0_iter8_reg;
        output_5_0_0_addr_reg_3831_pp0_iter10_reg <= output_5_0_0_addr_reg_3831_pp0_iter9_reg;
        output_5_0_0_addr_reg_3831_pp0_iter11_reg <= output_5_0_0_addr_reg_3831_pp0_iter10_reg;
        output_5_0_0_addr_reg_3831_pp0_iter12_reg <= output_5_0_0_addr_reg_3831_pp0_iter11_reg;
        output_5_0_0_addr_reg_3831_pp0_iter13_reg <= output_5_0_0_addr_reg_3831_pp0_iter12_reg;
        output_5_0_0_addr_reg_3831_pp0_iter14_reg <= output_5_0_0_addr_reg_3831_pp0_iter13_reg;
        output_5_0_0_addr_reg_3831_pp0_iter15_reg <= output_5_0_0_addr_reg_3831_pp0_iter14_reg;
        output_5_0_0_addr_reg_3831_pp0_iter16_reg <= output_5_0_0_addr_reg_3831_pp0_iter15_reg;
        output_5_0_0_addr_reg_3831_pp0_iter17_reg <= output_5_0_0_addr_reg_3831_pp0_iter16_reg;
        output_5_0_0_addr_reg_3831_pp0_iter2_reg <= output_5_0_0_addr_reg_3831;
        output_5_0_0_addr_reg_3831_pp0_iter3_reg <= output_5_0_0_addr_reg_3831_pp0_iter2_reg;
        output_5_0_0_addr_reg_3831_pp0_iter4_reg <= output_5_0_0_addr_reg_3831_pp0_iter3_reg;
        output_5_0_0_addr_reg_3831_pp0_iter5_reg <= output_5_0_0_addr_reg_3831_pp0_iter4_reg;
        output_5_0_0_addr_reg_3831_pp0_iter6_reg <= output_5_0_0_addr_reg_3831_pp0_iter5_reg;
        output_5_0_0_addr_reg_3831_pp0_iter7_reg <= output_5_0_0_addr_reg_3831_pp0_iter6_reg;
        output_5_0_0_addr_reg_3831_pp0_iter8_reg <= output_5_0_0_addr_reg_3831_pp0_iter7_reg;
        output_5_0_0_addr_reg_3831_pp0_iter9_reg <= output_5_0_0_addr_reg_3831_pp0_iter8_reg;
        select_ln167_1_reg_3403_pp0_iter1_reg <= select_ln167_1_reg_3403;
        select_ln167_1_reg_3403_pp0_iter2_reg <= select_ln167_1_reg_3403_pp0_iter1_reg;
        select_ln167_1_reg_3403_pp0_iter3_reg <= select_ln167_1_reg_3403_pp0_iter2_reg;
        select_ln167_5_reg_3464_pp0_iter10_reg <= select_ln167_5_reg_3464_pp0_iter9_reg;
        select_ln167_5_reg_3464_pp0_iter11_reg <= select_ln167_5_reg_3464_pp0_iter10_reg;
        select_ln167_5_reg_3464_pp0_iter12_reg <= select_ln167_5_reg_3464_pp0_iter11_reg;
        select_ln167_5_reg_3464_pp0_iter13_reg <= select_ln167_5_reg_3464_pp0_iter12_reg;
        select_ln167_5_reg_3464_pp0_iter14_reg <= select_ln167_5_reg_3464_pp0_iter13_reg;
        select_ln167_5_reg_3464_pp0_iter15_reg <= select_ln167_5_reg_3464_pp0_iter14_reg;
        select_ln167_5_reg_3464_pp0_iter16_reg <= select_ln167_5_reg_3464_pp0_iter15_reg;
        select_ln167_5_reg_3464_pp0_iter17_reg <= select_ln167_5_reg_3464_pp0_iter16_reg;
        select_ln167_5_reg_3464_pp0_iter1_reg <= select_ln167_5_reg_3464;
        select_ln167_5_reg_3464_pp0_iter2_reg <= select_ln167_5_reg_3464_pp0_iter1_reg;
        select_ln167_5_reg_3464_pp0_iter3_reg <= select_ln167_5_reg_3464_pp0_iter2_reg;
        select_ln167_5_reg_3464_pp0_iter4_reg <= select_ln167_5_reg_3464_pp0_iter3_reg;
        select_ln167_5_reg_3464_pp0_iter5_reg <= select_ln167_5_reg_3464_pp0_iter4_reg;
        select_ln167_5_reg_3464_pp0_iter6_reg <= select_ln167_5_reg_3464_pp0_iter5_reg;
        select_ln167_5_reg_3464_pp0_iter7_reg <= select_ln167_5_reg_3464_pp0_iter6_reg;
        select_ln167_5_reg_3464_pp0_iter8_reg <= select_ln167_5_reg_3464_pp0_iter7_reg;
        select_ln167_5_reg_3464_pp0_iter9_reg <= select_ln167_5_reg_3464_pp0_iter8_reg;
        sext_ln179_reg_3617_pp0_iter2_reg <= sext_ln179_reg_3617;
        tmp_0_2_reg_4168_pp0_iter5_reg <= tmp_0_2_reg_4168;
        tmp_0_2_reg_4168_pp0_iter6_reg <= tmp_0_2_reg_4168_pp0_iter5_reg;
        tmp_0_2_reg_4168_pp0_iter7_reg <= tmp_0_2_reg_4168_pp0_iter6_reg;
        tmp_0_2_reg_4168_pp0_iter8_reg <= tmp_0_2_reg_4168_pp0_iter7_reg;
        tmp_0_3_reg_4173_pp0_iter10_reg <= tmp_0_3_reg_4173_pp0_iter9_reg;
        tmp_0_3_reg_4173_pp0_iter11_reg <= tmp_0_3_reg_4173_pp0_iter10_reg;
        tmp_0_3_reg_4173_pp0_iter5_reg <= tmp_0_3_reg_4173;
        tmp_0_3_reg_4173_pp0_iter6_reg <= tmp_0_3_reg_4173_pp0_iter5_reg;
        tmp_0_3_reg_4173_pp0_iter7_reg <= tmp_0_3_reg_4173_pp0_iter6_reg;
        tmp_0_3_reg_4173_pp0_iter8_reg <= tmp_0_3_reg_4173_pp0_iter7_reg;
        tmp_0_3_reg_4173_pp0_iter9_reg <= tmp_0_3_reg_4173_pp0_iter8_reg;
        tmp_1_2_reg_4183_pp0_iter5_reg <= tmp_1_2_reg_4183;
        tmp_1_2_reg_4183_pp0_iter6_reg <= tmp_1_2_reg_4183_pp0_iter5_reg;
        tmp_1_2_reg_4183_pp0_iter7_reg <= tmp_1_2_reg_4183_pp0_iter6_reg;
        tmp_1_2_reg_4183_pp0_iter8_reg <= tmp_1_2_reg_4183_pp0_iter7_reg;
        tmp_1_3_reg_4188_pp0_iter10_reg <= tmp_1_3_reg_4188_pp0_iter9_reg;
        tmp_1_3_reg_4188_pp0_iter11_reg <= tmp_1_3_reg_4188_pp0_iter10_reg;
        tmp_1_3_reg_4188_pp0_iter5_reg <= tmp_1_3_reg_4188;
        tmp_1_3_reg_4188_pp0_iter6_reg <= tmp_1_3_reg_4188_pp0_iter5_reg;
        tmp_1_3_reg_4188_pp0_iter7_reg <= tmp_1_3_reg_4188_pp0_iter6_reg;
        tmp_1_3_reg_4188_pp0_iter8_reg <= tmp_1_3_reg_4188_pp0_iter7_reg;
        tmp_1_3_reg_4188_pp0_iter9_reg <= tmp_1_3_reg_4188_pp0_iter8_reg;
        tmp_2_2_reg_4198_pp0_iter5_reg <= tmp_2_2_reg_4198;
        tmp_2_2_reg_4198_pp0_iter6_reg <= tmp_2_2_reg_4198_pp0_iter5_reg;
        tmp_2_2_reg_4198_pp0_iter7_reg <= tmp_2_2_reg_4198_pp0_iter6_reg;
        tmp_2_2_reg_4198_pp0_iter8_reg <= tmp_2_2_reg_4198_pp0_iter7_reg;
        tmp_2_3_reg_4203_pp0_iter10_reg <= tmp_2_3_reg_4203_pp0_iter9_reg;
        tmp_2_3_reg_4203_pp0_iter11_reg <= tmp_2_3_reg_4203_pp0_iter10_reg;
        tmp_2_3_reg_4203_pp0_iter5_reg <= tmp_2_3_reg_4203;
        tmp_2_3_reg_4203_pp0_iter6_reg <= tmp_2_3_reg_4203_pp0_iter5_reg;
        tmp_2_3_reg_4203_pp0_iter7_reg <= tmp_2_3_reg_4203_pp0_iter6_reg;
        tmp_2_3_reg_4203_pp0_iter8_reg <= tmp_2_3_reg_4203_pp0_iter7_reg;
        tmp_2_3_reg_4203_pp0_iter9_reg <= tmp_2_3_reg_4203_pp0_iter8_reg;
        tmp_3_1_reg_4218_pp0_iter5_reg <= tmp_3_1_reg_4218;
        tmp_3_1_reg_4218_pp0_iter6_reg <= tmp_3_1_reg_4218_pp0_iter5_reg;
        tmp_4_1_reg_4233_pp0_iter5_reg <= tmp_4_1_reg_4233;
        tmp_4_1_reg_4233_pp0_iter6_reg <= tmp_4_1_reg_4233_pp0_iter5_reg;
        tmp_5_1_reg_4248_pp0_iter5_reg <= tmp_5_1_reg_4248;
        tmp_5_1_reg_4248_pp0_iter6_reg <= tmp_5_1_reg_4248_pp0_iter5_reg;
        zext_ln179_reg_4107_pp0_iter10_reg[6 : 0] <= zext_ln179_reg_4107_pp0_iter9_reg[6 : 0];
        zext_ln179_reg_4107_pp0_iter11_reg[6 : 0] <= zext_ln179_reg_4107_pp0_iter10_reg[6 : 0];
        zext_ln179_reg_4107_pp0_iter12_reg[6 : 0] <= zext_ln179_reg_4107_pp0_iter11_reg[6 : 0];
        zext_ln179_reg_4107_pp0_iter4_reg[6 : 0] <= zext_ln179_reg_4107[6 : 0];
        zext_ln179_reg_4107_pp0_iter5_reg[6 : 0] <= zext_ln179_reg_4107_pp0_iter4_reg[6 : 0];
        zext_ln179_reg_4107_pp0_iter6_reg[6 : 0] <= zext_ln179_reg_4107_pp0_iter5_reg[6 : 0];
        zext_ln179_reg_4107_pp0_iter7_reg[6 : 0] <= zext_ln179_reg_4107_pp0_iter6_reg[6 : 0];
        zext_ln179_reg_4107_pp0_iter8_reg[6 : 0] <= zext_ln179_reg_4107_pp0_iter7_reg[6 : 0];
        zext_ln179_reg_4107_pp0_iter9_reg[6 : 0] <= zext_ln179_reg_4107_pp0_iter8_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_3_reg_4298 <= grp_fu_667_p2;
        acc_4_reg_4303 <= grp_fu_671_p2;
        acc_5_reg_4308 <= grp_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln165_reg_3318 <= add_ln165_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln178_11_reg_3607 <= add_ln178_11_fu_1823_p2;
        add_ln178_15_reg_3612 <= add_ln178_15_fu_1875_p2;
        add_ln178_59_reg_3744 <= add_ln178_59_fu_2260_p2;
        add_ln178_72_reg_3775 <= add_ln178_72_fu_2399_p2;
        add_ln178_85_reg_3806 <= add_ln178_85_fu_2538_p2;
        output_1_0_0_addr_reg_3702 <= zext_ln181_fu_1988_p1;
        output_2_0_0_addr_reg_3738 <= zext_ln181_1_fu_2098_p1;
        output_3_0_0_addr_reg_3769 <= zext_ln181_2_fu_2208_p1;
        output_4_0_0_addr_reg_3800 <= zext_ln181_3_fu_2347_p1;
        output_5_0_0_addr_reg_3831 <= zext_ln181_4_fu_2486_p1;
        sext_ln179_reg_3617 <= sext_ln179_fu_1880_p1;
        trunc_ln178_10_reg_3642 <= trunc_ln178_10_fu_1977_p1;
        trunc_ln178_11_reg_3647 <= trunc_ln178_11_fu_1981_p1;
        trunc_ln178_14_reg_3677 <= trunc_ln178_14_fu_2048_p1;
        trunc_ln178_15_reg_3682 <= trunc_ln178_15_fu_2052_p1;
        trunc_ln178_16_reg_3692 <= trunc_ln178_16_fu_2087_p1;
        trunc_ln178_17_reg_3697 <= trunc_ln178_17_fu_2091_p1;
        trunc_ln178_20_reg_3713 <= trunc_ln178_20_fu_2158_p1;
        trunc_ln178_21_reg_3718 <= trunc_ln178_21_fu_2162_p1;
        trunc_ln178_22_reg_3728 <= trunc_ln178_22_fu_2197_p1;
        trunc_ln178_23_reg_3733 <= trunc_ln178_23_fu_2201_p1;
        trunc_ln178_26_reg_3749 <= trunc_ln178_26_fu_2297_p1;
        trunc_ln178_27_reg_3754 <= trunc_ln178_27_fu_2301_p1;
        trunc_ln178_28_reg_3759 <= trunc_ln178_28_fu_2336_p1;
        trunc_ln178_29_reg_3764 <= trunc_ln178_29_fu_2340_p1;
        trunc_ln178_32_reg_3780 <= trunc_ln178_32_fu_2436_p1;
        trunc_ln178_33_reg_3785 <= trunc_ln178_33_fu_2440_p1;
        trunc_ln178_34_reg_3790 <= trunc_ln178_34_fu_2475_p1;
        trunc_ln178_35_reg_3795 <= trunc_ln178_35_fu_2479_p1;
        trunc_ln178_38_reg_3811 <= trunc_ln178_38_fu_2575_p1;
        trunc_ln178_39_reg_3816 <= trunc_ln178_39_fu_2579_p1;
        trunc_ln178_40_reg_3821 <= trunc_ln178_40_fu_2614_p1;
        trunc_ln178_41_reg_3826 <= trunc_ln178_41_fu_2618_p1;
        trunc_ln178_8_reg_3627 <= trunc_ln178_8_fu_1938_p1;
        trunc_ln178_9_reg_3632 <= trunc_ln178_9_fu_1942_p1;
        zext_ln178_1_reg_3591[2 : 0] <= zext_ln178_1_fu_1773_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln178_55_reg_3563 <= add_ln178_55_fu_1673_p2;
        add_ln178_68_reg_3574 <= add_ln178_68_fu_1720_p2;
        add_ln178_81_reg_3585 <= add_ln178_81_fu_1767_p2;
        tmp_28_reg_3558 <= {{mul_ln181_2_fu_1641_p2[15:10]}};
        tmp_31_reg_3569 <= {{mul_ln181_3_fu_1688_p2[15:10]}};
        tmp_55_reg_3580 <= {{mul_ln181_4_fu_1735_p2[15:10]}};
        trunc_ln178_12_reg_3538 <= trunc_ln178_12_fu_1568_p1;
        trunc_ln178_13_reg_3543 <= trunc_ln178_13_fu_1572_p1;
        trunc_ln178_18_reg_3548 <= trunc_ln178_18_fu_1624_p1;
        trunc_ln178_19_reg_3553 <= trunc_ln178_19_fu_1628_p1;
        trunc_ln178_6_reg_3528 <= trunc_ln178_6_fu_1512_p1;
        trunc_ln178_7_reg_3533 <= trunc_ln178_7_fu_1516_p1;
        zext_ln178_2_reg_3512[2 : 0] <= zext_ln178_2_fu_1434_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln178_63_reg_3912 <= add_ln178_63_fu_2779_p2;
        add_ln178_67_reg_3922 <= add_ln178_67_fu_2796_p2;
        add_ln178_76_reg_3932 <= add_ln178_76_fu_2818_p2;
        add_ln178_80_reg_3942 <= add_ln178_80_fu_2835_p2;
        add_ln178_89_reg_3952 <= add_ln178_89_fu_2857_p2;
        add_ln178_93_reg_3962 <= add_ln178_93_fu_2874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_fu_904_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln178_2_reg_3351 <= and_ln178_2_fu_940_p2;
        icmp_ln166_reg_3323 <= icmp_ln166_fu_916_p2;
        icmp_ln167_reg_3346 <= icmp_ln167_fu_934_p2;
        icmp_ln168_reg_3341 <= icmp_ln168_fu_928_p2;
        xor_ln178_reg_3335 <= xor_ln178_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_conv5_buffer_0_1_reg_4378 <= bias_conv5_buffer_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln167_5_reg_3464_pp0_iter15_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter16_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        biased_0_3_reg_4421 <= grp_fu_715_p2;
        biased_1_3_reg_4428 <= grp_fu_719_p2;
        biased_2_3_reg_4435 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln167_5_reg_3464_pp0_iter16_reg == 1'd1) & (icmp_ln165_reg_3314_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        biased_311_3_reg_4442 <= grp_fu_715_p2;
        biased_412_3_reg_4449 <= grp_fu_719_p2;
        biased_5_3_reg_4456 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        co_reg_3497 <= co_fu_1401_p2;
        select_ln166_reg_3507 <= select_ln166_fu_1427_p3;
        select_ln167_6_reg_3474 <= select_ln167_6_fu_1321_p3;
        select_ln167_7_reg_3502 <= select_ln167_7_fu_1413_p3;
        select_ln178_1_reg_3360 <= select_ln178_1_fu_959_p3;
        select_ln178_6_reg_3389 <= select_ln178_6_fu_1040_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_0_load_1_reg_3972 <= input_0_q1;
        input_1_load_1_reg_3987 <= input_1_q1;
        weights_conv5_buffer_18_reg_3967 <= weights_conv5_buffer_11_q0;
        weights_conv5_buffer_19_reg_3982 <= weights_conv5_buffer_10_q0;
        weights_conv5_buffer_26_reg_3997 <= weights_conv5_buffer_9_q0;
        weights_conv5_buffer_27_reg_4002 <= weights_conv5_buffer_8_q0;
        weights_conv5_buffer_34_reg_4007 <= weights_conv5_buffer_7_q0;
        weights_conv5_buffer_35_reg_4012 <= weights_conv5_buffer_6_q0;
        weights_conv5_buffer_40_reg_4027 <= weights_conv5_buffer_5_q0;
        weights_conv5_buffer_41_reg_4032 <= weights_conv5_buffer_4_q0;
        weights_conv5_buffer_48_reg_4047 <= weights_conv5_buffer_3_q0;
        weights_conv5_buffer_49_reg_4052 <= weights_conv5_buffer_2_q0;
        weights_conv5_buffer_56_reg_4067 <= weights_conv5_buffer_1_q0;
        weights_conv5_buffer_57_reg_4072 <= weights_conv5_buffer_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_0_load_reg_3652 <= input_0_q0;
        input_1_load_reg_3662 <= input_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_0_0_0_addr_reg_4112 <= zext_ln179_fu_2903_p1;
        zext_ln179_reg_4107[6 : 0] <= zext_ln179_fu_2903_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln167_1_reg_3403_pp0_iter3_reg == 1'd0) & (icmp_ln165_reg_3314_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_0_0_0_load_reg_4118 <= output_0_0_0_q0;
        output_1_0_0_load_reg_4133 <= output_1_0_0_q0;
        output_2_0_0_load_reg_4148 <= output_2_0_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln167_1_reg_3403 <= select_ln167_1_fu_1185_p3;
        select_ln167_2_reg_3413 <= select_ln167_2_fu_1203_p3;
        select_ln167_3_reg_3428[2 : 1] <= select_ln167_3_fu_1263_p3[2 : 1];
        select_ln167_4_reg_3446[2 : 1] <= select_ln167_4_fu_1287_p3[2 : 1];
        select_ln167_5_reg_3464 <= select_ln167_5_fu_1313_p3;
        select_ln167_reg_3396 <= select_ln167_fu_1135_p3;
        tmp_19_reg_3479 <= {{mul_ln179_fu_1333_p2[15:10]}};
        tmp_22_reg_3485 <= {{mul_ln181_fu_1359_p2[15:10]}};
        tmp_25_reg_3491 <= {{mul_ln181_1_fu_1385_p2[15:10]}};
        trunc_ln178_1_reg_3423 <= trunc_ln178_1_fu_1243_p1;
        trunc_ln178_reg_3418 <= trunc_ln178_fu_1239_p1;
        zext_ln178_reg_3365[2 : 0] <= zext_ln178_fu_966_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln176_3_reg_4208 <= select_ln176_3_fu_2928_p3;
        select_ln176_4_reg_4223 <= select_ln176_4_fu_2935_p3;
        select_ln176_5_reg_4238 <= select_ln176_5_fu_2942_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_reg_4123 <= grp_fu_727_p2;
        tmp_0_1_reg_4128 <= grp_fu_731_p2;
        tmp_1_1_reg_4143 <= grp_fu_739_p2;
        tmp_1_reg_4138 <= grp_fu_735_p2;
        tmp_2_1_reg_4158 <= grp_fu_747_p2;
        tmp_2_reg_4153 <= grp_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_0_2_reg_4168 <= grp_fu_727_p2;
        tmp_0_3_reg_4173 <= grp_fu_731_p2;
        tmp_1_2_reg_4183 <= grp_fu_735_p2;
        tmp_1_3_reg_4188 <= grp_fu_739_p2;
        tmp_2_2_reg_4198 <= grp_fu_743_p2;
        tmp_2_3_reg_4203 <= grp_fu_747_p2;
        tmp_3_1_reg_4218 <= grp_fu_755_p2;
        tmp_3_reg_4213 <= grp_fu_751_p2;
        tmp_4_1_reg_4233 <= grp_fu_763_p2;
        tmp_4_reg_4228 <= grp_fu_759_p2;
        tmp_5_1_reg_4248 <= grp_fu_771_p2;
        tmp_5_reg_4243 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_3_2_reg_4253 <= grp_fu_751_p2;
        tmp_3_3_reg_4258 <= grp_fu_755_p2;
        tmp_4_2_reg_4263 <= grp_fu_759_p2;
        tmp_4_3_reg_4268 <= grp_fu_763_p2;
        tmp_5_2_reg_4273 <= grp_fu_767_p2;
        tmp_5_3_reg_4278 <= grp_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_conv5_buffer_16_reg_3857 <= weights_conv5_buffer_11_q0;
        weights_conv5_buffer_17_reg_3862 <= weights_conv5_buffer_10_q0;
        weights_conv5_buffer_24_reg_3877 <= weights_conv5_buffer_9_q0;
        weights_conv5_buffer_25_reg_3882 <= weights_conv5_buffer_8_q0;
        weights_conv5_buffer_32_reg_3897 <= weights_conv5_buffer_7_q0;
        weights_conv5_buffer_33_reg_3902 <= weights_conv5_buffer_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3314_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_conv5_buffer_42_reg_4077 <= weights_conv5_buffer_5_q0;
        weights_conv5_buffer_43_reg_4082 <= weights_conv5_buffer_4_q0;
        weights_conv5_buffer_50_reg_4087 <= weights_conv5_buffer_3_q0;
        weights_conv5_buffer_51_reg_4092 <= weights_conv5_buffer_2_q0;
        weights_conv5_buffer_58_reg_4097 <= weights_conv5_buffer_1_q0;
        weights_conv5_buffer_59_reg_4102 <= weights_conv5_buffer_q0;
    end
end

always @ (*) begin
    if ((icmp_ln165_fu_904_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_ci_0_phi_fu_647_p4 = select_ln167_6_reg_3474;
    end else begin
        ap_phi_mux_ci_0_phi_fu_647_p4 = ci_0_reg_643;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_co_0_phi_fu_659_p4 = co_reg_3497;
    end else begin
        ap_phi_mux_co_0_phi_fu_659_p4 = co_0_reg_655;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten115_phi_fu_588_p4 = add_ln165_reg_3318;
    end else begin
        ap_phi_mux_indvar_flatten115_phi_fu_588_p4 = indvar_flatten115_reg_584;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten53_phi_fu_611_p4 = select_ln166_reg_3507;
    end else begin
        ap_phi_mux_indvar_flatten53_phi_fu_611_p4 = indvar_flatten53_reg_607;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_635_p4 = select_ln167_7_reg_3502;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_635_p4 = indvar_flatten_reg_631;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_m_0_phi_fu_599_p4 = select_ln178_1_reg_3360;
    end else begin
        ap_phi_mux_m_0_phi_fu_599_p4 = m_0_reg_595;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_n_0_phi_fu_623_p4 = select_ln178_6_reg_3389;
    end else begin
        ap_phi_mux_n_0_phi_fu_623_p4 = n_0_reg_619;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        bias_conv5_buffer_0_ce0 = 1'b1;
    end else begin
        bias_conv5_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_667_p0 = select_ln176_3_reg_4208;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_667_p0 = select_ln176_fu_2907_p3;
    end else begin
        grp_fu_667_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_667_p1 = tmp_3_reg_4213;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_667_p1 = tmp1_reg_4123;
    end else begin
        grp_fu_667_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_671_p0 = select_ln176_4_reg_4223;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_671_p0 = select_ln176_1_fu_2914_p3;
    end else begin
        grp_fu_671_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_671_p1 = tmp_4_reg_4228;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_671_p1 = tmp_1_reg_4138;
    end else begin
        grp_fu_671_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_675_p0 = select_ln176_5_reg_4238;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_675_p0 = select_ln176_2_fu_2921_p3;
    end else begin
        grp_fu_675_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_675_p1 = tmp_5_reg_4243;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_675_p1 = tmp_2_reg_4153;
    end else begin
        grp_fu_675_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_679_p0 = acc_3_reg_4298;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_679_p0 = acc_reg_4283;
        end else begin
            grp_fu_679_p0 = 'bx;
        end
    end else begin
        grp_fu_679_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_679_p1 = tmp_3_1_reg_4218_pp0_iter6_reg;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_679_p1 = tmp_0_1_reg_4128_pp0_iter6_reg;
        end else begin
            grp_fu_679_p1 = 'bx;
        end
    end else begin
        grp_fu_679_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_683_p0 = acc_4_reg_4303;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_683_p0 = acc_1_reg_4288;
        end else begin
            grp_fu_683_p0 = 'bx;
        end
    end else begin
        grp_fu_683_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_683_p1 = tmp_4_1_reg_4233_pp0_iter6_reg;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_683_p1 = tmp_1_1_reg_4143_pp0_iter6_reg;
        end else begin
            grp_fu_683_p1 = 'bx;
        end
    end else begin
        grp_fu_683_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_687_p0 = acc_5_reg_4308;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_687_p0 = acc_2_reg_4293;
        end else begin
            grp_fu_687_p0 = 'bx;
        end
    end else begin
        grp_fu_687_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_687_p1 = tmp_5_1_reg_4248_pp0_iter6_reg;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_687_p1 = tmp_2_1_reg_4158_pp0_iter6_reg;
        end else begin
            grp_fu_687_p1 = 'bx;
        end
    end else begin
        grp_fu_687_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_691_p0 = acc_3_1_reg_4328;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_691_p0 = acc_0_1_reg_4313;
    end else begin
        grp_fu_691_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_691_p1 = tmp_3_2_reg_4253_pp0_iter9_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_691_p1 = tmp_0_2_reg_4168_pp0_iter8_reg;
    end else begin
        grp_fu_691_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_695_p0 = acc_4_1_reg_4333;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_695_p0 = acc_1_1_reg_4318;
    end else begin
        grp_fu_695_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_695_p1 = tmp_4_2_reg_4263_pp0_iter9_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_695_p1 = tmp_1_2_reg_4183_pp0_iter8_reg;
    end else begin
        grp_fu_695_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_699_p0 = acc_5_1_reg_4338;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_699_p0 = acc_2_1_reg_4323;
    end else begin
        grp_fu_699_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_699_p1 = tmp_5_2_reg_4273_pp0_iter9_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_699_p1 = tmp_2_2_reg_4198_pp0_iter8_reg;
    end else begin
        grp_fu_699_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_703_p0 = acc_3_2_reg_4358;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_703_p0 = acc_0_2_reg_4343;
        end else begin
            grp_fu_703_p0 = 'bx;
        end
    end else begin
        grp_fu_703_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_703_p1 = tmp_3_3_reg_4258_pp0_iter12_reg;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_703_p1 = tmp_0_3_reg_4173_pp0_iter11_reg;
        end else begin
            grp_fu_703_p1 = 'bx;
        end
    end else begin
        grp_fu_703_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_707_p0 = acc_4_2_reg_4363;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_707_p0 = acc_1_2_reg_4348;
        end else begin
            grp_fu_707_p0 = 'bx;
        end
    end else begin
        grp_fu_707_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_707_p1 = tmp_4_3_reg_4268_pp0_iter12_reg;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_707_p1 = tmp_1_3_reg_4188_pp0_iter11_reg;
        end else begin
            grp_fu_707_p1 = 'bx;
        end
    end else begin
        grp_fu_707_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_711_p0 = acc_5_2_reg_4368;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_711_p0 = acc_2_2_reg_4353;
        end else begin
            grp_fu_711_p0 = 'bx;
        end
    end else begin
        grp_fu_711_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_711_p1 = tmp_5_3_reg_4278_pp0_iter12_reg;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_711_p1 = tmp_2_3_reg_4203_pp0_iter11_reg;
        end else begin
            grp_fu_711_p1 = 'bx;
        end
    end else begin
        grp_fu_711_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_715_p0 = acc_3_3_reg_4403;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_715_p0 = acc_0_3_reg_4385;
    end else begin
        grp_fu_715_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_719_p0 = acc_4_3_reg_4409;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_719_p0 = acc_1_3_reg_4391;
    end else begin
        grp_fu_719_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_723_p0 = acc_5_3_reg_4415;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_723_p0 = acc_2_3_reg_4397;
    end else begin
        grp_fu_723_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_727_p0 = weights_conv5_buffer_18_reg_3967;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_727_p0 = weights_conv5_buffer_16_reg_3857;
    end else begin
        grp_fu_727_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_727_p1 = input_0_load_1_reg_3972;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_727_p1 = input_0_load_reg_3652;
    end else begin
        grp_fu_727_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_731_p0 = weights_conv5_buffer_19_reg_3982;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_731_p0 = weights_conv5_buffer_17_reg_3862;
    end else begin
        grp_fu_731_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_731_p1 = input_1_load_1_reg_3987;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_731_p1 = input_1_load_reg_3662;
    end else begin
        grp_fu_731_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_735_p0 = weights_conv5_buffer_26_reg_3997;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_735_p0 = weights_conv5_buffer_24_reg_3877;
    end else begin
        grp_fu_735_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_735_p1 = input_0_load_1_reg_3972;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_735_p1 = input_0_load_reg_3652;
    end else begin
        grp_fu_735_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_739_p0 = weights_conv5_buffer_27_reg_4002;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_739_p0 = weights_conv5_buffer_25_reg_3882;
    end else begin
        grp_fu_739_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_739_p1 = input_1_load_1_reg_3987;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_739_p1 = input_1_load_reg_3662;
    end else begin
        grp_fu_739_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_743_p0 = weights_conv5_buffer_34_reg_4007;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_743_p0 = weights_conv5_buffer_32_reg_3897;
    end else begin
        grp_fu_743_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_743_p1 = input_0_load_1_reg_3972;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_743_p1 = input_0_load_reg_3652;
    end else begin
        grp_fu_743_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_747_p0 = weights_conv5_buffer_35_reg_4012;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_747_p0 = weights_conv5_buffer_33_reg_3902;
    end else begin
        grp_fu_747_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_747_p1 = input_1_load_1_reg_3987;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_747_p1 = input_1_load_reg_3662;
    end else begin
        grp_fu_747_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_751_p0 = weights_conv5_buffer_42_reg_4077;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_751_p0 = weights_conv5_buffer_40_reg_4027;
        end else begin
            grp_fu_751_p0 = 'bx;
        end
    end else begin
        grp_fu_751_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_751_p1 = input_0_load_1_reg_3972;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_751_p1 = input_0_load_reg_3652_pp0_iter2_reg;
        end else begin
            grp_fu_751_p1 = 'bx;
        end
    end else begin
        grp_fu_751_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_755_p0 = weights_conv5_buffer_43_reg_4082;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_755_p0 = weights_conv5_buffer_41_reg_4032;
        end else begin
            grp_fu_755_p0 = 'bx;
        end
    end else begin
        grp_fu_755_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_755_p1 = input_1_load_1_reg_3987;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_755_p1 = input_1_load_reg_3662_pp0_iter2_reg;
        end else begin
            grp_fu_755_p1 = 'bx;
        end
    end else begin
        grp_fu_755_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_759_p0 = weights_conv5_buffer_50_reg_4087;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_759_p0 = weights_conv5_buffer_48_reg_4047;
        end else begin
            grp_fu_759_p0 = 'bx;
        end
    end else begin
        grp_fu_759_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_759_p1 = input_0_load_1_reg_3972;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_759_p1 = input_0_load_reg_3652_pp0_iter2_reg;
        end else begin
            grp_fu_759_p1 = 'bx;
        end
    end else begin
        grp_fu_759_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_763_p0 = weights_conv5_buffer_51_reg_4092;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_763_p0 = weights_conv5_buffer_49_reg_4052;
        end else begin
            grp_fu_763_p0 = 'bx;
        end
    end else begin
        grp_fu_763_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_763_p1 = input_1_load_1_reg_3987;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_763_p1 = input_1_load_reg_3662_pp0_iter2_reg;
        end else begin
            grp_fu_763_p1 = 'bx;
        end
    end else begin
        grp_fu_763_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_767_p0 = weights_conv5_buffer_58_reg_4097;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_767_p0 = weights_conv5_buffer_56_reg_4067;
        end else begin
            grp_fu_767_p0 = 'bx;
        end
    end else begin
        grp_fu_767_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_767_p1 = input_0_load_1_reg_3972;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_767_p1 = input_0_load_reg_3652_pp0_iter2_reg;
        end else begin
            grp_fu_767_p1 = 'bx;
        end
    end else begin
        grp_fu_767_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_771_p0 = weights_conv5_buffer_59_reg_4102;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_771_p0 = weights_conv5_buffer_57_reg_4072;
        end else begin
            grp_fu_771_p0 = 'bx;
        end
    end else begin
        grp_fu_771_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_771_p1 = input_1_load_1_reg_3987;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_771_p1 = input_1_load_reg_3662_pp0_iter2_reg;
        end else begin
            grp_fu_771_p1 = 'bx;
        end
    end else begin
        grp_fu_771_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter17 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_775_p0 = biased_311_3_reg_4442;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_775_p0 = biased_0_3_reg_4421;
        end else begin
            grp_fu_775_p0 = 'bx;
        end
    end else begin
        grp_fu_775_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter17 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_780_p0 = biased_412_3_reg_4449;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_780_p0 = biased_1_3_reg_4428;
        end else begin
            grp_fu_780_p0 = 'bx;
        end
    end else begin
        grp_fu_780_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter17 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_785_p0 = biased_5_3_reg_4456;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_785_p0 = biased_2_3_reg_4435;
        end else begin
            grp_fu_785_p0 = 'bx;
        end
    end else begin
        grp_fu_785_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_ce1 = 1'b1;
    end else begin
        input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_1_ce0 = 1'b1;
    end else begin
        input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_1_ce1 = 1'b1;
    end else begin
        input_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_0_0_0_ce0 = 1'b1;
    end else begin
        output_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        output_0_0_0_ce1 = 1'b1;
    end else begin
        output_0_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter17_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        output_0_0_0_we1 = 1'b1;
    end else begin
        output_0_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_1_0_0_ce0 = 1'b1;
    end else begin
        output_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        output_1_0_0_ce1 = 1'b1;
    end else begin
        output_1_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter17_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        output_1_0_0_we1 = 1'b1;
    end else begin
        output_1_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_2_0_0_ce0 = 1'b1;
    end else begin
        output_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        output_2_0_0_ce1 = 1'b1;
    end else begin
        output_2_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3314_pp0_iter17_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        output_2_0_0_we1 = 1'b1;
    end else begin
        output_2_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_3_0_0_ce0 = 1'b1;
    end else begin
        output_3_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        output_3_0_0_ce1 = 1'b1;
    end else begin
        output_3_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        output_3_0_0_we1 = 1'b1;
    end else begin
        output_3_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_4_0_0_ce0 = 1'b1;
    end else begin
        output_4_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        output_4_0_0_ce1 = 1'b1;
    end else begin
        output_4_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        output_4_0_0_we1 = 1'b1;
    end else begin
        output_4_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_5_0_0_ce0 = 1'b1;
    end else begin
        output_5_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        output_5_0_0_ce1 = 1'b1;
    end else begin
        output_5_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3314_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        output_5_0_0_we1 = 1'b1;
    end else begin
        output_5_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        weights_conv5_buffer_10_address0 = zext_ln178_14_fu_2669_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        weights_conv5_buffer_10_address0 = zext_ln178_12_fu_1901_p1;
    end else begin
        weights_conv5_buffer_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_10_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        weights_conv5_buffer_11_address0 = zext_ln178_13_fu_2647_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        weights_conv5_buffer_11_address0 = zext_ln178_12_fu_1901_p1;
    end else begin
        weights_conv5_buffer_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_11_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weights_conv5_buffer_1_address0 = zext_ln178_43_fu_2895_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weights_conv5_buffer_1_address0 = zext_ln178_42_fu_2840_p1;
        end else begin
            weights_conv5_buffer_1_address0 = 'bx;
        end
    end else begin
        weights_conv5_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_1_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weights_conv5_buffer_2_address0 = zext_ln178_38_fu_2891_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weights_conv5_buffer_2_address0 = zext_ln178_36_fu_2801_p1;
        end else begin
            weights_conv5_buffer_2_address0 = 'bx;
        end
    end else begin
        weights_conv5_buffer_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_2_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weights_conv5_buffer_3_address0 = zext_ln178_37_fu_2887_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weights_conv5_buffer_3_address0 = zext_ln178_36_fu_2801_p1;
        end else begin
            weights_conv5_buffer_3_address0 = 'bx;
        end
    end else begin
        weights_conv5_buffer_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_3_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weights_conv5_buffer_4_address0 = zext_ln178_32_fu_2883_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weights_conv5_buffer_4_address0 = zext_ln178_30_fu_2762_p1;
        end else begin
            weights_conv5_buffer_4_address0 = 'bx;
        end
    end else begin
        weights_conv5_buffer_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_4_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weights_conv5_buffer_5_address0 = zext_ln178_31_fu_2879_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weights_conv5_buffer_5_address0 = zext_ln178_30_fu_2762_p1;
        end else begin
            weights_conv5_buffer_5_address0 = 'bx;
        end
    end else begin
        weights_conv5_buffer_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_5_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        weights_conv5_buffer_6_address0 = zext_ln178_26_fu_2757_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        weights_conv5_buffer_6_address0 = zext_ln178_24_fu_2121_p1;
    end else begin
        weights_conv5_buffer_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_6_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        weights_conv5_buffer_7_address0 = zext_ln178_25_fu_2735_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        weights_conv5_buffer_7_address0 = zext_ln178_24_fu_2121_p1;
    end else begin
        weights_conv5_buffer_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_7_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        weights_conv5_buffer_8_address0 = zext_ln178_20_fu_2713_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        weights_conv5_buffer_8_address0 = zext_ln178_18_fu_2011_p1;
    end else begin
        weights_conv5_buffer_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_8_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        weights_conv5_buffer_9_address0 = zext_ln178_19_fu_2691_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        weights_conv5_buffer_9_address0 = zext_ln178_18_fu_2011_p1;
    end else begin
        weights_conv5_buffer_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_9_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            weights_conv5_buffer_address0 = zext_ln178_44_fu_2899_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            weights_conv5_buffer_address0 = zext_ln178_42_fu_2840_p1;
        end else begin
            weights_conv5_buffer_address0 = 'bx;
        end
    end else begin
        weights_conv5_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_conv5_buffer_ce0 = 1'b1;
    end else begin
        weights_conv5_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln165_fu_904_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter17 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln165_fu_904_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter17 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln165_fu_910_p2 = (11'd1 + ap_phi_mux_indvar_flatten115_phi_fu_588_p4);

assign add_ln166_1_fu_1421_p2 = (10'd1 + indvar_flatten53_reg_607);

assign add_ln167_1_fu_1407_p2 = (8'd1 + indvar_flatten_reg_631);

assign add_ln178_10_fu_1817_p2 = (p_shl6_cast_fu_1809_p3 + trunc_ln178_2_fu_1801_p1);

assign add_ln178_11_fu_1823_p2 = (zext_ln178_2_reg_3512 + add_ln178_10_fu_1817_p2);

assign add_ln178_12_fu_1842_p2 = (zext_ln178_7_fu_1838_p1 + zext_ln167_3_fu_1828_p1);

assign add_ln178_13_fu_1848_p2 = (zext_ln178_reg_3365 + add_ln178_12_fu_1842_p2);

assign add_ln178_14_fu_1869_p2 = (p_shl8_cast_fu_1861_p3 + trunc_ln178_4_fu_1853_p1);

assign add_ln178_15_fu_1875_p2 = (zext_ln178_2_reg_3512 + add_ln178_14_fu_1869_p2);

assign add_ln178_16_fu_1479_p2 = (zext_ln167_fu_1437_p1 + zext_ln178_9_fu_1475_p1);

assign add_ln178_17_fu_1501_p2 = (zext_ln178_11_fu_1497_p1 + zext_ln178_10_fu_1485_p1);

assign add_ln178_18_fu_1507_p2 = (zext_ln178_reg_3365 + add_ln178_17_fu_1501_p2);

assign add_ln178_19_fu_1890_p2 = (p_shl10_cast_fu_1883_p3 + trunc_ln178_6_reg_3528);

assign add_ln178_1_fu_1632_p2 = (7'd3 + select_ln167_reg_3396);

assign add_ln178_20_fu_1895_p2 = (zext_ln178_1_fu_1773_p1 + add_ln178_19_fu_1890_p2);

assign add_ln178_21_fu_1927_p2 = (p_shl_fu_1916_p5 + tmp_s_fu_1907_p4);

assign add_ln178_22_fu_1933_p2 = (zext_ln178_reg_3365 + add_ln178_21_fu_1927_p2);

assign add_ln178_23_fu_2637_p2 = (p_shl12_cast_fu_2630_p3 + trunc_ln178_8_reg_3627);

assign add_ln178_24_fu_2642_p2 = (zext_ln178_1_reg_3591 + add_ln178_23_fu_2637_p2);

assign add_ln178_25_fu_1966_p2 = (p_shl1_fu_1955_p5 + tmp_45_fu_1946_p4);

assign add_ln178_26_fu_1972_p2 = (zext_ln178_reg_3365 + add_ln178_25_fu_1966_p2);

assign add_ln178_27_fu_2659_p2 = (p_shl14_cast_fu_2652_p3 + trunc_ln178_10_reg_3642);

assign add_ln178_28_fu_2664_p2 = (zext_ln178_1_reg_3591 + add_ln178_27_fu_2659_p2);

assign add_ln178_29_fu_1535_p2 = (zext_ln167_fu_1437_p1 + zext_ln178_15_fu_1531_p1);

assign add_ln178_2_fu_1679_p2 = (7'd4 + select_ln167_reg_3396);

assign add_ln178_30_fu_1557_p2 = (zext_ln178_17_fu_1553_p1 + zext_ln178_16_fu_1541_p1);

assign add_ln178_31_fu_1563_p2 = (zext_ln178_reg_3365 + add_ln178_30_fu_1557_p2);

assign add_ln178_32_fu_2000_p2 = (p_shl16_cast_fu_1993_p3 + trunc_ln178_12_reg_3538);

assign add_ln178_33_fu_2005_p2 = (zext_ln178_1_fu_1773_p1 + add_ln178_32_fu_2000_p2);

assign add_ln178_34_fu_2037_p2 = (p_shl2_fu_2026_p5 + tmp_46_fu_2017_p4);

assign add_ln178_35_fu_2043_p2 = (zext_ln178_reg_3365 + add_ln178_34_fu_2037_p2);

assign add_ln178_36_fu_2681_p2 = (p_shl18_cast_fu_2674_p3 + trunc_ln178_14_reg_3677);

assign add_ln178_37_fu_2686_p2 = (zext_ln178_1_reg_3591 + add_ln178_36_fu_2681_p2);

assign add_ln178_38_fu_2076_p2 = (p_shl3_fu_2065_p5 + tmp_47_fu_2056_p4);

assign add_ln178_39_fu_2082_p2 = (zext_ln178_reg_3365 + add_ln178_38_fu_2076_p2);

assign add_ln178_3_fu_1726_p2 = (7'd5 + select_ln167_reg_3396);

assign add_ln178_40_fu_2703_p2 = (p_shl20_cast_fu_2696_p3 + trunc_ln178_16_reg_3692);

assign add_ln178_41_fu_2708_p2 = (zext_ln178_1_reg_3591 + add_ln178_40_fu_2703_p2);

assign add_ln178_42_fu_1591_p2 = (zext_ln167_fu_1437_p1 + zext_ln178_21_fu_1587_p1);

assign add_ln178_43_fu_1613_p2 = (zext_ln178_23_fu_1609_p1 + zext_ln178_22_fu_1597_p1);

assign add_ln178_44_fu_1619_p2 = (zext_ln178_reg_3365 + add_ln178_43_fu_1613_p2);

assign add_ln178_45_fu_2110_p2 = (p_shl22_cast_fu_2103_p3 + trunc_ln178_18_reg_3548);

assign add_ln178_46_fu_2115_p2 = (zext_ln178_1_fu_1773_p1 + add_ln178_45_fu_2110_p2);

assign add_ln178_47_fu_2147_p2 = (p_shl4_fu_2136_p5 + tmp_48_fu_2127_p4);

assign add_ln178_48_fu_2153_p2 = (zext_ln178_reg_3365 + add_ln178_47_fu_2147_p2);

assign add_ln178_49_fu_2725_p2 = (p_shl24_cast_fu_2718_p3 + trunc_ln178_20_reg_3713);

assign add_ln178_4_fu_1227_p2 = (zext_ln178_3_fu_1223_p1 + zext_ln167_1_fu_1211_p1);

assign add_ln178_50_fu_2730_p2 = (zext_ln178_1_reg_3591 + add_ln178_49_fu_2725_p2);

assign add_ln178_51_fu_2186_p2 = (p_shl5_fu_2175_p5 + tmp_49_fu_2166_p4);

assign add_ln178_52_fu_2192_p2 = (zext_ln178_reg_3365 + add_ln178_51_fu_2186_p2);

assign add_ln178_53_fu_2747_p2 = (p_shl26_cast_fu_2740_p3 + trunc_ln178_22_reg_3728);

assign add_ln178_54_fu_2752_p2 = (zext_ln178_1_reg_3591 + add_ln178_53_fu_2747_p2);

assign add_ln178_55_fu_1673_p2 = (zext_ln167_fu_1437_p1 + zext_ln178_27_fu_1669_p1);

assign add_ln178_56_fu_2227_p2 = (zext_ln178_29_fu_2223_p1 + zext_ln178_28_fu_2213_p1);

assign add_ln178_57_fu_2233_p2 = (zext_ln178_reg_3365 + add_ln178_56_fu_2227_p2);

assign add_ln178_58_fu_2254_p2 = (p_shl28_cast_fu_2246_p3 + trunc_ln178_24_fu_2238_p1);

assign add_ln178_59_fu_2260_p2 = (zext_ln178_1_fu_1773_p1 + add_ln178_58_fu_2254_p2);

assign add_ln178_5_fu_1233_p2 = (zext_ln178_fu_966_p1 + add_ln178_4_fu_1227_p2);

assign add_ln178_60_fu_2286_p2 = (p_shl6_fu_2275_p5 + tmp_50_fu_2266_p4);

assign add_ln178_61_fu_2292_p2 = (zext_ln178_reg_3365 + add_ln178_60_fu_2286_p2);

assign add_ln178_62_fu_2774_p2 = (p_shl30_cast_fu_2767_p3 + trunc_ln178_26_reg_3749);

assign add_ln178_63_fu_2779_p2 = (zext_ln178_1_reg_3591 + add_ln178_62_fu_2774_p2);

assign add_ln178_64_fu_2325_p2 = (p_shl7_fu_2314_p5 + tmp_51_fu_2305_p4);

assign add_ln178_65_fu_2331_p2 = (zext_ln178_reg_3365 + add_ln178_64_fu_2325_p2);

assign add_ln178_66_fu_2791_p2 = (p_shl32_cast_fu_2784_p3 + trunc_ln178_28_reg_3759);

assign add_ln178_67_fu_2796_p2 = (zext_ln178_1_reg_3591 + add_ln178_66_fu_2791_p2);

assign add_ln178_68_fu_1720_p2 = (zext_ln167_fu_1437_p1 + zext_ln178_33_fu_1716_p1);

assign add_ln178_69_fu_2366_p2 = (zext_ln178_35_fu_2362_p1 + zext_ln178_34_fu_2352_p1);

assign add_ln178_6_fu_1447_p2 = (p_shl4_cast_fu_1440_p3 + trunc_ln178_reg_3418);

assign add_ln178_70_fu_2372_p2 = (zext_ln178_reg_3365 + add_ln178_69_fu_2366_p2);

assign add_ln178_71_fu_2393_p2 = (p_shl34_cast_fu_2385_p3 + trunc_ln178_30_fu_2377_p1);

assign add_ln178_72_fu_2399_p2 = (zext_ln178_1_fu_1773_p1 + add_ln178_71_fu_2393_p2);

assign add_ln178_73_fu_2425_p2 = (p_shl8_fu_2414_p5 + tmp_53_fu_2405_p4);

assign add_ln178_74_fu_2431_p2 = (zext_ln178_reg_3365 + add_ln178_73_fu_2425_p2);

assign add_ln178_75_fu_2813_p2 = (p_shl36_cast_fu_2806_p3 + trunc_ln178_32_reg_3780);

assign add_ln178_76_fu_2818_p2 = (zext_ln178_1_reg_3591 + add_ln178_75_fu_2813_p2);

assign add_ln178_77_fu_2464_p2 = (p_shl9_fu_2453_p5 + tmp_54_fu_2444_p4);

assign add_ln178_78_fu_2470_p2 = (zext_ln178_reg_3365 + add_ln178_77_fu_2464_p2);

assign add_ln178_79_fu_2830_p2 = (p_shl38_cast_fu_2823_p3 + trunc_ln178_34_reg_3790);

assign add_ln178_7_fu_1452_p2 = (zext_ln178_2_fu_1434_p1 + add_ln178_6_fu_1447_p2);

assign add_ln178_80_fu_2835_p2 = (zext_ln178_1_reg_3591 + add_ln178_79_fu_2830_p2);

assign add_ln178_81_fu_1767_p2 = (zext_ln167_fu_1437_p1 + zext_ln178_39_fu_1763_p1);

assign add_ln178_82_fu_2505_p2 = (zext_ln178_41_fu_2501_p1 + zext_ln178_40_fu_2491_p1);

assign add_ln178_83_fu_2511_p2 = (zext_ln178_reg_3365 + add_ln178_82_fu_2505_p2);

assign add_ln178_84_fu_2532_p2 = (p_shl40_cast_fu_2524_p3 + trunc_ln178_36_fu_2516_p1);

assign add_ln178_85_fu_2538_p2 = (zext_ln178_1_fu_1773_p1 + add_ln178_84_fu_2532_p2);

assign add_ln178_86_fu_2564_p2 = (p_shl10_fu_2553_p5 + tmp_58_fu_2544_p4);

assign add_ln178_87_fu_2570_p2 = (zext_ln178_reg_3365 + add_ln178_86_fu_2564_p2);

assign add_ln178_88_fu_2852_p2 = (p_shl42_cast_fu_2845_p3 + trunc_ln178_38_reg_3811);

assign add_ln178_89_fu_2857_p2 = (zext_ln178_1_reg_3591 + add_ln178_88_fu_2852_p2);

assign add_ln178_8_fu_1790_p2 = (zext_ln178_5_fu_1786_p1 + zext_ln167_2_fu_1776_p1);

assign add_ln178_90_fu_2603_p2 = (p_shl11_fu_2592_p5 + tmp_59_fu_2583_p4);

assign add_ln178_91_fu_2609_p2 = (zext_ln178_reg_3365 + add_ln178_90_fu_2603_p2);

assign add_ln178_92_fu_2869_p2 = (p_shl_cast_fu_2862_p3 + trunc_ln178_40_reg_3821);

assign add_ln178_93_fu_2874_p2 = (zext_ln178_1_reg_3591 + add_ln178_92_fu_2869_p2);

assign add_ln178_9_fu_1796_p2 = (zext_ln178_reg_3365 + add_ln178_8_fu_1790_p2);

assign add_ln178_fu_1375_p2 = (7'd2 + select_ln167_fu_1135_p3);

assign and_ln178_1_fu_1006_p2 = (xor_ln178_reg_3335 & and_ln181_1_reg_3309);

assign and_ln178_2_fu_940_p2 = (xor_ln178_fu_922_p2 & icmp_ln167_fu_934_p2);

assign and_ln178_3_fu_1118_p2 = (or_ln178_5_fu_1113_p2 & and_ln178_1_fu_1006_p2);

assign and_ln178_fu_982_p2 = (xor_ln178_reg_3335 & icmp_ln181_1_reg_3284);

assign and_ln180_1_fu_3039_p2 = (or_ln180_1_fu_3033_p2 & grp_fu_780_p2);

assign and_ln180_2_fu_3094_p2 = (or_ln180_2_fu_3088_p2 & grp_fu_785_p2);

assign and_ln180_3_fu_3149_p2 = (or_ln180_3_fu_3143_p2 & grp_fu_775_p2);

assign and_ln180_4_fu_3204_p2 = (or_ln180_4_fu_3198_p2 & grp_fu_780_p2);

assign and_ln180_5_fu_3259_p2 = (or_ln180_5_fu_3253_p2 & grp_fu_785_p2);

assign and_ln180_fu_2984_p2 = (or_ln180_fu_2978_p2 & grp_fu_775_p2);

assign and_ln181_1_fu_898_p2 = (icmp_ln181_fu_790_p2 & and_ln181_fu_892_p2);

assign and_ln181_2_fu_1301_p2 = (select_ln178_7_fu_1053_p3 & icmp_ln181_5_fu_1295_p2);

assign and_ln181_3_fu_1307_p2 = (select_ln178_2_fu_976_p3 & and_ln181_2_fu_1301_p2);

assign and_ln181_fu_892_p2 = (icmp_ln181_2_fu_886_p2 & icmp_ln181_1_fu_796_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bias_conv5_buffer_0_address0 = zext_ln179_reg_4107_pp0_iter12_reg;

assign bitcast_ln180_1_fu_3004_p1 = biased_1_3_reg_4428;

assign bitcast_ln180_2_fu_3059_p1 = biased_2_3_reg_4435;

assign bitcast_ln180_3_fu_3114_p1 = biased_311_3_reg_4442;

assign bitcast_ln180_4_fu_3169_p1 = biased_412_3_reg_4449;

assign bitcast_ln180_5_fu_3224_p1 = biased_5_3_reg_4456;

assign bitcast_ln180_fu_2949_p1 = biased_0_3_reg_4421;

assign ci_fu_1129_p2 = (5'd4 + select_ln178_4_fu_1024_p3);

assign co_fu_1401_p2 = (7'd6 + select_ln167_fu_1135_p3);

assign icmp_ln165_fu_904_p2 = ((ap_phi_mux_indvar_flatten115_phi_fu_588_p4 == 11'd2000) ? 1'b1 : 1'b0);

assign icmp_ln166_fu_916_p2 = ((ap_phi_mux_indvar_flatten53_phi_fu_611_p4 == 10'd400) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_934_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_635_p4 == 8'd80) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_928_p2 = ((ap_phi_mux_co_0_phi_fu_659_p4 < 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln176_1_fu_994_p2 = ((or_ln176_1_mid_fu_986_p3 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln176_2_fu_1074_p2 = ((or_ln176_1_mid2_fu_1066_p3 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln176_3_fu_1179_p2 = ((or_ln176_1_mid1_fu_1171_p3 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_838_p2 = ((or_ln176_1_fu_830_p3 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln180_10_fu_3241_p2 = ((tmp_43_fu_3227_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln180_11_fu_3247_p2 = ((trunc_ln180_5_fu_3237_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln180_1_fu_2972_p2 = ((trunc_ln180_fu_2962_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln180_2_fu_3021_p2 = ((tmp_35_fu_3007_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln180_3_fu_3027_p2 = ((trunc_ln180_1_fu_3017_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln180_4_fu_3076_p2 = ((tmp_37_fu_3062_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln180_5_fu_3082_p2 = ((trunc_ln180_2_fu_3072_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln180_6_fu_3131_p2 = ((tmp_39_fu_3117_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln180_7_fu_3137_p2 = ((trunc_ln180_3_fu_3127_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln180_8_fu_3186_p2 = ((tmp_41_fu_3172_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln180_9_fu_3192_p2 = ((trunc_ln180_4_fu_3182_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_2966_p2 = ((tmp_33_fu_2952_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln181_1_fu_796_p2 = ((ap_phi_mux_n_0_phi_fu_623_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln181_2_fu_886_p2 = ((or_ln178_1_fu_870_p2 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln181_3_fu_970_p2 = ((m_fu_946_p2 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln181_4_fu_1047_p2 = ((n_fu_1014_p2 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln181_5_fu_1295_p2 = ((or_ln178_8_fu_1271_p2 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln181_fu_790_p2 = ((ap_phi_mux_m_0_phi_fu_599_p4 == 3'd4) ? 1'b1 : 1'b0);

assign input_0_address0 = zext_ln178_4_fu_1458_p1;

assign input_0_address1 = zext_ln178_6_fu_2622_p1;

assign input_1_address0 = zext_ln178_4_fu_1458_p1;

assign input_1_address1 = zext_ln178_8_fu_2626_p1;

assign lshr_ln178_2_mid1_fu_1277_p4 = {{or_ln178_8_fu_1271_p2[3:1]}};

assign lshr_ln178_mid1_fu_1193_p4 = {{ci_fu_1129_p2[4:1]}};

assign m_fu_946_p2 = (3'd1 + m_0_reg_595);

assign mul_ln179_fu_1333_p1 = mul_ln179_fu_1333_p10;

assign mul_ln179_fu_1333_p10 = select_ln167_fu_1135_p3;

assign mul_ln179_fu_1333_p2 = (16'd171 * mul_ln179_fu_1333_p1);

assign mul_ln181_1_fu_1385_p1 = mul_ln181_1_fu_1385_p10;

assign mul_ln181_1_fu_1385_p10 = add_ln178_fu_1375_p2;

assign mul_ln181_1_fu_1385_p2 = (16'd171 * mul_ln181_1_fu_1385_p1);

assign mul_ln181_2_fu_1641_p1 = mul_ln181_2_fu_1641_p10;

assign mul_ln181_2_fu_1641_p10 = add_ln178_1_fu_1632_p2;

assign mul_ln181_2_fu_1641_p2 = (16'd171 * mul_ln181_2_fu_1641_p1);

assign mul_ln181_3_fu_1688_p1 = mul_ln181_3_fu_1688_p10;

assign mul_ln181_3_fu_1688_p10 = add_ln178_2_fu_1679_p2;

assign mul_ln181_3_fu_1688_p2 = (16'd171 * mul_ln181_3_fu_1688_p1);

assign mul_ln181_4_fu_1735_p1 = mul_ln181_4_fu_1735_p10;

assign mul_ln181_4_fu_1735_p10 = add_ln178_3_fu_1726_p2;

assign mul_ln181_4_fu_1735_p2 = (16'd171 * mul_ln181_4_fu_1735_p1);

assign mul_ln181_fu_1359_p1 = mul_ln181_fu_1359_p10;

assign mul_ln181_fu_1359_p10 = or_ln178_2_fu_1349_p2;

assign mul_ln181_fu_1359_p2 = (16'd171 * mul_ln181_fu_1359_p1);

assign n_fu_1014_p2 = (3'd1 + select_ln178_fu_952_p3);

assign or_ln176_1_fu_830_p3 = {{tmp_14_fu_822_p3}, {or_ln176_2_fu_816_p2}};

assign or_ln176_1_mid1_fu_1171_p3 = {{tmp_15_fu_1163_p3}, {or_ln176_5_fu_1157_p2}};

assign or_ln176_1_mid2_fu_1066_p3 = {{1'd0}, {or_ln176_3_fu_1060_p2}};

assign or_ln176_1_mid_fu_986_p3 = {{1'd0}, {m_fu_946_p2}};

assign or_ln176_2_fu_816_p2 = (or_ln176_fu_810_p2 | ap_phi_mux_n_0_phi_fu_623_p4);

assign or_ln176_3_fu_1060_p2 = (select_ln178_1_fu_959_p3 | n_fu_1014_p2);

assign or_ln176_4_fu_1151_p2 = (trunc_ln176_1_fu_1147_p1 | select_ln178_1_fu_959_p3);

assign or_ln176_5_fu_1157_p2 = (select_ln178_6_fu_1040_p3 | or_ln176_4_fu_1151_p2);

assign or_ln176_fu_810_p2 = (trunc_ln176_fu_806_p1 | ap_phi_mux_m_0_phi_fu_599_p4);

assign or_ln178_1_fu_870_p2 = (trunc_ln167_fu_802_p1 | 4'd3);

assign or_ln178_2_fu_1349_p2 = (select_ln167_fu_1135_p3 | 7'd1);

assign or_ln178_3_fu_1010_p2 = (icmp_ln168_reg_3341 | icmp_ln166_reg_3323);

assign or_ln178_4_fu_1020_p2 = (icmp_ln166_reg_3323 | and_ln178_2_reg_3351);

assign or_ln178_5_fu_1113_p2 = (xor_ln178_1_fu_1108_p2 | icmp_ln166_reg_3323);

assign or_ln178_6_fu_1124_p2 = (or_ln178_3_fu_1010_p2 | and_ln178_2_reg_3351);

assign or_ln178_7_fu_1257_p2 = (trunc_ln178_mid1_fu_1247_p4 | 3'd1);

assign or_ln178_8_fu_1271_p2 = (trunc_ln167_1_fu_1143_p1 | 4'd3);

assign or_ln178_fu_864_p2 = (trunc_ln8_fu_854_p4 | 3'd1);

assign or_ln180_1_fu_3033_p2 = (icmp_ln180_3_fu_3027_p2 | icmp_ln180_2_fu_3021_p2);

assign or_ln180_2_fu_3088_p2 = (icmp_ln180_5_fu_3082_p2 | icmp_ln180_4_fu_3076_p2);

assign or_ln180_3_fu_3143_p2 = (icmp_ln180_7_fu_3137_p2 | icmp_ln180_6_fu_3131_p2);

assign or_ln180_4_fu_3198_p2 = (icmp_ln180_9_fu_3192_p2 | icmp_ln180_8_fu_3186_p2);

assign or_ln180_5_fu_3253_p2 = (icmp_ln180_11_fu_3247_p2 | icmp_ln180_10_fu_3241_p2);

assign or_ln180_fu_2978_p2 = (icmp_ln180_fu_2966_p2 | icmp_ln180_1_fu_2972_p2);

assign output_0_0_0_address0 = zext_ln179_fu_2903_p1;

assign output_0_0_0_address1 = output_0_0_0_addr_reg_4112_pp0_iter16_reg;

assign output_0_0_0_d1 = ((select_ln167_5_reg_3464_pp0_iter16_reg[0:0] === 1'b1) ? select_ln180_fu_2990_p3 : acc_0_3_reg_4385_pp0_iter17_reg);

assign output_1_0_0_address0 = output_1_0_0_addr_reg_3702_pp0_iter2_reg;

assign output_1_0_0_address1 = output_1_0_0_addr_reg_3702_pp0_iter16_reg;

assign output_1_0_0_d1 = ((select_ln167_5_reg_3464_pp0_iter16_reg[0:0] === 1'b1) ? select_ln180_1_fu_3045_p3 : acc_1_3_reg_4391_pp0_iter17_reg);

assign output_2_0_0_address0 = output_2_0_0_addr_reg_3738_pp0_iter2_reg;

assign output_2_0_0_address1 = output_2_0_0_addr_reg_3738_pp0_iter16_reg;

assign output_2_0_0_d1 = ((select_ln167_5_reg_3464_pp0_iter16_reg[0:0] === 1'b1) ? select_ln180_2_fu_3100_p3 : acc_2_3_reg_4397_pp0_iter17_reg);

assign output_3_0_0_address0 = output_3_0_0_addr_reg_3769_pp0_iter3_reg;

assign output_3_0_0_address1 = output_3_0_0_addr_reg_3769_pp0_iter17_reg;

assign output_3_0_0_d1 = ((select_ln167_5_reg_3464_pp0_iter17_reg[0:0] === 1'b1) ? select_ln180_3_fu_3155_p3 : acc_3_3_reg_4403_pp0_iter17_reg);

assign output_4_0_0_address0 = output_4_0_0_addr_reg_3800_pp0_iter3_reg;

assign output_4_0_0_address1 = output_4_0_0_addr_reg_3800_pp0_iter17_reg;

assign output_4_0_0_d1 = ((select_ln167_5_reg_3464_pp0_iter17_reg[0:0] === 1'b1) ? select_ln180_4_fu_3210_p3 : acc_4_3_reg_4409_pp0_iter17_reg);

assign output_5_0_0_address0 = output_5_0_0_addr_reg_3831_pp0_iter3_reg;

assign output_5_0_0_address1 = output_5_0_0_addr_reg_3831_pp0_iter17_reg;

assign output_5_0_0_d1 = ((select_ln167_5_reg_3464_pp0_iter17_reg[0:0] === 1'b1) ? select_ln180_5_fu_3265_p3 : acc_5_3_reg_4415_pp0_iter17_reg);

assign p_shl10_cast_fu_1883_p3 = {{trunc_ln178_7_reg_3533}, {2'd0}};

assign p_shl10_fu_2553_p5 = {{{{{{52'd0}, {sext_ln181_4_fu_2483_p1}}}, {select_ln167_3_reg_3428}}}, {2'd0}};

assign p_shl11_fu_2592_p5 = {{{{{{52'd0}, {sext_ln181_4_fu_2483_p1}}}, {select_ln167_4_reg_3446}}}, {2'd0}};

assign p_shl12_cast_fu_2630_p3 = {{trunc_ln178_9_reg_3632}, {2'd0}};

assign p_shl14_cast_fu_2652_p3 = {{trunc_ln178_11_reg_3647}, {2'd0}};

assign p_shl16_cast_fu_1993_p3 = {{trunc_ln178_13_reg_3543}, {2'd0}};

assign p_shl18_cast_fu_2674_p3 = {{trunc_ln178_15_reg_3682}, {2'd0}};

assign p_shl1_fu_1955_p5 = {{{{{{52'd0}, {sext_ln179_fu_1880_p1}}}, {select_ln167_4_reg_3446}}}, {2'd0}};

assign p_shl20_cast_fu_2696_p3 = {{trunc_ln178_17_reg_3697}, {2'd0}};

assign p_shl22_cast_fu_2103_p3 = {{trunc_ln178_19_reg_3553}, {2'd0}};

assign p_shl24_cast_fu_2718_p3 = {{trunc_ln178_21_reg_3718}, {2'd0}};

assign p_shl26_cast_fu_2740_p3 = {{trunc_ln178_23_reg_3733}, {2'd0}};

assign p_shl28_cast_fu_2246_p3 = {{trunc_ln178_25_fu_2242_p1}, {2'd0}};

assign p_shl2_fu_2026_p5 = {{{{{{52'd0}, {sext_ln181_fu_1985_p1}}}, {select_ln167_3_reg_3428}}}, {2'd0}};

assign p_shl30_cast_fu_2767_p3 = {{trunc_ln178_27_reg_3754}, {2'd0}};

assign p_shl32_cast_fu_2784_p3 = {{trunc_ln178_29_reg_3764}, {2'd0}};

assign p_shl34_cast_fu_2385_p3 = {{trunc_ln178_31_fu_2381_p1}, {2'd0}};

assign p_shl36_cast_fu_2806_p3 = {{trunc_ln178_33_reg_3785}, {2'd0}};

assign p_shl38_cast_fu_2823_p3 = {{trunc_ln178_35_reg_3795}, {2'd0}};

assign p_shl3_fu_2065_p5 = {{{{{{52'd0}, {sext_ln181_fu_1985_p1}}}, {select_ln167_4_reg_3446}}}, {2'd0}};

assign p_shl40_cast_fu_2524_p3 = {{trunc_ln178_37_fu_2520_p1}, {2'd0}};

assign p_shl42_cast_fu_2845_p3 = {{trunc_ln178_39_reg_3816}, {2'd0}};

assign p_shl4_cast_fu_1440_p3 = {{trunc_ln178_1_reg_3423}, {2'd0}};

assign p_shl4_fu_2136_p5 = {{{{{{52'd0}, {sext_ln181_1_fu_2095_p1}}}, {select_ln167_3_reg_3428}}}, {2'd0}};

assign p_shl5_fu_2175_p5 = {{{{{{52'd0}, {sext_ln181_1_fu_2095_p1}}}, {select_ln167_4_reg_3446}}}, {2'd0}};

assign p_shl6_cast_fu_1809_p3 = {{trunc_ln178_3_fu_1805_p1}, {2'd0}};

assign p_shl6_fu_2275_p5 = {{{{{{52'd0}, {sext_ln181_2_fu_2205_p1}}}, {select_ln167_3_reg_3428}}}, {2'd0}};

assign p_shl7_fu_2314_p5 = {{{{{{52'd0}, {sext_ln181_2_fu_2205_p1}}}, {select_ln167_4_reg_3446}}}, {2'd0}};

assign p_shl8_cast_fu_1861_p3 = {{trunc_ln178_5_fu_1857_p1}, {2'd0}};

assign p_shl8_fu_2414_p5 = {{{{{{52'd0}, {sext_ln181_3_fu_2344_p1}}}, {select_ln167_3_reg_3428}}}, {2'd0}};

assign p_shl9_fu_2453_p5 = {{{{{{52'd0}, {sext_ln181_3_fu_2344_p1}}}, {select_ln167_4_reg_3446}}}, {2'd0}};

assign p_shl_cast_fu_2862_p3 = {{trunc_ln178_41_reg_3826}, {2'd0}};

assign p_shl_fu_1916_p5 = {{{{{{52'd0}, {sext_ln179_fu_1880_p1}}}, {select_ln167_3_reg_3428}}}, {2'd0}};

assign select_ln166_fu_1427_p3 = ((icmp_ln166_reg_3323[0:0] === 1'b1) ? 10'd1 : add_ln166_1_fu_1421_p2);

assign select_ln167_1_fu_1185_p3 = ((or_ln178_6_fu_1124_p2[0:0] === 1'b1) ? select_ln178_8_fu_1080_p3 : icmp_ln176_3_fu_1179_p2);

assign select_ln167_2_fu_1203_p3 = ((or_ln178_6_fu_1124_p2[0:0] === 1'b1) ? select_ln178_9_fu_1087_p3 : lshr_ln178_mid1_fu_1193_p4);

assign select_ln167_3_fu_1263_p3 = ((or_ln178_6_fu_1124_p2[0:0] === 1'b1) ? select_ln178_10_fu_1094_p3 : or_ln178_7_fu_1257_p2);

assign select_ln167_4_fu_1287_p3 = ((or_ln178_6_fu_1124_p2[0:0] === 1'b1) ? select_ln178_11_fu_1101_p3 : lshr_ln178_2_mid1_fu_1277_p4);

assign select_ln167_5_fu_1313_p3 = ((or_ln178_6_fu_1124_p2[0:0] === 1'b1) ? and_ln178_3_fu_1118_p2 : and_ln181_3_fu_1307_p2);

assign select_ln167_6_fu_1321_p3 = ((or_ln178_6_fu_1124_p2[0:0] === 1'b1) ? select_ln178_4_fu_1024_p3 : ci_fu_1129_p2);

assign select_ln167_7_fu_1413_p3 = ((or_ln178_4_fu_1020_p2[0:0] === 1'b1) ? 8'd1 : add_ln167_1_fu_1407_p2);

assign select_ln167_fu_1135_p3 = ((or_ln178_6_fu_1124_p2[0:0] === 1'b1) ? select_ln178_5_fu_1032_p3 : 7'd0);

assign select_ln176_1_fu_2914_p3 = ((select_ln167_1_reg_3403_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : output_1_0_0_load_reg_4133);

assign select_ln176_2_fu_2921_p3 = ((select_ln167_1_reg_3403_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : output_2_0_0_load_reg_4148);

assign select_ln176_3_fu_2928_p3 = ((select_ln167_1_reg_3403_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : output_3_0_0_q0);

assign select_ln176_4_fu_2935_p3 = ((select_ln167_1_reg_3403_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : output_4_0_0_q0);

assign select_ln176_5_fu_2942_p3 = ((select_ln167_1_reg_3403_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : output_5_0_0_q0);

assign select_ln176_fu_2907_p3 = ((select_ln167_1_reg_3403_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : output_0_0_0_load_reg_4118);

assign select_ln178_10_fu_1094_p3 = ((or_ln178_4_fu_1020_p2[0:0] === 1'b1) ? 3'd1 : or_ln178_reg_3299);

assign select_ln178_11_fu_1101_p3 = ((or_ln178_4_fu_1020_p2[0:0] === 1'b1) ? 3'd1 : lshr_ln178_2_reg_3304);

assign select_ln178_1_fu_959_p3 = ((icmp_ln166_reg_3323[0:0] === 1'b1) ? m_fu_946_p2 : m_0_reg_595);

assign select_ln178_2_fu_976_p3 = ((icmp_ln166_reg_3323[0:0] === 1'b1) ? icmp_ln181_3_fu_970_p2 : icmp_ln181_reg_3279);

assign select_ln178_3_fu_1000_p3 = ((icmp_ln166_reg_3323[0:0] === 1'b1) ? icmp_ln176_1_fu_994_p2 : icmp_ln176_reg_3289);

assign select_ln178_4_fu_1024_p3 = ((or_ln178_4_fu_1020_p2[0:0] === 1'b1) ? 5'd0 : ci_0_reg_643);

assign select_ln178_5_fu_1032_p3 = ((or_ln178_4_fu_1020_p2[0:0] === 1'b1) ? 7'd0 : co_0_reg_655);

assign select_ln178_6_fu_1040_p3 = ((and_ln178_2_reg_3351[0:0] === 1'b1) ? n_fu_1014_p2 : select_ln178_fu_952_p3);

assign select_ln178_7_fu_1053_p3 = ((and_ln178_2_reg_3351[0:0] === 1'b1) ? icmp_ln181_4_fu_1047_p2 : and_ln178_fu_982_p2);

assign select_ln178_8_fu_1080_p3 = ((and_ln178_2_reg_3351[0:0] === 1'b1) ? icmp_ln176_2_fu_1074_p2 : select_ln178_3_fu_1000_p3);

assign select_ln178_9_fu_1087_p3 = ((or_ln178_4_fu_1020_p2[0:0] === 1'b1) ? 4'd0 : lshr_ln_reg_3294);

assign select_ln178_fu_952_p3 = ((icmp_ln166_reg_3323[0:0] === 1'b1) ? 3'd0 : n_0_reg_619);

assign select_ln180_1_fu_3045_p3 = ((and_ln180_1_fu_3039_p2[0:0] === 1'b1) ? biased_1_3_reg_4428 : 32'd0);

assign select_ln180_2_fu_3100_p3 = ((and_ln180_2_fu_3094_p2[0:0] === 1'b1) ? biased_2_3_reg_4435 : 32'd0);

assign select_ln180_3_fu_3155_p3 = ((and_ln180_3_fu_3149_p2[0:0] === 1'b1) ? biased_311_3_reg_4442 : 32'd0);

assign select_ln180_4_fu_3210_p3 = ((and_ln180_4_fu_3204_p2[0:0] === 1'b1) ? biased_412_3_reg_4449 : 32'd0);

assign select_ln180_5_fu_3265_p3 = ((and_ln180_5_fu_3259_p2[0:0] === 1'b1) ? biased_5_3_reg_4456 : 32'd0);

assign select_ln180_fu_2990_p3 = ((and_ln180_fu_2984_p2[0:0] === 1'b1) ? biased_0_3_reg_4421 : 32'd0);

assign sext_ln178_1_fu_1527_p1 = $signed(tmp_23_fu_1520_p3);

assign sext_ln178_2_fu_1583_p1 = $signed(tmp_26_fu_1576_p3);

assign sext_ln178_3_fu_1665_p1 = $signed(tmp_29_fu_1657_p3);

assign sext_ln178_4_fu_1712_p1 = $signed(tmp_32_fu_1704_p3);

assign sext_ln178_5_fu_1759_p1 = $signed(tmp_56_fu_1751_p3);

assign sext_ln178_fu_1471_p1 = $signed(tmp_20_fu_1464_p3);

assign sext_ln179_fu_1880_p1 = tmp_19_reg_3479;

assign sext_ln181_1_fu_2095_p1 = tmp_25_reg_3491;

assign sext_ln181_2_fu_2205_p1 = tmp_28_reg_3558;

assign sext_ln181_3_fu_2344_p1 = tmp_31_reg_3569;

assign sext_ln181_4_fu_2483_p1 = tmp_55_reg_3580;

assign sext_ln181_fu_1985_p1 = tmp_22_reg_3485;

assign tmp_14_fu_822_p3 = ap_phi_mux_ci_0_phi_fu_647_p4[32'd3];

assign tmp_15_fu_1163_p3 = ci_fu_1129_p2[32'd3];

assign tmp_16_fu_1215_p3 = {{select_ln167_2_fu_1203_p3}, {2'd0}};

assign tmp_17_fu_1779_p3 = {{select_ln167_3_reg_3428}, {2'd0}};

assign tmp_18_fu_1831_p3 = {{select_ln167_4_reg_3446}, {2'd0}};

assign tmp_20_fu_1464_p3 = {{tmp_19_reg_3479}, {3'd0}};

assign tmp_21_fu_1489_p3 = {{add_ln178_16_fu_1479_p2}, {2'd0}};

assign tmp_23_fu_1520_p3 = {{tmp_22_reg_3485}, {3'd0}};

assign tmp_24_fu_1545_p3 = {{add_ln178_29_fu_1535_p2}, {2'd0}};

assign tmp_26_fu_1576_p3 = {{tmp_25_reg_3491}, {3'd0}};

assign tmp_27_fu_1601_p3 = {{add_ln178_42_fu_1591_p2}, {2'd0}};

assign tmp_28_fu_1647_p4 = {{mul_ln181_2_fu_1641_p2[15:10]}};

assign tmp_29_fu_1657_p3 = {{tmp_28_fu_1647_p4}, {3'd0}};

assign tmp_30_fu_2216_p3 = {{add_ln178_55_reg_3563}, {2'd0}};

assign tmp_31_fu_1694_p4 = {{mul_ln181_3_fu_1688_p2[15:10]}};

assign tmp_32_fu_1704_p3 = {{tmp_31_fu_1694_p4}, {3'd0}};

assign tmp_33_fu_2952_p4 = {{bitcast_ln180_fu_2949_p1[30:23]}};

assign tmp_35_fu_3007_p4 = {{bitcast_ln180_1_fu_3004_p1[30:23]}};

assign tmp_37_fu_3062_p4 = {{bitcast_ln180_2_fu_3059_p1[30:23]}};

assign tmp_39_fu_3117_p4 = {{bitcast_ln180_3_fu_3114_p1[30:23]}};

assign tmp_41_fu_3172_p4 = {{bitcast_ln180_4_fu_3169_p1[30:23]}};

assign tmp_43_fu_3227_p4 = {{bitcast_ln180_5_fu_3224_p1[30:23]}};

assign tmp_45_fu_1946_p4 = {{{{54'd0}, {sext_ln179_fu_1880_p1}}}, {select_ln167_4_reg_3446}};

assign tmp_46_fu_2017_p4 = {{{{54'd0}, {sext_ln181_fu_1985_p1}}}, {select_ln167_3_reg_3428}};

assign tmp_47_fu_2056_p4 = {{{{54'd0}, {sext_ln181_fu_1985_p1}}}, {select_ln167_4_reg_3446}};

assign tmp_48_fu_2127_p4 = {{{{54'd0}, {sext_ln181_1_fu_2095_p1}}}, {select_ln167_3_reg_3428}};

assign tmp_49_fu_2166_p4 = {{{{54'd0}, {sext_ln181_1_fu_2095_p1}}}, {select_ln167_4_reg_3446}};

assign tmp_50_fu_2266_p4 = {{{{54'd0}, {sext_ln181_2_fu_2205_p1}}}, {select_ln167_3_reg_3428}};

assign tmp_51_fu_2305_p4 = {{{{54'd0}, {sext_ln181_2_fu_2205_p1}}}, {select_ln167_4_reg_3446}};

assign tmp_52_fu_2355_p3 = {{add_ln178_68_reg_3574}, {2'd0}};

assign tmp_53_fu_2405_p4 = {{{{54'd0}, {sext_ln181_3_fu_2344_p1}}}, {select_ln167_3_reg_3428}};

assign tmp_54_fu_2444_p4 = {{{{54'd0}, {sext_ln181_3_fu_2344_p1}}}, {select_ln167_4_reg_3446}};

assign tmp_55_fu_1741_p4 = {{mul_ln181_4_fu_1735_p2[15:10]}};

assign tmp_56_fu_1751_p3 = {{tmp_55_fu_1741_p4}, {3'd0}};

assign tmp_57_fu_2494_p3 = {{add_ln178_81_reg_3585}, {2'd0}};

assign tmp_58_fu_2544_p4 = {{{{54'd0}, {sext_ln181_4_fu_2483_p1}}}, {select_ln167_3_reg_3428}};

assign tmp_59_fu_2583_p4 = {{{{54'd0}, {sext_ln181_4_fu_2483_p1}}}, {select_ln167_4_reg_3446}};

assign tmp_s_fu_1907_p4 = {{{{54'd0}, {sext_ln179_fu_1880_p1}}}, {select_ln167_3_reg_3428}};

assign trunc_ln167_1_fu_1143_p1 = ci_fu_1129_p2[3:0];

assign trunc_ln167_fu_802_p1 = ap_phi_mux_ci_0_phi_fu_647_p4[3:0];

assign trunc_ln176_1_fu_1147_p1 = ci_fu_1129_p2[2:0];

assign trunc_ln176_fu_806_p1 = ap_phi_mux_ci_0_phi_fu_647_p4[2:0];

assign trunc_ln178_10_fu_1977_p1 = add_ln178_26_fu_1972_p2[12:0];

assign trunc_ln178_11_fu_1981_p1 = add_ln178_26_fu_1972_p2[10:0];

assign trunc_ln178_12_fu_1568_p1 = add_ln178_31_fu_1563_p2[12:0];

assign trunc_ln178_13_fu_1572_p1 = add_ln178_31_fu_1563_p2[10:0];

assign trunc_ln178_14_fu_2048_p1 = add_ln178_35_fu_2043_p2[12:0];

assign trunc_ln178_15_fu_2052_p1 = add_ln178_35_fu_2043_p2[10:0];

assign trunc_ln178_16_fu_2087_p1 = add_ln178_39_fu_2082_p2[12:0];

assign trunc_ln178_17_fu_2091_p1 = add_ln178_39_fu_2082_p2[10:0];

assign trunc_ln178_18_fu_1624_p1 = add_ln178_44_fu_1619_p2[12:0];

assign trunc_ln178_19_fu_1628_p1 = add_ln178_44_fu_1619_p2[10:0];

assign trunc_ln178_1_fu_1243_p1 = add_ln178_5_fu_1233_p2[6:0];

assign trunc_ln178_20_fu_2158_p1 = add_ln178_48_fu_2153_p2[12:0];

assign trunc_ln178_21_fu_2162_p1 = add_ln178_48_fu_2153_p2[10:0];

assign trunc_ln178_22_fu_2197_p1 = add_ln178_52_fu_2192_p2[12:0];

assign trunc_ln178_23_fu_2201_p1 = add_ln178_52_fu_2192_p2[10:0];

assign trunc_ln178_24_fu_2238_p1 = add_ln178_57_fu_2233_p2[12:0];

assign trunc_ln178_25_fu_2242_p1 = add_ln178_57_fu_2233_p2[10:0];

assign trunc_ln178_26_fu_2297_p1 = add_ln178_61_fu_2292_p2[12:0];

assign trunc_ln178_27_fu_2301_p1 = add_ln178_61_fu_2292_p2[10:0];

assign trunc_ln178_28_fu_2336_p1 = add_ln178_65_fu_2331_p2[12:0];

assign trunc_ln178_29_fu_2340_p1 = add_ln178_65_fu_2331_p2[10:0];

assign trunc_ln178_2_fu_1801_p1 = add_ln178_9_fu_1796_p2[8:0];

assign trunc_ln178_30_fu_2377_p1 = add_ln178_70_fu_2372_p2[12:0];

assign trunc_ln178_31_fu_2381_p1 = add_ln178_70_fu_2372_p2[10:0];

assign trunc_ln178_32_fu_2436_p1 = add_ln178_74_fu_2431_p2[12:0];

assign trunc_ln178_33_fu_2440_p1 = add_ln178_74_fu_2431_p2[10:0];

assign trunc_ln178_34_fu_2475_p1 = add_ln178_78_fu_2470_p2[12:0];

assign trunc_ln178_35_fu_2479_p1 = add_ln178_78_fu_2470_p2[10:0];

assign trunc_ln178_36_fu_2516_p1 = add_ln178_83_fu_2511_p2[12:0];

assign trunc_ln178_37_fu_2520_p1 = add_ln178_83_fu_2511_p2[10:0];

assign trunc_ln178_38_fu_2575_p1 = add_ln178_87_fu_2570_p2[12:0];

assign trunc_ln178_39_fu_2579_p1 = add_ln178_87_fu_2570_p2[10:0];

assign trunc_ln178_3_fu_1805_p1 = add_ln178_9_fu_1796_p2[6:0];

assign trunc_ln178_40_fu_2614_p1 = add_ln178_91_fu_2609_p2[12:0];

assign trunc_ln178_41_fu_2618_p1 = add_ln178_91_fu_2609_p2[10:0];

assign trunc_ln178_4_fu_1853_p1 = add_ln178_13_fu_1848_p2[8:0];

assign trunc_ln178_5_fu_1857_p1 = add_ln178_13_fu_1848_p2[6:0];

assign trunc_ln178_6_fu_1512_p1 = add_ln178_18_fu_1507_p2[12:0];

assign trunc_ln178_7_fu_1516_p1 = add_ln178_18_fu_1507_p2[10:0];

assign trunc_ln178_8_fu_1938_p1 = add_ln178_22_fu_1933_p2[12:0];

assign trunc_ln178_9_fu_1942_p1 = add_ln178_22_fu_1933_p2[10:0];

assign trunc_ln178_fu_1239_p1 = add_ln178_5_fu_1233_p2[8:0];

assign trunc_ln178_mid1_fu_1247_p4 = {{ci_fu_1129_p2[3:1]}};

assign trunc_ln180_1_fu_3017_p1 = bitcast_ln180_1_fu_3004_p1[22:0];

assign trunc_ln180_2_fu_3072_p1 = bitcast_ln180_2_fu_3059_p1[22:0];

assign trunc_ln180_3_fu_3127_p1 = bitcast_ln180_3_fu_3114_p1[22:0];

assign trunc_ln180_4_fu_3182_p1 = bitcast_ln180_4_fu_3169_p1[22:0];

assign trunc_ln180_5_fu_3237_p1 = bitcast_ln180_5_fu_3224_p1[22:0];

assign trunc_ln180_fu_2962_p1 = bitcast_ln180_fu_2949_p1[22:0];

assign trunc_ln8_fu_854_p4 = {{ap_phi_mux_ci_0_phi_fu_647_p4[3:1]}};

assign xor_ln178_1_fu_1108_p2 = (icmp_ln167_reg_3346 ^ 1'd1);

assign xor_ln178_fu_922_p2 = (icmp_ln166_fu_916_p2 ^ 1'd1);

assign zext_ln167_1_fu_1211_p1 = select_ln167_2_fu_1203_p3;

assign zext_ln167_2_fu_1776_p1 = select_ln167_3_reg_3428;

assign zext_ln167_3_fu_1828_p1 = select_ln167_4_reg_3446;

assign zext_ln167_fu_1437_p1 = select_ln167_2_reg_3413;

assign zext_ln178_10_fu_1485_p1 = add_ln178_16_fu_1479_p2;

assign zext_ln178_11_fu_1497_p1 = tmp_21_fu_1489_p3;

assign zext_ln178_12_fu_1901_p1 = add_ln178_20_fu_1895_p2;

assign zext_ln178_13_fu_2647_p1 = add_ln178_24_fu_2642_p2;

assign zext_ln178_14_fu_2669_p1 = add_ln178_28_fu_2664_p2;

assign zext_ln178_15_fu_1531_p1 = $unsigned(sext_ln178_1_fu_1527_p1);

assign zext_ln178_16_fu_1541_p1 = add_ln178_29_fu_1535_p2;

assign zext_ln178_17_fu_1553_p1 = tmp_24_fu_1545_p3;

assign zext_ln178_18_fu_2011_p1 = add_ln178_33_fu_2005_p2;

assign zext_ln178_19_fu_2691_p1 = add_ln178_37_fu_2686_p2;

assign zext_ln178_1_fu_1773_p1 = select_ln178_6_reg_3389;

assign zext_ln178_20_fu_2713_p1 = add_ln178_41_fu_2708_p2;

assign zext_ln178_21_fu_1587_p1 = $unsigned(sext_ln178_2_fu_1583_p1);

assign zext_ln178_22_fu_1597_p1 = add_ln178_42_fu_1591_p2;

assign zext_ln178_23_fu_1609_p1 = tmp_27_fu_1601_p3;

assign zext_ln178_24_fu_2121_p1 = add_ln178_46_fu_2115_p2;

assign zext_ln178_25_fu_2735_p1 = add_ln178_50_fu_2730_p2;

assign zext_ln178_26_fu_2757_p1 = add_ln178_54_fu_2752_p2;

assign zext_ln178_27_fu_1669_p1 = $unsigned(sext_ln178_3_fu_1665_p1);

assign zext_ln178_28_fu_2213_p1 = add_ln178_55_reg_3563;

assign zext_ln178_29_fu_2223_p1 = tmp_30_fu_2216_p3;

assign zext_ln178_2_fu_1434_p1 = select_ln178_6_reg_3389;

assign zext_ln178_30_fu_2762_p1 = add_ln178_59_reg_3744;

assign zext_ln178_31_fu_2879_p1 = add_ln178_63_reg_3912;

assign zext_ln178_32_fu_2883_p1 = add_ln178_67_reg_3922;

assign zext_ln178_33_fu_1716_p1 = $unsigned(sext_ln178_4_fu_1712_p1);

assign zext_ln178_34_fu_2352_p1 = add_ln178_68_reg_3574;

assign zext_ln178_35_fu_2362_p1 = tmp_52_fu_2355_p3;

assign zext_ln178_36_fu_2801_p1 = add_ln178_72_reg_3775;

assign zext_ln178_37_fu_2887_p1 = add_ln178_76_reg_3932;

assign zext_ln178_38_fu_2891_p1 = add_ln178_80_reg_3942;

assign zext_ln178_39_fu_1763_p1 = $unsigned(sext_ln178_5_fu_1759_p1);

assign zext_ln178_3_fu_1223_p1 = tmp_16_fu_1215_p3;

assign zext_ln178_40_fu_2491_p1 = add_ln178_81_reg_3585;

assign zext_ln178_41_fu_2501_p1 = tmp_57_fu_2494_p3;

assign zext_ln178_42_fu_2840_p1 = add_ln178_85_reg_3806;

assign zext_ln178_43_fu_2895_p1 = add_ln178_89_reg_3952;

assign zext_ln178_44_fu_2899_p1 = add_ln178_93_reg_3962;

assign zext_ln178_4_fu_1458_p1 = add_ln178_7_fu_1452_p2;

assign zext_ln178_5_fu_1786_p1 = tmp_17_fu_1779_p3;

assign zext_ln178_6_fu_2622_p1 = add_ln178_11_reg_3607;

assign zext_ln178_7_fu_1838_p1 = tmp_18_fu_1831_p3;

assign zext_ln178_8_fu_2626_p1 = add_ln178_15_reg_3612;

assign zext_ln178_9_fu_1475_p1 = $unsigned(sext_ln178_fu_1471_p1);

assign zext_ln178_fu_966_p1 = select_ln178_1_fu_959_p3;

assign zext_ln179_fu_2903_p1 = $unsigned(sext_ln179_reg_3617_pp0_iter2_reg);

assign zext_ln181_1_fu_2098_p1 = $unsigned(sext_ln181_1_fu_2095_p1);

assign zext_ln181_2_fu_2208_p1 = $unsigned(sext_ln181_2_fu_2205_p1);

assign zext_ln181_3_fu_2347_p1 = $unsigned(sext_ln181_3_fu_2344_p1);

assign zext_ln181_4_fu_2486_p1 = $unsigned(sext_ln181_4_fu_2483_p1);

assign zext_ln181_fu_1988_p1 = $unsigned(sext_ln181_fu_1985_p1);

always @ (posedge ap_clk) begin
    or_ln178_reg_3299[0] <= 1'b1;
    zext_ln178_reg_3365[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    select_ln167_3_reg_3428[0] <= 1'b1;
    select_ln167_4_reg_3446[0] <= 1'b1;
    zext_ln178_2_reg_3512[8:3] <= 6'b000000;
    zext_ln178_1_reg_3591[12:3] <= 10'b0000000000;
    zext_ln179_reg_4107[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln179_reg_4107_pp0_iter4_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln179_reg_4107_pp0_iter5_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln179_reg_4107_pp0_iter6_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln179_reg_4107_pp0_iter7_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln179_reg_4107_pp0_iter8_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln179_reg_4107_pp0_iter9_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln179_reg_4107_pp0_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln179_reg_4107_pp0_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln179_reg_4107_pp0_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //convolution5
