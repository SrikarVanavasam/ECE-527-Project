// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convolution3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        input_1_address0,
        input_1_ce0,
        input_1_q0,
        input_2_address0,
        input_2_ce0,
        input_2_q0,
        input_3_address0,
        input_3_ce0,
        input_3_q0,
        input_4_address0,
        input_4_ce0,
        input_4_q0,
        input_5_address0,
        input_5_ce0,
        input_5_q0,
        output_0_address0,
        output_0_ce0,
        output_0_q0,
        output_0_address1,
        output_0_ce1,
        output_0_we1,
        output_0_d1,
        output_1_address0,
        output_1_ce0,
        output_1_q0,
        output_1_address1,
        output_1_ce1,
        output_1_we1,
        output_1_d1
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state48 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [7:0] input_0_address0;
output   input_0_ce0;
input  [31:0] input_0_q0;
output  [7:0] input_1_address0;
output   input_1_ce0;
input  [31:0] input_1_q0;
output  [7:0] input_2_address0;
output   input_2_ce0;
input  [31:0] input_2_q0;
output  [7:0] input_3_address0;
output   input_3_ce0;
input  [31:0] input_3_q0;
output  [7:0] input_4_address0;
output   input_4_ce0;
input  [31:0] input_4_q0;
output  [7:0] input_5_address0;
output   input_5_ce0;
input  [31:0] input_5_q0;
output  [9:0] output_0_address0;
output   output_0_ce0;
input  [31:0] output_0_q0;
output  [9:0] output_0_address1;
output   output_0_ce1;
output   output_0_we1;
output  [31:0] output_0_d1;
output  [9:0] output_1_address0;
output   output_1_ce0;
input  [31:0] output_1_q0;
output  [9:0] output_1_address1;
output   output_1_ce1;
output   output_1_we1;
output  [31:0] output_1_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_0_ce0;
reg input_1_ce0;
reg input_2_ce0;
reg input_3_ce0;
reg input_4_ce0;
reg input_5_ce0;
reg output_0_ce0;
reg output_0_ce1;
reg output_0_we1;
reg output_1_ce0;
reg output_1_ce1;
reg output_1_we1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] bias_conv3_buffer_0_address0;
reg    bias_conv3_buffer_0_ce0;
wire   [31:0] bias_conv3_buffer_0_q0;
wire   [7:0] weights_conv3_buffer_11_address0;
reg    weights_conv3_buffer_11_ce0;
wire   [31:0] weights_conv3_buffer_11_q0;
wire   [7:0] weights_conv3_buffer_10_address0;
reg    weights_conv3_buffer_10_ce0;
wire   [31:0] weights_conv3_buffer_10_q0;
wire   [7:0] weights_conv3_buffer_9_address0;
reg    weights_conv3_buffer_9_ce0;
wire   [31:0] weights_conv3_buffer_9_q0;
wire   [7:0] weights_conv3_buffer_8_address0;
reg    weights_conv3_buffer_8_ce0;
wire   [31:0] weights_conv3_buffer_8_q0;
wire   [7:0] weights_conv3_buffer_7_address0;
reg    weights_conv3_buffer_7_ce0;
wire   [31:0] weights_conv3_buffer_7_q0;
wire   [7:0] weights_conv3_buffer_6_address0;
reg    weights_conv3_buffer_6_ce0;
wire   [31:0] weights_conv3_buffer_6_q0;
wire   [2:0] bias_conv3_buffer_1_address0;
reg    bias_conv3_buffer_1_ce0;
wire   [31:0] bias_conv3_buffer_1_q0;
wire   [7:0] weights_conv3_buffer_5_address0;
reg    weights_conv3_buffer_5_ce0;
wire   [31:0] weights_conv3_buffer_5_q0;
wire   [7:0] weights_conv3_buffer_4_address0;
reg    weights_conv3_buffer_4_ce0;
wire   [31:0] weights_conv3_buffer_4_q0;
wire   [7:0] weights_conv3_buffer_3_address0;
reg    weights_conv3_buffer_3_ce0;
wire   [31:0] weights_conv3_buffer_3_q0;
wire   [7:0] weights_conv3_buffer_2_address0;
reg    weights_conv3_buffer_2_ce0;
wire   [31:0] weights_conv3_buffer_2_q0;
wire   [7:0] weights_conv3_buffer_1_address0;
reg    weights_conv3_buffer_1_ce0;
wire   [31:0] weights_conv3_buffer_1_q0;
wire   [7:0] weights_conv3_buffer_address0;
reg    weights_conv3_buffer_ce0;
wire   [31:0] weights_conv3_buffer_q0;
reg   [14:0] indvar_flatten107_reg_436;
reg   [12:0] indvar_flatten55_reg_447;
reg   [10:0] indvar_flatten23_reg_458;
reg   [2:0] m_0_reg_469;
reg   [2:0] n_0_reg_480;
reg   [3:0] h_0_reg_491;
reg   [7:0] indvar_flatten_reg_502;
reg   [3:0] w_0_reg_513;
reg   [4:0] co_0_0_reg_524;
wire   [0:0] icmp_ln84_fu_649_p2;
reg   [0:0] icmp_ln84_reg_1414;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
wire    ap_block_state39_pp0_stage0_iter37;
wire    ap_block_state40_pp0_stage0_iter38;
wire    ap_block_state41_pp0_stage0_iter39;
wire    ap_block_state42_pp0_stage0_iter40;
wire    ap_block_state43_pp0_stage0_iter41;
wire    ap_block_state44_pp0_stage0_iter42;
wire    ap_block_state45_pp0_stage0_iter43;
wire    ap_block_state46_pp0_stage0_iter44;
wire    ap_block_state47_pp0_stage0_iter45;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter1_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter2_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter3_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter4_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter5_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter6_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter7_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter8_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter9_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter10_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter11_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter12_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter13_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter14_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter15_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter16_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter17_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter18_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter19_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter20_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter21_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter22_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter23_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter24_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter25_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter26_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter27_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter28_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter29_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter30_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter31_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter32_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter33_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter34_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter35_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter36_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter37_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter38_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter39_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter40_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter41_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter42_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter43_reg;
reg   [0:0] icmp_ln84_reg_1414_pp0_iter44_reg;
wire   [14:0] add_ln84_fu_655_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln85_fu_661_p2;
reg   [0:0] icmp_ln85_reg_1423;
reg   [0:0] icmp_ln85_reg_1423_pp0_iter1_reg;
reg   [0:0] icmp_ln85_reg_1423_pp0_iter2_reg;
reg   [0:0] icmp_ln85_reg_1423_pp0_iter3_reg;
reg   [0:0] icmp_ln85_reg_1423_pp0_iter4_reg;
reg   [0:0] icmp_ln85_reg_1423_pp0_iter5_reg;
reg   [0:0] icmp_ln85_reg_1423_pp0_iter6_reg;
wire   [0:0] xor_ln84_fu_667_p2;
reg   [0:0] xor_ln84_reg_1435;
wire   [0:0] icmp_ln86_fu_673_p2;
reg   [0:0] icmp_ln86_reg_1442;
wire   [0:0] and_ln84_3_fu_679_p2;
reg   [0:0] and_ln84_3_reg_1447;
reg   [0:0] and_ln84_3_reg_1447_pp0_iter1_reg;
reg   [0:0] and_ln84_3_reg_1447_pp0_iter2_reg;
reg   [0:0] and_ln84_3_reg_1447_pp0_iter3_reg;
reg   [0:0] and_ln84_3_reg_1447_pp0_iter4_reg;
reg   [0:0] and_ln84_3_reg_1447_pp0_iter5_reg;
reg   [0:0] and_ln84_3_reg_1447_pp0_iter6_reg;
wire   [0:0] or_ln85_fu_685_p2;
reg   [0:0] or_ln85_reg_1457;
wire   [10:0] select_ln86_fu_697_p3;
wire   [12:0] select_ln85_6_fu_711_p3;
wire   [0:0] icmp_ln95_fu_745_p2;
reg   [0:0] icmp_ln95_reg_1473;
reg   [0:0] icmp_ln95_reg_1473_pp0_iter2_reg;
reg   [0:0] icmp_ln95_reg_1473_pp0_iter3_reg;
reg   [0:0] icmp_ln95_reg_1473_pp0_iter4_reg;
reg   [0:0] icmp_ln95_reg_1473_pp0_iter5_reg;
reg   [0:0] icmp_ln95_reg_1473_pp0_iter6_reg;
wire   [2:0] m_fu_769_p2;
reg   [2:0] m_reg_1478;
reg   [2:0] m_reg_1478_pp0_iter2_reg;
reg   [2:0] m_reg_1478_pp0_iter3_reg;
reg   [2:0] m_reg_1478_pp0_iter4_reg;
reg   [2:0] m_reg_1478_pp0_iter5_reg;
reg   [2:0] m_reg_1478_pp0_iter6_reg;
wire   [2:0] select_ln84_1_fu_782_p3;
reg   [2:0] select_ln84_1_reg_1483;
reg    ap_enable_reg_pp0_iter1;
reg   [2:0] select_ln84_1_reg_1483_pp0_iter2_reg;
reg   [2:0] select_ln84_1_reg_1483_pp0_iter3_reg;
reg   [2:0] select_ln84_1_reg_1483_pp0_iter4_reg;
reg   [2:0] select_ln84_1_reg_1483_pp0_iter5_reg;
reg   [2:0] select_ln84_1_reg_1483_pp0_iter6_reg;
wire   [2:0] n_fu_855_p2;
reg   [2:0] n_reg_1489;
reg   [2:0] n_reg_1489_pp0_iter2_reg;
reg   [2:0] n_reg_1489_pp0_iter3_reg;
reg   [2:0] n_reg_1489_pp0_iter4_reg;
reg   [2:0] n_reg_1489_pp0_iter5_reg;
reg   [2:0] n_reg_1489_pp0_iter6_reg;
wire   [2:0] select_ln85_1_fu_868_p3;
reg   [2:0] select_ln85_1_reg_1494;
wire   [0:0] select_ln85_3_fu_895_p3;
reg   [0:0] select_ln85_3_reg_1500;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter2_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter3_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter4_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter5_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter6_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter7_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter8_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter9_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter10_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter11_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter12_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter13_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter14_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter15_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter16_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter17_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter18_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter19_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter20_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter21_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter22_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter23_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter24_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter25_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter26_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter27_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter28_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter29_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter30_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter31_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter32_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter33_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter34_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter35_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter36_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter37_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter38_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter39_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter40_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter41_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter42_reg;
reg   [0:0] select_ln85_3_reg_1500_pp0_iter43_reg;
wire   [3:0] select_ln97_1_fu_968_p3;
reg   [3:0] select_ln97_1_reg_1506;
wire   [3:0] select_ln97_2_fu_976_p3;
reg   [3:0] select_ln97_2_reg_1512;
reg   [3:0] select_ln97_2_reg_1512_pp0_iter2_reg;
reg   [3:0] select_ln97_2_reg_1512_pp0_iter3_reg;
reg   [3:0] select_ln97_2_reg_1512_pp0_iter4_reg;
wire   [3:0] select_ln97_3_fu_984_p3;
reg   [3:0] select_ln97_3_reg_1518;
wire   [0:0] and_ln97_fu_998_p2;
reg   [0:0] and_ln97_reg_1523;
wire   [3:0] add_ln97_3_fu_1029_p2;
reg   [3:0] add_ln97_3_reg_1528;
wire   [3:0] select_ln97_6_fu_1035_p3;
reg   [3:0] select_ln97_6_reg_1533;
reg   [3:0] select_ln97_6_reg_1533_pp0_iter2_reg;
reg   [3:0] select_ln97_6_reg_1533_pp0_iter3_reg;
reg   [3:0] select_ln97_6_reg_1533_pp0_iter4_reg;
wire   [3:0] lshr_ln_fu_1043_p4;
reg   [3:0] lshr_ln_reg_1539;
reg   [3:0] lshr_ln_reg_1539_pp0_iter2_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter3_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter4_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter5_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter6_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter7_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter8_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter9_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter10_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter11_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter12_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter13_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter14_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter15_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter16_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter17_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter18_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter19_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter20_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter21_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter22_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter23_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter24_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter25_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter26_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter27_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter28_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter29_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter30_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter31_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter32_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter33_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter34_reg;
reg   [3:0] lshr_ln_reg_1539_pp0_iter35_reg;
wire   [6:0] add_ln97_6_fu_1075_p2;
reg   [6:0] add_ln97_6_reg_1546;
wire   [4:0] add_ln88_fu_1081_p2;
wire   [7:0] select_ln87_fu_1093_p3;
wire   [63:0] zext_ln97_4_fu_1147_p1;
reg   [63:0] zext_ln97_4_reg_1562;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter3_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter4_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter5_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter6_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter7_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter8_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter9_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter10_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter11_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter12_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter13_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter14_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter15_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter16_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter17_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter18_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter19_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter20_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter21_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter22_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter23_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter24_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter25_reg;
reg   [63:0] zext_ln97_4_reg_1562_pp0_iter26_reg;
wire   [63:0] zext_ln97_9_fu_1174_p1;
reg   [63:0] zext_ln97_9_reg_1576;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter3_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter4_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter5_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter6_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter7_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter8_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter9_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter10_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter11_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter12_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter13_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter14_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter15_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter16_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter17_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter18_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter19_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter20_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter21_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter22_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter23_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter24_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter25_reg;
reg   [63:0] zext_ln97_9_reg_1576_pp0_iter26_reg;
reg   [31:0] weights_conv3_buffer_24_reg_1600;
reg   [31:0] input_0_load_reg_1605;
reg   [31:0] weights_conv3_buffer_30_reg_1611;
wire   [10:0] add_ln100_3_fu_1246_p2;
reg   [10:0] add_ln100_3_reg_1616;
reg   [9:0] output_0_addr_reg_1621;
reg   [9:0] output_0_addr_reg_1621_pp0_iter7_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter8_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter9_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter10_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter11_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter12_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter13_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter14_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter15_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter16_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter17_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter18_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter19_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter20_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter21_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter22_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter23_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter24_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter25_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter26_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter27_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter28_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter29_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter30_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter31_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter32_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter33_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter34_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter35_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter36_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter37_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter38_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter39_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter40_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter41_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter42_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter43_reg;
reg   [9:0] output_0_addr_reg_1621_pp0_iter44_reg;
reg   [9:0] output_1_addr_reg_1627;
reg   [9:0] output_1_addr_reg_1627_pp0_iter7_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter8_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter9_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter10_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter11_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter12_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter13_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter14_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter15_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter16_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter17_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter18_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter19_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter20_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter21_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter22_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter23_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter24_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter25_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter26_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter27_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter28_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter29_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter30_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter31_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter32_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter33_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter34_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter35_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter36_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter37_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter38_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter39_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter40_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter41_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter42_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter43_reg;
reg   [9:0] output_1_addr_reg_1627_pp0_iter44_reg;
wire   [31:0] select_ln95_fu_1285_p3;
reg   [31:0] select_ln95_reg_1648;
wire   [31:0] grp_fu_591_p2;
reg   [31:0] tmp2_reg_1653;
wire   [31:0] select_ln95_1_fu_1293_p3;
reg   [31:0] select_ln95_1_reg_1658;
wire   [31:0] grp_fu_595_p2;
reg   [31:0] tmp_1_reg_1663;
reg   [31:0] weights_conv3_buffer_25_reg_1668;
reg   [31:0] input_1_load_reg_1673;
reg   [31:0] weights_conv3_buffer_31_reg_1679;
wire   [31:0] grp_fu_535_p2;
reg   [31:0] acc_reg_1699;
wire   [31:0] grp_fu_599_p2;
reg   [31:0] tmp_0_1_reg_1704;
wire   [31:0] grp_fu_539_p2;
reg   [31:0] acc_1_reg_1709;
wire   [31:0] grp_fu_603_p2;
reg   [31:0] tmp_1_1_reg_1714;
reg   [31:0] weights_conv3_buffer_26_reg_1719;
reg   [31:0] input_2_load_reg_1724;
reg   [31:0] weights_conv3_buffer_32_reg_1730;
wire   [31:0] grp_fu_543_p2;
reg   [31:0] acc_0_1_reg_1750;
wire   [31:0] grp_fu_607_p2;
reg   [31:0] tmp_0_2_reg_1755;
wire   [31:0] grp_fu_547_p2;
reg   [31:0] acc_1_1_reg_1760;
wire   [31:0] grp_fu_611_p2;
reg   [31:0] tmp_1_2_reg_1765;
reg   [31:0] weights_conv3_buffer_27_reg_1770;
reg   [31:0] input_3_load_reg_1775;
reg   [31:0] weights_conv3_buffer_33_reg_1781;
wire   [31:0] grp_fu_551_p2;
reg   [31:0] acc_0_2_reg_1801;
wire   [31:0] grp_fu_615_p2;
reg   [31:0] tmp_0_3_reg_1806;
wire   [31:0] grp_fu_555_p2;
reg   [31:0] acc_1_2_reg_1811;
wire   [31:0] grp_fu_619_p2;
reg   [31:0] tmp_1_3_reg_1816;
reg   [31:0] weights_conv3_buffer_28_reg_1821;
reg   [31:0] input_4_load_reg_1826;
reg   [31:0] weights_conv3_buffer_34_reg_1832;
wire   [31:0] grp_fu_559_p2;
reg   [31:0] acc_0_3_reg_1852;
wire   [31:0] grp_fu_623_p2;
reg   [31:0] tmp_0_4_reg_1857;
wire   [31:0] grp_fu_563_p2;
reg   [31:0] acc_1_3_reg_1862;
wire   [31:0] grp_fu_627_p2;
reg   [31:0] tmp_1_4_reg_1867;
reg   [31:0] weights_conv3_buffer_29_reg_1872;
reg   [31:0] input_5_load_reg_1877;
reg   [31:0] weights_conv3_buffer_35_reg_1883;
wire   [31:0] grp_fu_567_p2;
reg   [31:0] acc_0_4_reg_1888;
wire   [31:0] grp_fu_631_p2;
reg   [31:0] tmp_0_5_reg_1893;
wire   [31:0] grp_fu_571_p2;
reg   [31:0] acc_1_4_reg_1898;
wire   [31:0] grp_fu_635_p2;
reg   [31:0] tmp_1_5_reg_1903;
reg   [31:0] bias_conv3_buffer_0_1_reg_1918;
wire   [31:0] grp_fu_575_p2;
reg   [31:0] acc_0_5_reg_1923;
reg   [31:0] acc_0_5_reg_1923_pp0_iter38_reg;
reg   [31:0] acc_0_5_reg_1923_pp0_iter39_reg;
reg   [31:0] acc_0_5_reg_1923_pp0_iter40_reg;
reg   [31:0] acc_0_5_reg_1923_pp0_iter41_reg;
reg   [31:0] acc_0_5_reg_1923_pp0_iter42_reg;
reg   [31:0] acc_0_5_reg_1923_pp0_iter43_reg;
reg   [31:0] bias_conv3_buffer_1_1_reg_1929;
wire   [31:0] grp_fu_579_p2;
reg   [31:0] acc_1_5_reg_1934;
reg   [31:0] acc_1_5_reg_1934_pp0_iter38_reg;
reg   [31:0] acc_1_5_reg_1934_pp0_iter39_reg;
reg   [31:0] acc_1_5_reg_1934_pp0_iter40_reg;
reg   [31:0] acc_1_5_reg_1934_pp0_iter41_reg;
reg   [31:0] acc_1_5_reg_1934_pp0_iter42_reg;
reg   [31:0] acc_1_5_reg_1934_pp0_iter43_reg;
wire   [31:0] grp_fu_583_p2;
reg   [31:0] biased_0_5_reg_1940;
reg   [31:0] biased_0_5_reg_1940_pp0_iter43_reg;
wire   [31:0] grp_fu_587_p2;
reg   [31:0] biased_1_5_reg_1947;
reg   [31:0] biased_1_5_reg_1947_pp0_iter43_reg;
wire   [31:0] select_ln100_fu_1354_p3;
reg   [31:0] select_ln100_reg_1954;
wire   [31:0] select_ln100_1_fu_1408_p3;
reg   [31:0] select_ln100_1_reg_1959;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state3;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg   [2:0] ap_phi_mux_m_0_phi_fu_473_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_n_0_phi_fu_484_p4;
reg   [3:0] ap_phi_mux_h_0_phi_fu_495_p4;
reg   [3:0] ap_phi_mux_w_0_phi_fu_517_p4;
wire   [63:0] zext_ln100_4_fu_1252_p1;
wire   [63:0] zext_ln98_fu_1301_p1;
wire   [10:0] add_ln86_1_fu_691_p2;
wire   [12:0] add_ln85_1_fu_705_p2;
wire   [2:0] or_ln95_fu_739_p2;
wire   [0:0] icmp_ln100_fu_723_p2;
wire   [0:0] icmp_ln100_1_fu_733_p2;
wire   [3:0] zext_ln84_fu_719_p1;
wire   [3:0] zext_ln85_fu_729_p1;
wire   [0:0] icmp_ln100_2_fu_797_p2;
wire   [0:0] and_ln100_fu_751_p2;
wire   [3:0] zext_ln84_2_fu_815_p1;
wire   [3:0] add_ln97_fu_757_p2;
wire   [3:0] add_ln97_1_fu_763_p2;
wire   [0:0] icmp_ln88_fu_833_p2;
wire   [0:0] icmp_ln87_fu_844_p2;
wire   [2:0] select_ln84_fu_775_p3;
wire   [0:0] select_ln84_2_fu_803_p3;
wire   [0:0] icmp_ln100_3_fu_883_p2;
wire   [0:0] and_ln100_1_fu_889_p2;
wire   [0:0] and_ln84_fu_810_p2;
wire   [3:0] zext_ln84_1_fu_789_p1;
wire   [3:0] select_ln84_4_fu_819_p3;
wire   [3:0] zext_ln85_2_fu_879_p1;
wire   [3:0] select_ln84_5_fu_826_p3;
wire   [0:0] xor_ln85_fu_916_p2;
wire   [0:0] and_ln84_1_fu_839_p2;
wire   [0:0] or_ln85_1_fu_921_p2;
wire   [0:0] and_ln84_2_fu_850_p2;
wire   [3:0] select_ln85_fu_861_p3;
wire   [0:0] and_ln85_1_fu_932_p2;
wire   [0:0] or_ln97_fu_944_p2;
wire   [0:0] or_ln97_1_fu_949_p2;
wire   [3:0] h_fu_938_p2;
wire   [3:0] add_ln97_2_fu_962_p2;
wire   [3:0] select_ln85_4_fu_902_p3;
wire   [3:0] zext_ln85_1_fu_875_p1;
wire   [3:0] select_ln85_5_fu_909_p3;
wire   [0:0] and_ln85_fu_926_p2;
wire   [0:0] xor_ln97_fu_992_p2;
wire   [3:0] select_ln97_fu_954_p3;
wire   [0:0] or_ln97_2_fu_1010_p2;
wire   [0:0] or_ln97_3_fu_1016_p2;
wire   [3:0] w_fu_1004_p2;
wire   [4:0] select_ln97_4_fu_1021_p3;
wire   [5:0] tmp_60_fu_1057_p3;
wire   [6:0] zext_ln97_6_fu_1053_p1;
wire   [6:0] zext_ln97_7_fu_1065_p1;
wire   [6:0] add_ln97_5_fu_1069_p2;
wire   [6:0] zext_ln100_fu_793_p1;
wire   [7:0] add_ln87_1_fu_1087_p2;
wire   [7:0] tmp_58_fu_1104_p3;
wire   [4:0] tmp_59_fu_1115_p3;
wire   [8:0] zext_ln97_fu_1111_p1;
wire   [8:0] zext_ln97_1_fu_1122_p1;
wire   [3:0] select_ln97_5_fu_1132_p3;
wire   [8:0] sub_ln97_fu_1126_p2;
wire   [8:0] zext_ln97_3_fu_1137_p1;
wire   [8:0] add_ln97_4_fu_1141_p2;
wire   [8:0] zext_ln97_8_fu_1152_p1;
wire   [8:0] p_shl46_cast_fu_1155_p3;
wire   [8:0] add_ln97_7_fu_1162_p2;
wire   [8:0] zext_ln85_3_fu_1101_p1;
wire   [8:0] add_ln97_8_fu_1168_p2;
wire   [6:0] tmp_61_fu_1186_p3;
wire   [4:0] tmp_62_fu_1197_p3;
wire   [7:0] zext_ln100_2_fu_1204_p1;
wire   [7:0] zext_ln100_1_fu_1193_p1;
wire   [7:0] add_ln100_fu_1208_p2;
wire   [7:0] zext_ln97_2_fu_1180_p1;
wire   [7:0] add_ln100_1_fu_1214_p2;
wire   [8:0] tmp_63_fu_1228_p3;
wire   [10:0] zext_ln100_3_fu_1236_p1;
wire   [10:0] p_shl_cast_fu_1220_p3;
wire   [10:0] add_ln100_2_fu_1240_p2;
wire   [10:0] zext_ln97_5_fu_1183_p1;
wire   [0:0] icmp_ln95_1_fu_1257_p2;
wire   [2:0] or_ln95_1_fu_1268_p2;
wire   [0:0] icmp_ln95_2_fu_1272_p2;
wire   [0:0] select_ln84_3_fu_1262_p3;
wire   [0:0] select_ln85_2_fu_1278_p3;
wire   [31:0] bitcast_ln99_fu_1306_p1;
wire   [7:0] tmp_s_fu_1309_p4;
wire   [22:0] trunc_ln99_fu_1319_p1;
wire   [0:0] icmp_ln99_1_fu_1329_p2;
wire   [0:0] icmp_ln99_fu_1323_p2;
wire   [0:0] or_ln99_fu_1335_p2;
wire   [0:0] grp_fu_639_p2;
wire   [0:0] and_ln99_fu_1341_p2;
wire   [31:0] select_ln99_fu_1347_p3;
wire   [31:0] bitcast_ln99_1_fu_1360_p1;
wire   [7:0] tmp_46_fu_1363_p4;
wire   [22:0] trunc_ln99_1_fu_1373_p1;
wire   [0:0] icmp_ln99_3_fu_1383_p2;
wire   [0:0] icmp_ln99_2_fu_1377_p2;
wire   [0:0] or_ln99_1_fu_1389_p2;
wire   [0:0] grp_fu_644_p2;
wire   [0:0] and_ln99_1_fu_1395_p2;
wire   [31:0] select_ln99_1_fu_1401_p3;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state48;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
end

convolution3_biaskbM #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
bias_conv3_buffer_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_conv3_buffer_0_address0),
    .ce0(bias_conv3_buffer_0_ce0),
    .q0(bias_conv3_buffer_0_q0)
);

convolution3_weiglbW #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_11_address0),
    .ce0(weights_conv3_buffer_11_ce0),
    .q0(weights_conv3_buffer_11_q0)
);

convolution3_weigmb6 #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_10_address0),
    .ce0(weights_conv3_buffer_10_ce0),
    .q0(weights_conv3_buffer_10_q0)
);

convolution3_weigncg #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_9_address0),
    .ce0(weights_conv3_buffer_9_ce0),
    .q0(weights_conv3_buffer_9_q0)
);

convolution3_weigocq #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_8_address0),
    .ce0(weights_conv3_buffer_8_ce0),
    .q0(weights_conv3_buffer_8_q0)
);

convolution3_weigpcA #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_7_address0),
    .ce0(weights_conv3_buffer_7_ce0),
    .q0(weights_conv3_buffer_7_q0)
);

convolution3_weigqcK #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_6_address0),
    .ce0(weights_conv3_buffer_6_ce0),
    .q0(weights_conv3_buffer_6_q0)
);

convolution3_biasrcU #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
bias_conv3_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_conv3_buffer_1_address0),
    .ce0(bias_conv3_buffer_1_ce0),
    .q0(bias_conv3_buffer_1_q0)
);

convolution3_weigsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_5_address0),
    .ce0(weights_conv3_buffer_5_ce0),
    .q0(weights_conv3_buffer_5_q0)
);

convolution3_weigtde #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_4_address0),
    .ce0(weights_conv3_buffer_4_ce0),
    .q0(weights_conv3_buffer_4_q0)
);

convolution3_weigudo #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_3_address0),
    .ce0(weights_conv3_buffer_3_ce0),
    .q0(weights_conv3_buffer_3_q0)
);

convolution3_weigvdy #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_2_address0),
    .ce0(weights_conv3_buffer_2_ce0),
    .q0(weights_conv3_buffer_2_q0)
);

convolution3_weigwdI #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_1_address0),
    .ce0(weights_conv3_buffer_1_ce0),
    .q0(weights_conv3_buffer_1_q0)
);

convolution3_weigxdS #(
    .DataWidth( 32 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
weights_conv3_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv3_buffer_address0),
    .ce0(weights_conv3_buffer_ce0),
    .q0(weights_conv3_buffer_q0)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln95_reg_1648),
    .din1(tmp2_reg_1653),
    .ce(1'b1),
    .dout(grp_fu_535_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln95_1_reg_1658),
    .din1(tmp_1_reg_1663),
    .ce(1'b1),
    .dout(grp_fu_539_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_reg_1699),
    .din1(tmp_0_1_reg_1704),
    .ce(1'b1),
    .dout(grp_fu_543_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_1_reg_1709),
    .din1(tmp_1_1_reg_1714),
    .ce(1'b1),
    .dout(grp_fu_547_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_0_1_reg_1750),
    .din1(tmp_0_2_reg_1755),
    .ce(1'b1),
    .dout(grp_fu_551_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_1_1_reg_1760),
    .din1(tmp_1_2_reg_1765),
    .ce(1'b1),
    .dout(grp_fu_555_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_0_2_reg_1801),
    .din1(tmp_0_3_reg_1806),
    .ce(1'b1),
    .dout(grp_fu_559_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_1_2_reg_1811),
    .din1(tmp_1_3_reg_1816),
    .ce(1'b1),
    .dout(grp_fu_563_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_0_3_reg_1852),
    .din1(tmp_0_4_reg_1857),
    .ce(1'b1),
    .dout(grp_fu_567_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_1_3_reg_1862),
    .din1(tmp_1_4_reg_1867),
    .ce(1'b1),
    .dout(grp_fu_571_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_0_4_reg_1888),
    .din1(tmp_0_5_reg_1893),
    .ce(1'b1),
    .dout(grp_fu_575_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_1_4_reg_1898),
    .din1(tmp_1_5_reg_1903),
    .ce(1'b1),
    .dout(grp_fu_579_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_0_5_reg_1923),
    .din1(bias_conv3_buffer_0_1_reg_1918),
    .ce(1'b1),
    .dout(grp_fu_583_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_1_5_reg_1934),
    .din1(bias_conv3_buffer_1_1_reg_1929),
    .ce(1'b1),
    .dout(grp_fu_587_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_24_reg_1600),
    .din1(input_0_load_reg_1605),
    .ce(1'b1),
    .dout(grp_fu_591_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_30_reg_1611),
    .din1(input_0_load_reg_1605),
    .ce(1'b1),
    .dout(grp_fu_595_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_25_reg_1668),
    .din1(input_1_load_reg_1673),
    .ce(1'b1),
    .dout(grp_fu_599_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_31_reg_1679),
    .din1(input_1_load_reg_1673),
    .ce(1'b1),
    .dout(grp_fu_603_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_26_reg_1719),
    .din1(input_2_load_reg_1724),
    .ce(1'b1),
    .dout(grp_fu_607_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_32_reg_1730),
    .din1(input_2_load_reg_1724),
    .ce(1'b1),
    .dout(grp_fu_611_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_27_reg_1770),
    .din1(input_3_load_reg_1775),
    .ce(1'b1),
    .dout(grp_fu_615_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_33_reg_1781),
    .din1(input_3_load_reg_1775),
    .ce(1'b1),
    .dout(grp_fu_619_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_28_reg_1821),
    .din1(input_4_load_reg_1826),
    .ce(1'b1),
    .dout(grp_fu_623_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_34_reg_1832),
    .din1(input_4_load_reg_1826),
    .ce(1'b1),
    .dout(grp_fu_627_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_29_reg_1872),
    .din1(input_5_load_reg_1877),
    .ce(1'b1),
    .dout(grp_fu_631_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv3_buffer_35_reg_1883),
    .din1(input_5_load_reg_1877),
    .ce(1'b1),
    .dout(grp_fu_635_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(biased_0_5_reg_1940),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_639_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(biased_1_5_reg_1947),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_644_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_fu_649_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state3)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter45 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_1414 == 1'd0))) begin
        co_0_0_reg_524 <= add_ln88_fu_1081_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        co_0_0_reg_524 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        h_0_reg_491 <= select_ln97_2_reg_1512;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_0_reg_491 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_fu_649_p2 == 1'd0))) begin
        indvar_flatten107_reg_436 <= add_ln84_fu_655_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten107_reg_436 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_fu_649_p2 == 1'd0))) begin
        indvar_flatten23_reg_458 <= select_ln86_fu_697_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten23_reg_458 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_fu_649_p2 == 1'd0))) begin
        indvar_flatten55_reg_447 <= select_ln85_6_fu_711_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten55_reg_447 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_1414 == 1'd0))) begin
        indvar_flatten_reg_502 <= select_ln87_fu_1093_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_502 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        m_0_reg_469 <= select_ln84_1_reg_1483;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_0_reg_469 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        n_0_reg_480 <= select_ln85_1_reg_1494;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_0_reg_480 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_0_reg_513 <= select_ln97_6_reg_1533;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        w_0_reg_513 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_0_1_reg_1750 <= grp_fu_543_p2;
        acc_1_1_reg_1760 <= grp_fu_547_p2;
        tmp_0_2_reg_1755 <= grp_fu_607_p2;
        tmp_1_2_reg_1765 <= grp_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter21_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_0_2_reg_1801 <= grp_fu_551_p2;
        acc_1_2_reg_1811 <= grp_fu_555_p2;
        tmp_0_3_reg_1806 <= grp_fu_615_p2;
        tmp_1_3_reg_1816 <= grp_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter26_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_0_3_reg_1852 <= grp_fu_559_p2;
        acc_1_3_reg_1862 <= grp_fu_563_p2;
        tmp_0_4_reg_1857 <= grp_fu_623_p2;
        tmp_1_4_reg_1867 <= grp_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_0_4_reg_1888 <= grp_fu_567_p2;
        acc_1_4_reg_1898 <= grp_fu_571_p2;
        tmp_0_5_reg_1893 <= grp_fu_631_p2;
        tmp_1_5_reg_1903 <= grp_fu_635_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_0_5_reg_1923 <= grp_fu_575_p2;
        acc_1_5_reg_1934 <= grp_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        acc_0_5_reg_1923_pp0_iter38_reg <= acc_0_5_reg_1923;
        acc_0_5_reg_1923_pp0_iter39_reg <= acc_0_5_reg_1923_pp0_iter38_reg;
        acc_0_5_reg_1923_pp0_iter40_reg <= acc_0_5_reg_1923_pp0_iter39_reg;
        acc_0_5_reg_1923_pp0_iter41_reg <= acc_0_5_reg_1923_pp0_iter40_reg;
        acc_0_5_reg_1923_pp0_iter42_reg <= acc_0_5_reg_1923_pp0_iter41_reg;
        acc_0_5_reg_1923_pp0_iter43_reg <= acc_0_5_reg_1923_pp0_iter42_reg;
        acc_1_5_reg_1934_pp0_iter38_reg <= acc_1_5_reg_1934;
        acc_1_5_reg_1934_pp0_iter39_reg <= acc_1_5_reg_1934_pp0_iter38_reg;
        acc_1_5_reg_1934_pp0_iter40_reg <= acc_1_5_reg_1934_pp0_iter39_reg;
        acc_1_5_reg_1934_pp0_iter41_reg <= acc_1_5_reg_1934_pp0_iter40_reg;
        acc_1_5_reg_1934_pp0_iter42_reg <= acc_1_5_reg_1934_pp0_iter41_reg;
        acc_1_5_reg_1934_pp0_iter43_reg <= acc_1_5_reg_1934_pp0_iter42_reg;
        and_ln84_3_reg_1447_pp0_iter2_reg <= and_ln84_3_reg_1447_pp0_iter1_reg;
        and_ln84_3_reg_1447_pp0_iter3_reg <= and_ln84_3_reg_1447_pp0_iter2_reg;
        and_ln84_3_reg_1447_pp0_iter4_reg <= and_ln84_3_reg_1447_pp0_iter3_reg;
        and_ln84_3_reg_1447_pp0_iter5_reg <= and_ln84_3_reg_1447_pp0_iter4_reg;
        and_ln84_3_reg_1447_pp0_iter6_reg <= and_ln84_3_reg_1447_pp0_iter5_reg;
        biased_0_5_reg_1940_pp0_iter43_reg <= biased_0_5_reg_1940;
        biased_1_5_reg_1947_pp0_iter43_reg <= biased_1_5_reg_1947;
        icmp_ln84_reg_1414_pp0_iter10_reg <= icmp_ln84_reg_1414_pp0_iter9_reg;
        icmp_ln84_reg_1414_pp0_iter11_reg <= icmp_ln84_reg_1414_pp0_iter10_reg;
        icmp_ln84_reg_1414_pp0_iter12_reg <= icmp_ln84_reg_1414_pp0_iter11_reg;
        icmp_ln84_reg_1414_pp0_iter13_reg <= icmp_ln84_reg_1414_pp0_iter12_reg;
        icmp_ln84_reg_1414_pp0_iter14_reg <= icmp_ln84_reg_1414_pp0_iter13_reg;
        icmp_ln84_reg_1414_pp0_iter15_reg <= icmp_ln84_reg_1414_pp0_iter14_reg;
        icmp_ln84_reg_1414_pp0_iter16_reg <= icmp_ln84_reg_1414_pp0_iter15_reg;
        icmp_ln84_reg_1414_pp0_iter17_reg <= icmp_ln84_reg_1414_pp0_iter16_reg;
        icmp_ln84_reg_1414_pp0_iter18_reg <= icmp_ln84_reg_1414_pp0_iter17_reg;
        icmp_ln84_reg_1414_pp0_iter19_reg <= icmp_ln84_reg_1414_pp0_iter18_reg;
        icmp_ln84_reg_1414_pp0_iter20_reg <= icmp_ln84_reg_1414_pp0_iter19_reg;
        icmp_ln84_reg_1414_pp0_iter21_reg <= icmp_ln84_reg_1414_pp0_iter20_reg;
        icmp_ln84_reg_1414_pp0_iter22_reg <= icmp_ln84_reg_1414_pp0_iter21_reg;
        icmp_ln84_reg_1414_pp0_iter23_reg <= icmp_ln84_reg_1414_pp0_iter22_reg;
        icmp_ln84_reg_1414_pp0_iter24_reg <= icmp_ln84_reg_1414_pp0_iter23_reg;
        icmp_ln84_reg_1414_pp0_iter25_reg <= icmp_ln84_reg_1414_pp0_iter24_reg;
        icmp_ln84_reg_1414_pp0_iter26_reg <= icmp_ln84_reg_1414_pp0_iter25_reg;
        icmp_ln84_reg_1414_pp0_iter27_reg <= icmp_ln84_reg_1414_pp0_iter26_reg;
        icmp_ln84_reg_1414_pp0_iter28_reg <= icmp_ln84_reg_1414_pp0_iter27_reg;
        icmp_ln84_reg_1414_pp0_iter29_reg <= icmp_ln84_reg_1414_pp0_iter28_reg;
        icmp_ln84_reg_1414_pp0_iter2_reg <= icmp_ln84_reg_1414_pp0_iter1_reg;
        icmp_ln84_reg_1414_pp0_iter30_reg <= icmp_ln84_reg_1414_pp0_iter29_reg;
        icmp_ln84_reg_1414_pp0_iter31_reg <= icmp_ln84_reg_1414_pp0_iter30_reg;
        icmp_ln84_reg_1414_pp0_iter32_reg <= icmp_ln84_reg_1414_pp0_iter31_reg;
        icmp_ln84_reg_1414_pp0_iter33_reg <= icmp_ln84_reg_1414_pp0_iter32_reg;
        icmp_ln84_reg_1414_pp0_iter34_reg <= icmp_ln84_reg_1414_pp0_iter33_reg;
        icmp_ln84_reg_1414_pp0_iter35_reg <= icmp_ln84_reg_1414_pp0_iter34_reg;
        icmp_ln84_reg_1414_pp0_iter36_reg <= icmp_ln84_reg_1414_pp0_iter35_reg;
        icmp_ln84_reg_1414_pp0_iter37_reg <= icmp_ln84_reg_1414_pp0_iter36_reg;
        icmp_ln84_reg_1414_pp0_iter38_reg <= icmp_ln84_reg_1414_pp0_iter37_reg;
        icmp_ln84_reg_1414_pp0_iter39_reg <= icmp_ln84_reg_1414_pp0_iter38_reg;
        icmp_ln84_reg_1414_pp0_iter3_reg <= icmp_ln84_reg_1414_pp0_iter2_reg;
        icmp_ln84_reg_1414_pp0_iter40_reg <= icmp_ln84_reg_1414_pp0_iter39_reg;
        icmp_ln84_reg_1414_pp0_iter41_reg <= icmp_ln84_reg_1414_pp0_iter40_reg;
        icmp_ln84_reg_1414_pp0_iter42_reg <= icmp_ln84_reg_1414_pp0_iter41_reg;
        icmp_ln84_reg_1414_pp0_iter43_reg <= icmp_ln84_reg_1414_pp0_iter42_reg;
        icmp_ln84_reg_1414_pp0_iter44_reg <= icmp_ln84_reg_1414_pp0_iter43_reg;
        icmp_ln84_reg_1414_pp0_iter4_reg <= icmp_ln84_reg_1414_pp0_iter3_reg;
        icmp_ln84_reg_1414_pp0_iter5_reg <= icmp_ln84_reg_1414_pp0_iter4_reg;
        icmp_ln84_reg_1414_pp0_iter6_reg <= icmp_ln84_reg_1414_pp0_iter5_reg;
        icmp_ln84_reg_1414_pp0_iter7_reg <= icmp_ln84_reg_1414_pp0_iter6_reg;
        icmp_ln84_reg_1414_pp0_iter8_reg <= icmp_ln84_reg_1414_pp0_iter7_reg;
        icmp_ln84_reg_1414_pp0_iter9_reg <= icmp_ln84_reg_1414_pp0_iter8_reg;
        icmp_ln85_reg_1423_pp0_iter2_reg <= icmp_ln85_reg_1423_pp0_iter1_reg;
        icmp_ln85_reg_1423_pp0_iter3_reg <= icmp_ln85_reg_1423_pp0_iter2_reg;
        icmp_ln85_reg_1423_pp0_iter4_reg <= icmp_ln85_reg_1423_pp0_iter3_reg;
        icmp_ln85_reg_1423_pp0_iter5_reg <= icmp_ln85_reg_1423_pp0_iter4_reg;
        icmp_ln85_reg_1423_pp0_iter6_reg <= icmp_ln85_reg_1423_pp0_iter5_reg;
        icmp_ln95_reg_1473_pp0_iter2_reg <= icmp_ln95_reg_1473;
        icmp_ln95_reg_1473_pp0_iter3_reg <= icmp_ln95_reg_1473_pp0_iter2_reg;
        icmp_ln95_reg_1473_pp0_iter4_reg <= icmp_ln95_reg_1473_pp0_iter3_reg;
        icmp_ln95_reg_1473_pp0_iter5_reg <= icmp_ln95_reg_1473_pp0_iter4_reg;
        icmp_ln95_reg_1473_pp0_iter6_reg <= icmp_ln95_reg_1473_pp0_iter5_reg;
        lshr_ln_reg_1539_pp0_iter10_reg <= lshr_ln_reg_1539_pp0_iter9_reg;
        lshr_ln_reg_1539_pp0_iter11_reg <= lshr_ln_reg_1539_pp0_iter10_reg;
        lshr_ln_reg_1539_pp0_iter12_reg <= lshr_ln_reg_1539_pp0_iter11_reg;
        lshr_ln_reg_1539_pp0_iter13_reg <= lshr_ln_reg_1539_pp0_iter12_reg;
        lshr_ln_reg_1539_pp0_iter14_reg <= lshr_ln_reg_1539_pp0_iter13_reg;
        lshr_ln_reg_1539_pp0_iter15_reg <= lshr_ln_reg_1539_pp0_iter14_reg;
        lshr_ln_reg_1539_pp0_iter16_reg <= lshr_ln_reg_1539_pp0_iter15_reg;
        lshr_ln_reg_1539_pp0_iter17_reg <= lshr_ln_reg_1539_pp0_iter16_reg;
        lshr_ln_reg_1539_pp0_iter18_reg <= lshr_ln_reg_1539_pp0_iter17_reg;
        lshr_ln_reg_1539_pp0_iter19_reg <= lshr_ln_reg_1539_pp0_iter18_reg;
        lshr_ln_reg_1539_pp0_iter20_reg <= lshr_ln_reg_1539_pp0_iter19_reg;
        lshr_ln_reg_1539_pp0_iter21_reg <= lshr_ln_reg_1539_pp0_iter20_reg;
        lshr_ln_reg_1539_pp0_iter22_reg <= lshr_ln_reg_1539_pp0_iter21_reg;
        lshr_ln_reg_1539_pp0_iter23_reg <= lshr_ln_reg_1539_pp0_iter22_reg;
        lshr_ln_reg_1539_pp0_iter24_reg <= lshr_ln_reg_1539_pp0_iter23_reg;
        lshr_ln_reg_1539_pp0_iter25_reg <= lshr_ln_reg_1539_pp0_iter24_reg;
        lshr_ln_reg_1539_pp0_iter26_reg <= lshr_ln_reg_1539_pp0_iter25_reg;
        lshr_ln_reg_1539_pp0_iter27_reg <= lshr_ln_reg_1539_pp0_iter26_reg;
        lshr_ln_reg_1539_pp0_iter28_reg <= lshr_ln_reg_1539_pp0_iter27_reg;
        lshr_ln_reg_1539_pp0_iter29_reg <= lshr_ln_reg_1539_pp0_iter28_reg;
        lshr_ln_reg_1539_pp0_iter2_reg <= lshr_ln_reg_1539;
        lshr_ln_reg_1539_pp0_iter30_reg <= lshr_ln_reg_1539_pp0_iter29_reg;
        lshr_ln_reg_1539_pp0_iter31_reg <= lshr_ln_reg_1539_pp0_iter30_reg;
        lshr_ln_reg_1539_pp0_iter32_reg <= lshr_ln_reg_1539_pp0_iter31_reg;
        lshr_ln_reg_1539_pp0_iter33_reg <= lshr_ln_reg_1539_pp0_iter32_reg;
        lshr_ln_reg_1539_pp0_iter34_reg <= lshr_ln_reg_1539_pp0_iter33_reg;
        lshr_ln_reg_1539_pp0_iter35_reg <= lshr_ln_reg_1539_pp0_iter34_reg;
        lshr_ln_reg_1539_pp0_iter3_reg <= lshr_ln_reg_1539_pp0_iter2_reg;
        lshr_ln_reg_1539_pp0_iter4_reg <= lshr_ln_reg_1539_pp0_iter3_reg;
        lshr_ln_reg_1539_pp0_iter5_reg <= lshr_ln_reg_1539_pp0_iter4_reg;
        lshr_ln_reg_1539_pp0_iter6_reg <= lshr_ln_reg_1539_pp0_iter5_reg;
        lshr_ln_reg_1539_pp0_iter7_reg <= lshr_ln_reg_1539_pp0_iter6_reg;
        lshr_ln_reg_1539_pp0_iter8_reg <= lshr_ln_reg_1539_pp0_iter7_reg;
        lshr_ln_reg_1539_pp0_iter9_reg <= lshr_ln_reg_1539_pp0_iter8_reg;
        m_reg_1478_pp0_iter2_reg <= m_reg_1478;
        m_reg_1478_pp0_iter3_reg <= m_reg_1478_pp0_iter2_reg;
        m_reg_1478_pp0_iter4_reg <= m_reg_1478_pp0_iter3_reg;
        m_reg_1478_pp0_iter5_reg <= m_reg_1478_pp0_iter4_reg;
        m_reg_1478_pp0_iter6_reg <= m_reg_1478_pp0_iter5_reg;
        n_reg_1489_pp0_iter2_reg <= n_reg_1489;
        n_reg_1489_pp0_iter3_reg <= n_reg_1489_pp0_iter2_reg;
        n_reg_1489_pp0_iter4_reg <= n_reg_1489_pp0_iter3_reg;
        n_reg_1489_pp0_iter5_reg <= n_reg_1489_pp0_iter4_reg;
        n_reg_1489_pp0_iter6_reg <= n_reg_1489_pp0_iter5_reg;
        output_0_addr_reg_1621_pp0_iter10_reg <= output_0_addr_reg_1621_pp0_iter9_reg;
        output_0_addr_reg_1621_pp0_iter11_reg <= output_0_addr_reg_1621_pp0_iter10_reg;
        output_0_addr_reg_1621_pp0_iter12_reg <= output_0_addr_reg_1621_pp0_iter11_reg;
        output_0_addr_reg_1621_pp0_iter13_reg <= output_0_addr_reg_1621_pp0_iter12_reg;
        output_0_addr_reg_1621_pp0_iter14_reg <= output_0_addr_reg_1621_pp0_iter13_reg;
        output_0_addr_reg_1621_pp0_iter15_reg <= output_0_addr_reg_1621_pp0_iter14_reg;
        output_0_addr_reg_1621_pp0_iter16_reg <= output_0_addr_reg_1621_pp0_iter15_reg;
        output_0_addr_reg_1621_pp0_iter17_reg <= output_0_addr_reg_1621_pp0_iter16_reg;
        output_0_addr_reg_1621_pp0_iter18_reg <= output_0_addr_reg_1621_pp0_iter17_reg;
        output_0_addr_reg_1621_pp0_iter19_reg <= output_0_addr_reg_1621_pp0_iter18_reg;
        output_0_addr_reg_1621_pp0_iter20_reg <= output_0_addr_reg_1621_pp0_iter19_reg;
        output_0_addr_reg_1621_pp0_iter21_reg <= output_0_addr_reg_1621_pp0_iter20_reg;
        output_0_addr_reg_1621_pp0_iter22_reg <= output_0_addr_reg_1621_pp0_iter21_reg;
        output_0_addr_reg_1621_pp0_iter23_reg <= output_0_addr_reg_1621_pp0_iter22_reg;
        output_0_addr_reg_1621_pp0_iter24_reg <= output_0_addr_reg_1621_pp0_iter23_reg;
        output_0_addr_reg_1621_pp0_iter25_reg <= output_0_addr_reg_1621_pp0_iter24_reg;
        output_0_addr_reg_1621_pp0_iter26_reg <= output_0_addr_reg_1621_pp0_iter25_reg;
        output_0_addr_reg_1621_pp0_iter27_reg <= output_0_addr_reg_1621_pp0_iter26_reg;
        output_0_addr_reg_1621_pp0_iter28_reg <= output_0_addr_reg_1621_pp0_iter27_reg;
        output_0_addr_reg_1621_pp0_iter29_reg <= output_0_addr_reg_1621_pp0_iter28_reg;
        output_0_addr_reg_1621_pp0_iter30_reg <= output_0_addr_reg_1621_pp0_iter29_reg;
        output_0_addr_reg_1621_pp0_iter31_reg <= output_0_addr_reg_1621_pp0_iter30_reg;
        output_0_addr_reg_1621_pp0_iter32_reg <= output_0_addr_reg_1621_pp0_iter31_reg;
        output_0_addr_reg_1621_pp0_iter33_reg <= output_0_addr_reg_1621_pp0_iter32_reg;
        output_0_addr_reg_1621_pp0_iter34_reg <= output_0_addr_reg_1621_pp0_iter33_reg;
        output_0_addr_reg_1621_pp0_iter35_reg <= output_0_addr_reg_1621_pp0_iter34_reg;
        output_0_addr_reg_1621_pp0_iter36_reg <= output_0_addr_reg_1621_pp0_iter35_reg;
        output_0_addr_reg_1621_pp0_iter37_reg <= output_0_addr_reg_1621_pp0_iter36_reg;
        output_0_addr_reg_1621_pp0_iter38_reg <= output_0_addr_reg_1621_pp0_iter37_reg;
        output_0_addr_reg_1621_pp0_iter39_reg <= output_0_addr_reg_1621_pp0_iter38_reg;
        output_0_addr_reg_1621_pp0_iter40_reg <= output_0_addr_reg_1621_pp0_iter39_reg;
        output_0_addr_reg_1621_pp0_iter41_reg <= output_0_addr_reg_1621_pp0_iter40_reg;
        output_0_addr_reg_1621_pp0_iter42_reg <= output_0_addr_reg_1621_pp0_iter41_reg;
        output_0_addr_reg_1621_pp0_iter43_reg <= output_0_addr_reg_1621_pp0_iter42_reg;
        output_0_addr_reg_1621_pp0_iter44_reg <= output_0_addr_reg_1621_pp0_iter43_reg;
        output_0_addr_reg_1621_pp0_iter7_reg <= output_0_addr_reg_1621;
        output_0_addr_reg_1621_pp0_iter8_reg <= output_0_addr_reg_1621_pp0_iter7_reg;
        output_0_addr_reg_1621_pp0_iter9_reg <= output_0_addr_reg_1621_pp0_iter8_reg;
        output_1_addr_reg_1627_pp0_iter10_reg <= output_1_addr_reg_1627_pp0_iter9_reg;
        output_1_addr_reg_1627_pp0_iter11_reg <= output_1_addr_reg_1627_pp0_iter10_reg;
        output_1_addr_reg_1627_pp0_iter12_reg <= output_1_addr_reg_1627_pp0_iter11_reg;
        output_1_addr_reg_1627_pp0_iter13_reg <= output_1_addr_reg_1627_pp0_iter12_reg;
        output_1_addr_reg_1627_pp0_iter14_reg <= output_1_addr_reg_1627_pp0_iter13_reg;
        output_1_addr_reg_1627_pp0_iter15_reg <= output_1_addr_reg_1627_pp0_iter14_reg;
        output_1_addr_reg_1627_pp0_iter16_reg <= output_1_addr_reg_1627_pp0_iter15_reg;
        output_1_addr_reg_1627_pp0_iter17_reg <= output_1_addr_reg_1627_pp0_iter16_reg;
        output_1_addr_reg_1627_pp0_iter18_reg <= output_1_addr_reg_1627_pp0_iter17_reg;
        output_1_addr_reg_1627_pp0_iter19_reg <= output_1_addr_reg_1627_pp0_iter18_reg;
        output_1_addr_reg_1627_pp0_iter20_reg <= output_1_addr_reg_1627_pp0_iter19_reg;
        output_1_addr_reg_1627_pp0_iter21_reg <= output_1_addr_reg_1627_pp0_iter20_reg;
        output_1_addr_reg_1627_pp0_iter22_reg <= output_1_addr_reg_1627_pp0_iter21_reg;
        output_1_addr_reg_1627_pp0_iter23_reg <= output_1_addr_reg_1627_pp0_iter22_reg;
        output_1_addr_reg_1627_pp0_iter24_reg <= output_1_addr_reg_1627_pp0_iter23_reg;
        output_1_addr_reg_1627_pp0_iter25_reg <= output_1_addr_reg_1627_pp0_iter24_reg;
        output_1_addr_reg_1627_pp0_iter26_reg <= output_1_addr_reg_1627_pp0_iter25_reg;
        output_1_addr_reg_1627_pp0_iter27_reg <= output_1_addr_reg_1627_pp0_iter26_reg;
        output_1_addr_reg_1627_pp0_iter28_reg <= output_1_addr_reg_1627_pp0_iter27_reg;
        output_1_addr_reg_1627_pp0_iter29_reg <= output_1_addr_reg_1627_pp0_iter28_reg;
        output_1_addr_reg_1627_pp0_iter30_reg <= output_1_addr_reg_1627_pp0_iter29_reg;
        output_1_addr_reg_1627_pp0_iter31_reg <= output_1_addr_reg_1627_pp0_iter30_reg;
        output_1_addr_reg_1627_pp0_iter32_reg <= output_1_addr_reg_1627_pp0_iter31_reg;
        output_1_addr_reg_1627_pp0_iter33_reg <= output_1_addr_reg_1627_pp0_iter32_reg;
        output_1_addr_reg_1627_pp0_iter34_reg <= output_1_addr_reg_1627_pp0_iter33_reg;
        output_1_addr_reg_1627_pp0_iter35_reg <= output_1_addr_reg_1627_pp0_iter34_reg;
        output_1_addr_reg_1627_pp0_iter36_reg <= output_1_addr_reg_1627_pp0_iter35_reg;
        output_1_addr_reg_1627_pp0_iter37_reg <= output_1_addr_reg_1627_pp0_iter36_reg;
        output_1_addr_reg_1627_pp0_iter38_reg <= output_1_addr_reg_1627_pp0_iter37_reg;
        output_1_addr_reg_1627_pp0_iter39_reg <= output_1_addr_reg_1627_pp0_iter38_reg;
        output_1_addr_reg_1627_pp0_iter40_reg <= output_1_addr_reg_1627_pp0_iter39_reg;
        output_1_addr_reg_1627_pp0_iter41_reg <= output_1_addr_reg_1627_pp0_iter40_reg;
        output_1_addr_reg_1627_pp0_iter42_reg <= output_1_addr_reg_1627_pp0_iter41_reg;
        output_1_addr_reg_1627_pp0_iter43_reg <= output_1_addr_reg_1627_pp0_iter42_reg;
        output_1_addr_reg_1627_pp0_iter44_reg <= output_1_addr_reg_1627_pp0_iter43_reg;
        output_1_addr_reg_1627_pp0_iter7_reg <= output_1_addr_reg_1627;
        output_1_addr_reg_1627_pp0_iter8_reg <= output_1_addr_reg_1627_pp0_iter7_reg;
        output_1_addr_reg_1627_pp0_iter9_reg <= output_1_addr_reg_1627_pp0_iter8_reg;
        select_ln84_1_reg_1483_pp0_iter2_reg <= select_ln84_1_reg_1483;
        select_ln84_1_reg_1483_pp0_iter3_reg <= select_ln84_1_reg_1483_pp0_iter2_reg;
        select_ln84_1_reg_1483_pp0_iter4_reg <= select_ln84_1_reg_1483_pp0_iter3_reg;
        select_ln84_1_reg_1483_pp0_iter5_reg <= select_ln84_1_reg_1483_pp0_iter4_reg;
        select_ln84_1_reg_1483_pp0_iter6_reg <= select_ln84_1_reg_1483_pp0_iter5_reg;
        select_ln85_3_reg_1500_pp0_iter10_reg <= select_ln85_3_reg_1500_pp0_iter9_reg;
        select_ln85_3_reg_1500_pp0_iter11_reg <= select_ln85_3_reg_1500_pp0_iter10_reg;
        select_ln85_3_reg_1500_pp0_iter12_reg <= select_ln85_3_reg_1500_pp0_iter11_reg;
        select_ln85_3_reg_1500_pp0_iter13_reg <= select_ln85_3_reg_1500_pp0_iter12_reg;
        select_ln85_3_reg_1500_pp0_iter14_reg <= select_ln85_3_reg_1500_pp0_iter13_reg;
        select_ln85_3_reg_1500_pp0_iter15_reg <= select_ln85_3_reg_1500_pp0_iter14_reg;
        select_ln85_3_reg_1500_pp0_iter16_reg <= select_ln85_3_reg_1500_pp0_iter15_reg;
        select_ln85_3_reg_1500_pp0_iter17_reg <= select_ln85_3_reg_1500_pp0_iter16_reg;
        select_ln85_3_reg_1500_pp0_iter18_reg <= select_ln85_3_reg_1500_pp0_iter17_reg;
        select_ln85_3_reg_1500_pp0_iter19_reg <= select_ln85_3_reg_1500_pp0_iter18_reg;
        select_ln85_3_reg_1500_pp0_iter20_reg <= select_ln85_3_reg_1500_pp0_iter19_reg;
        select_ln85_3_reg_1500_pp0_iter21_reg <= select_ln85_3_reg_1500_pp0_iter20_reg;
        select_ln85_3_reg_1500_pp0_iter22_reg <= select_ln85_3_reg_1500_pp0_iter21_reg;
        select_ln85_3_reg_1500_pp0_iter23_reg <= select_ln85_3_reg_1500_pp0_iter22_reg;
        select_ln85_3_reg_1500_pp0_iter24_reg <= select_ln85_3_reg_1500_pp0_iter23_reg;
        select_ln85_3_reg_1500_pp0_iter25_reg <= select_ln85_3_reg_1500_pp0_iter24_reg;
        select_ln85_3_reg_1500_pp0_iter26_reg <= select_ln85_3_reg_1500_pp0_iter25_reg;
        select_ln85_3_reg_1500_pp0_iter27_reg <= select_ln85_3_reg_1500_pp0_iter26_reg;
        select_ln85_3_reg_1500_pp0_iter28_reg <= select_ln85_3_reg_1500_pp0_iter27_reg;
        select_ln85_3_reg_1500_pp0_iter29_reg <= select_ln85_3_reg_1500_pp0_iter28_reg;
        select_ln85_3_reg_1500_pp0_iter2_reg <= select_ln85_3_reg_1500;
        select_ln85_3_reg_1500_pp0_iter30_reg <= select_ln85_3_reg_1500_pp0_iter29_reg;
        select_ln85_3_reg_1500_pp0_iter31_reg <= select_ln85_3_reg_1500_pp0_iter30_reg;
        select_ln85_3_reg_1500_pp0_iter32_reg <= select_ln85_3_reg_1500_pp0_iter31_reg;
        select_ln85_3_reg_1500_pp0_iter33_reg <= select_ln85_3_reg_1500_pp0_iter32_reg;
        select_ln85_3_reg_1500_pp0_iter34_reg <= select_ln85_3_reg_1500_pp0_iter33_reg;
        select_ln85_3_reg_1500_pp0_iter35_reg <= select_ln85_3_reg_1500_pp0_iter34_reg;
        select_ln85_3_reg_1500_pp0_iter36_reg <= select_ln85_3_reg_1500_pp0_iter35_reg;
        select_ln85_3_reg_1500_pp0_iter37_reg <= select_ln85_3_reg_1500_pp0_iter36_reg;
        select_ln85_3_reg_1500_pp0_iter38_reg <= select_ln85_3_reg_1500_pp0_iter37_reg;
        select_ln85_3_reg_1500_pp0_iter39_reg <= select_ln85_3_reg_1500_pp0_iter38_reg;
        select_ln85_3_reg_1500_pp0_iter3_reg <= select_ln85_3_reg_1500_pp0_iter2_reg;
        select_ln85_3_reg_1500_pp0_iter40_reg <= select_ln85_3_reg_1500_pp0_iter39_reg;
        select_ln85_3_reg_1500_pp0_iter41_reg <= select_ln85_3_reg_1500_pp0_iter40_reg;
        select_ln85_3_reg_1500_pp0_iter42_reg <= select_ln85_3_reg_1500_pp0_iter41_reg;
        select_ln85_3_reg_1500_pp0_iter43_reg <= select_ln85_3_reg_1500_pp0_iter42_reg;
        select_ln85_3_reg_1500_pp0_iter4_reg <= select_ln85_3_reg_1500_pp0_iter3_reg;
        select_ln85_3_reg_1500_pp0_iter5_reg <= select_ln85_3_reg_1500_pp0_iter4_reg;
        select_ln85_3_reg_1500_pp0_iter6_reg <= select_ln85_3_reg_1500_pp0_iter5_reg;
        select_ln85_3_reg_1500_pp0_iter7_reg <= select_ln85_3_reg_1500_pp0_iter6_reg;
        select_ln85_3_reg_1500_pp0_iter8_reg <= select_ln85_3_reg_1500_pp0_iter7_reg;
        select_ln85_3_reg_1500_pp0_iter9_reg <= select_ln85_3_reg_1500_pp0_iter8_reg;
        select_ln97_2_reg_1512_pp0_iter2_reg <= select_ln97_2_reg_1512;
        select_ln97_2_reg_1512_pp0_iter3_reg <= select_ln97_2_reg_1512_pp0_iter2_reg;
        select_ln97_2_reg_1512_pp0_iter4_reg <= select_ln97_2_reg_1512_pp0_iter3_reg;
        select_ln97_6_reg_1533_pp0_iter2_reg <= select_ln97_6_reg_1533;
        select_ln97_6_reg_1533_pp0_iter3_reg <= select_ln97_6_reg_1533_pp0_iter2_reg;
        select_ln97_6_reg_1533_pp0_iter4_reg <= select_ln97_6_reg_1533_pp0_iter3_reg;
        zext_ln97_4_reg_1562_pp0_iter10_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter9_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter11_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter10_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter12_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter11_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter13_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter12_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter14_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter13_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter15_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter14_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter16_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter15_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter17_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter16_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter18_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter17_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter19_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter18_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter20_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter19_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter21_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter20_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter22_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter21_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter23_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter22_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter24_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter23_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter25_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter24_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter26_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter25_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter3_reg[8 : 0] <= zext_ln97_4_reg_1562[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter4_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter3_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter5_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter4_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter6_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter5_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter7_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter6_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter8_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter7_reg[8 : 0];
        zext_ln97_4_reg_1562_pp0_iter9_reg[8 : 0] <= zext_ln97_4_reg_1562_pp0_iter8_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter10_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter9_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter11_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter10_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter12_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter11_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter13_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter12_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter14_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter13_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter15_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter14_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter16_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter15_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter17_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter16_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter18_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter17_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter19_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter18_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter20_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter19_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter21_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter20_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter22_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter21_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter23_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter22_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter24_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter23_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter25_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter24_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter26_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter25_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter3_reg[8 : 0] <= zext_ln97_9_reg_1576[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter4_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter3_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter5_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter4_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter6_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter5_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter7_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter6_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter8_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter7_reg[8 : 0];
        zext_ln97_9_reg_1576_pp0_iter9_reg[8 : 0] <= zext_ln97_9_reg_1576_pp0_iter8_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_1_reg_1709 <= grp_fu_539_p2;
        acc_reg_1699 <= grp_fu_535_p2;
        tmp_0_1_reg_1704 <= grp_fu_599_p2;
        tmp_1_1_reg_1714 <= grp_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln100_3_reg_1616 <= add_ln100_3_fu_1246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_1414 == 1'd0))) begin
        add_ln97_3_reg_1528 <= add_ln97_3_fu_1029_p2;
        add_ln97_6_reg_1546 <= add_ln97_6_fu_1075_p2;
        and_ln97_reg_1523 <= and_ln97_fu_998_p2;
        lshr_ln_reg_1539 <= {{select_ln97_4_fu_1021_p3[4:1]}};
        m_reg_1478 <= m_fu_769_p2;
        n_reg_1489 <= n_fu_855_p2;
        select_ln85_3_reg_1500 <= select_ln85_3_fu_895_p3;
        select_ln97_1_reg_1506 <= select_ln97_1_fu_968_p3;
        select_ln97_3_reg_1518 <= select_ln97_3_fu_984_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_fu_649_p2 == 1'd0))) begin
        and_ln84_3_reg_1447 <= and_ln84_3_fu_679_p2;
        icmp_ln85_reg_1423 <= icmp_ln85_fu_661_p2;
        icmp_ln86_reg_1442 <= icmp_ln86_fu_673_p2;
        or_ln85_reg_1457 <= or_ln85_fu_685_p2;
        xor_ln84_reg_1435 <= xor_ln84_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln84_3_reg_1447_pp0_iter1_reg <= and_ln84_3_reg_1447;
        icmp_ln84_reg_1414 <= icmp_ln84_fu_649_p2;
        icmp_ln84_reg_1414_pp0_iter1_reg <= icmp_ln84_reg_1414;
        icmp_ln85_reg_1423_pp0_iter1_reg <= icmp_ln85_reg_1423;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln85_3_reg_1500_pp0_iter36_reg == 1'd1) & (icmp_ln84_reg_1414_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bias_conv3_buffer_0_1_reg_1918 <= bias_conv3_buffer_0_q0;
        bias_conv3_buffer_1_1_reg_1929 <= bias_conv3_buffer_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln85_3_reg_1500_pp0_iter41_reg == 1'd1) & (icmp_ln84_reg_1414_pp0_iter41_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        biased_0_5_reg_1940 <= grp_fu_583_p2;
        biased_1_5_reg_1947 <= grp_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln84_3_reg_1447) & (icmp_ln85_reg_1423 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln95_reg_1473 <= icmp_ln95_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_0_load_reg_1605 <= input_0_q0;
        weights_conv3_buffer_24_reg_1600 <= weights_conv3_buffer_11_q0;
        weights_conv3_buffer_30_reg_1611 <= weights_conv3_buffer_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_1_load_reg_1673 <= input_1_q0;
        weights_conv3_buffer_25_reg_1668 <= weights_conv3_buffer_10_q0;
        weights_conv3_buffer_31_reg_1679 <= weights_conv3_buffer_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_2_load_reg_1724 <= input_2_q0;
        weights_conv3_buffer_26_reg_1719 <= weights_conv3_buffer_9_q0;
        weights_conv3_buffer_32_reg_1730 <= weights_conv3_buffer_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_3_load_reg_1775 <= input_3_q0;
        weights_conv3_buffer_27_reg_1770 <= weights_conv3_buffer_8_q0;
        weights_conv3_buffer_33_reg_1781 <= weights_conv3_buffer_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_4_load_reg_1826 <= input_4_q0;
        weights_conv3_buffer_28_reg_1821 <= weights_conv3_buffer_7_q0;
        weights_conv3_buffer_34_reg_1832 <= weights_conv3_buffer_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter27_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_5_load_reg_1877 <= input_5_q0;
        weights_conv3_buffer_29_reg_1872 <= weights_conv3_buffer_6_q0;
        weights_conv3_buffer_35_reg_1883 <= weights_conv3_buffer_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_addr_reg_1621 <= zext_ln100_4_fu_1252_p1;
        output_1_addr_reg_1627 <= zext_ln100_4_fu_1252_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter43_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln100_1_reg_1959 <= select_ln100_1_fu_1408_p3;
        select_ln100_reg_1954 <= select_ln100_fu_1354_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_1414 == 1'd0))) begin
        select_ln84_1_reg_1483 <= select_ln84_1_fu_782_p3;
        select_ln85_1_reg_1494 <= select_ln85_1_fu_868_p3;
        select_ln97_2_reg_1512 <= select_ln97_2_fu_976_p3;
        select_ln97_6_reg_1533 <= select_ln97_6_fu_1035_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln95_1_reg_1658 <= select_ln95_1_fu_1293_p3;
        select_ln95_reg_1648 <= select_ln95_fu_1285_p3;
        tmp2_reg_1653 <= grp_fu_591_p2;
        tmp_1_reg_1663 <= grp_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_reg_1414_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln97_4_reg_1562[8 : 0] <= zext_ln97_4_fu_1147_p1[8 : 0];
        zext_ln97_9_reg_1576[8 : 0] <= zext_ln97_9_fu_1174_p1[8 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln84_reg_1414_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_h_0_phi_fu_495_p4 = select_ln97_2_reg_1512;
    end else begin
        ap_phi_mux_h_0_phi_fu_495_p4 = h_0_reg_491;
    end
end

always @ (*) begin
    if (((icmp_ln84_reg_1414_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_m_0_phi_fu_473_p4 = select_ln84_1_reg_1483;
    end else begin
        ap_phi_mux_m_0_phi_fu_473_p4 = m_0_reg_469;
    end
end

always @ (*) begin
    if (((icmp_ln84_reg_1414_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_n_0_phi_fu_484_p4 = select_ln85_1_reg_1494;
    end else begin
        ap_phi_mux_n_0_phi_fu_484_p4 = n_0_reg_480;
    end
end

always @ (*) begin
    if (((icmp_ln84_reg_1414_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_w_0_phi_fu_517_p4 = select_ln97_6_reg_1533;
    end else begin
        ap_phi_mux_w_0_phi_fu_517_p4 = w_0_reg_513;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        bias_conv3_buffer_0_ce0 = 1'b1;
    end else begin
        bias_conv3_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        bias_conv3_buffer_1_ce0 = 1'b1;
    end else begin
        bias_conv3_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        input_1_ce0 = 1'b1;
    end else begin
        input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        input_2_ce0 = 1'b1;
    end else begin
        input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        input_3_ce0 = 1'b1;
    end else begin
        input_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter22 == 1'b1))) begin
        input_4_ce0 = 1'b1;
    end else begin
        input_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        input_5_ce0 = 1'b1;
    end else begin
        input_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        output_0_ce1 = 1'b1;
    end else begin
        output_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln84_reg_1414_pp0_iter44_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        output_0_we1 = 1'b1;
    end else begin
        output_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        output_1_ce1 = 1'b1;
    end else begin
        output_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln84_reg_1414_pp0_iter44_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        output_1_we1 = 1'b1;
    end else begin
        output_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        weights_conv3_buffer_10_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weights_conv3_buffer_11_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter22 == 1'b1))) begin
        weights_conv3_buffer_1_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        weights_conv3_buffer_2_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        weights_conv3_buffer_3_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        weights_conv3_buffer_4_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weights_conv3_buffer_5_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        weights_conv3_buffer_6_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter22 == 1'b1))) begin
        weights_conv3_buffer_7_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        weights_conv3_buffer_8_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        weights_conv3_buffer_9_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        weights_conv3_buffer_ce0 = 1'b1;
    end else begin
        weights_conv3_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter45 == 1'b1) & (ap_enable_reg_pp0_iter44 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter45 == 1'b1) & (ap_enable_reg_pp0_iter44 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_1_fu_1214_p2 = (add_ln100_fu_1208_p2 + zext_ln97_2_fu_1180_p1);

assign add_ln100_2_fu_1240_p2 = (zext_ln100_3_fu_1236_p1 + p_shl_cast_fu_1220_p3);

assign add_ln100_3_fu_1246_p2 = (add_ln100_2_fu_1240_p2 + zext_ln97_5_fu_1183_p1);

assign add_ln100_fu_1208_p2 = (zext_ln100_2_fu_1204_p1 + zext_ln100_1_fu_1193_p1);

assign add_ln84_fu_655_p2 = (indvar_flatten107_reg_436 + 15'd1);

assign add_ln85_1_fu_705_p2 = (13'd1 + indvar_flatten55_reg_447);

assign add_ln86_1_fu_691_p2 = (11'd1 + indvar_flatten23_reg_458);

assign add_ln87_1_fu_1087_p2 = (8'd1 + indvar_flatten_reg_502);

assign add_ln88_fu_1081_p2 = (5'd2 + select_ln97_4_fu_1021_p3);

assign add_ln97_1_fu_763_p2 = (zext_ln85_fu_729_p1 + ap_phi_mux_w_0_phi_fu_517_p4);

assign add_ln97_2_fu_962_p2 = (zext_ln84_1_fu_789_p1 + h_fu_938_p2);

assign add_ln97_3_fu_1029_p2 = (zext_ln85_1_fu_875_p1 + w_fu_1004_p2);

assign add_ln97_4_fu_1141_p2 = (sub_ln97_fu_1126_p2 + zext_ln97_3_fu_1137_p1);

assign add_ln97_5_fu_1069_p2 = (zext_ln97_6_fu_1053_p1 + zext_ln97_7_fu_1065_p1);

assign add_ln97_6_fu_1075_p2 = (add_ln97_5_fu_1069_p2 + zext_ln100_fu_793_p1);

assign add_ln97_7_fu_1162_p2 = (zext_ln97_8_fu_1152_p1 + p_shl46_cast_fu_1155_p3);

assign add_ln97_8_fu_1168_p2 = (add_ln97_7_fu_1162_p2 + zext_ln85_3_fu_1101_p1);

assign add_ln97_fu_757_p2 = (zext_ln84_fu_719_p1 + ap_phi_mux_h_0_phi_fu_495_p4);

assign and_ln100_1_fu_889_p2 = (select_ln84_2_fu_803_p3 & icmp_ln100_3_fu_883_p2);

assign and_ln100_fu_751_p2 = (icmp_ln100_fu_723_p2 & icmp_ln100_1_fu_733_p2);

assign and_ln84_1_fu_839_p2 = (xor_ln84_reg_1435 & icmp_ln88_fu_833_p2);

assign and_ln84_2_fu_850_p2 = (xor_ln84_reg_1435 & icmp_ln87_fu_844_p2);

assign and_ln84_3_fu_679_p2 = (xor_ln84_fu_667_p2 & icmp_ln86_fu_673_p2);

assign and_ln84_fu_810_p2 = (xor_ln84_reg_1435 & and_ln100_fu_751_p2);

assign and_ln85_1_fu_932_p2 = (or_ln85_1_fu_921_p2 & and_ln84_2_fu_850_p2);

assign and_ln85_fu_926_p2 = (or_ln85_1_fu_921_p2 & and_ln84_1_fu_839_p2);

assign and_ln97_fu_998_p2 = (xor_ln97_fu_992_p2 & and_ln85_fu_926_p2);

assign and_ln99_1_fu_1395_p2 = (or_ln99_1_fu_1389_p2 & grp_fu_644_p2);

assign and_ln99_fu_1341_p2 = (or_ln99_fu_1335_p2 & grp_fu_639_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bias_conv3_buffer_0_address0 = zext_ln98_fu_1301_p1;

assign bias_conv3_buffer_1_address0 = zext_ln98_fu_1301_p1;

assign bitcast_ln99_1_fu_1360_p1 = biased_1_5_reg_1947_pp0_iter43_reg;

assign bitcast_ln99_fu_1306_p1 = biased_0_5_reg_1940_pp0_iter43_reg;

assign h_fu_938_p2 = (4'd1 + select_ln85_fu_861_p3);

assign icmp_ln100_1_fu_733_p2 = ((ap_phi_mux_n_0_phi_fu_484_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln100_2_fu_797_p2 = ((m_fu_769_p2 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln100_3_fu_883_p2 = ((n_fu_855_p2 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln100_fu_723_p2 = ((ap_phi_mux_m_0_phi_fu_473_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_649_p2 = ((indvar_flatten107_reg_436 == 15'd20000) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_661_p2 = ((indvar_flatten55_reg_447 == 13'd4000) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_673_p2 = ((indvar_flatten23_reg_458 == 11'd800) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_844_p2 = ((indvar_flatten_reg_502 == 8'd80) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_833_p2 = ((co_0_0_reg_524 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln95_1_fu_1257_p2 = ((m_reg_1478_pp0_iter6_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln95_2_fu_1272_p2 = ((or_ln95_1_fu_1268_p2 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_745_p2 = ((or_ln95_fu_739_p2 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln99_1_fu_1329_p2 = ((trunc_ln99_fu_1319_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln99_2_fu_1377_p2 = ((tmp_46_fu_1363_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln99_3_fu_1383_p2 = ((trunc_ln99_1_fu_1373_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_1323_p2 = ((tmp_s_fu_1309_p4 != 8'd255) ? 1'b1 : 1'b0);

assign input_0_address0 = zext_ln97_4_fu_1147_p1;

assign input_1_address0 = zext_ln97_4_reg_1562_pp0_iter6_reg;

assign input_2_address0 = zext_ln97_4_reg_1562_pp0_iter11_reg;

assign input_3_address0 = zext_ln97_4_reg_1562_pp0_iter16_reg;

assign input_4_address0 = zext_ln97_4_reg_1562_pp0_iter21_reg;

assign input_5_address0 = zext_ln97_4_reg_1562_pp0_iter26_reg;

assign lshr_ln_fu_1043_p4 = {{select_ln97_4_fu_1021_p3[4:1]}};

assign m_fu_769_p2 = (3'd1 + ap_phi_mux_m_0_phi_fu_473_p4);

assign n_fu_855_p2 = (3'd1 + select_ln84_fu_775_p3);

assign or_ln85_1_fu_921_p2 = (xor_ln85_fu_916_p2 | icmp_ln85_reg_1423);

assign or_ln85_fu_685_p2 = (icmp_ln85_fu_661_p2 | and_ln84_3_fu_679_p2);

assign or_ln95_1_fu_1268_p2 = (select_ln84_1_reg_1483_pp0_iter6_reg | n_reg_1489_pp0_iter6_reg);

assign or_ln95_fu_739_p2 = (ap_phi_mux_n_0_phi_fu_484_p4 | ap_phi_mux_m_0_phi_fu_473_p4);

assign or_ln97_1_fu_949_p2 = (or_ln97_fu_944_p2 | icmp_ln85_reg_1423);

assign or_ln97_2_fu_1010_p2 = (and_ln97_fu_998_p2 | and_ln85_1_fu_932_p2);

assign or_ln97_3_fu_1016_p2 = (or_ln97_2_fu_1010_p2 | or_ln85_reg_1457);

assign or_ln97_fu_944_p2 = (and_ln85_1_fu_932_p2 | and_ln84_3_reg_1447);

assign or_ln99_1_fu_1389_p2 = (icmp_ln99_3_fu_1383_p2 | icmp_ln99_2_fu_1377_p2);

assign or_ln99_fu_1335_p2 = (icmp_ln99_fu_1323_p2 | icmp_ln99_1_fu_1329_p2);

assign output_0_address0 = zext_ln100_4_fu_1252_p1;

assign output_0_address1 = output_0_addr_reg_1621_pp0_iter44_reg;

assign output_0_d1 = select_ln100_reg_1954;

assign output_1_address0 = zext_ln100_4_fu_1252_p1;

assign output_1_address1 = output_1_addr_reg_1627_pp0_iter44_reg;

assign output_1_d1 = select_ln100_1_reg_1959;

assign p_shl46_cast_fu_1155_p3 = {{add_ln97_6_reg_1546}, {2'd0}};

assign p_shl_cast_fu_1220_p3 = {{add_ln100_1_fu_1214_p2}, {3'd0}};

assign select_ln100_1_fu_1408_p3 = ((select_ln85_3_reg_1500_pp0_iter43_reg[0:0] === 1'b1) ? select_ln99_1_fu_1401_p3 : acc_1_5_reg_1934_pp0_iter43_reg);

assign select_ln100_fu_1354_p3 = ((select_ln85_3_reg_1500_pp0_iter43_reg[0:0] === 1'b1) ? select_ln99_fu_1347_p3 : acc_0_5_reg_1923_pp0_iter43_reg);

assign select_ln84_1_fu_782_p3 = ((icmp_ln85_reg_1423[0:0] === 1'b1) ? m_fu_769_p2 : ap_phi_mux_m_0_phi_fu_473_p4);

assign select_ln84_2_fu_803_p3 = ((icmp_ln85_reg_1423[0:0] === 1'b1) ? icmp_ln100_2_fu_797_p2 : icmp_ln100_fu_723_p2);

assign select_ln84_3_fu_1262_p3 = ((icmp_ln85_reg_1423_pp0_iter6_reg[0:0] === 1'b1) ? icmp_ln95_1_fu_1257_p2 : icmp_ln95_reg_1473_pp0_iter6_reg);

assign select_ln84_4_fu_819_p3 = ((icmp_ln85_reg_1423[0:0] === 1'b1) ? zext_ln84_2_fu_815_p1 : add_ln97_fu_757_p2);

assign select_ln84_5_fu_826_p3 = ((icmp_ln85_reg_1423[0:0] === 1'b1) ? 4'd0 : add_ln97_1_fu_763_p2);

assign select_ln84_fu_775_p3 = ((icmp_ln85_reg_1423[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_n_0_phi_fu_484_p4);

assign select_ln85_1_fu_868_p3 = ((and_ln84_3_reg_1447[0:0] === 1'b1) ? n_fu_855_p2 : select_ln84_fu_775_p3);

assign select_ln85_2_fu_1278_p3 = ((and_ln84_3_reg_1447_pp0_iter6_reg[0:0] === 1'b1) ? icmp_ln95_2_fu_1272_p2 : select_ln84_3_fu_1262_p3);

assign select_ln85_3_fu_895_p3 = ((and_ln84_3_reg_1447[0:0] === 1'b1) ? and_ln100_1_fu_889_p2 : and_ln84_fu_810_p2);

assign select_ln85_4_fu_902_p3 = ((and_ln84_3_reg_1447[0:0] === 1'b1) ? zext_ln84_1_fu_789_p1 : select_ln84_4_fu_819_p3);

assign select_ln85_5_fu_909_p3 = ((and_ln84_3_reg_1447[0:0] === 1'b1) ? zext_ln85_2_fu_879_p1 : select_ln84_5_fu_826_p3);

assign select_ln85_6_fu_711_p3 = ((icmp_ln85_fu_661_p2[0:0] === 1'b1) ? 13'd1 : add_ln85_1_fu_705_p2);

assign select_ln85_fu_861_p3 = ((or_ln85_reg_1457[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_h_0_phi_fu_495_p4);

assign select_ln86_fu_697_p3 = ((or_ln85_fu_685_p2[0:0] === 1'b1) ? 11'd1 : add_ln86_1_fu_691_p2);

assign select_ln87_fu_1093_p3 = ((or_ln97_1_fu_949_p2[0:0] === 1'b1) ? 8'd1 : add_ln87_1_fu_1087_p2);

assign select_ln95_1_fu_1293_p3 = ((select_ln85_2_fu_1278_p3[0:0] === 1'b1) ? 32'd0 : output_1_q0);

assign select_ln95_fu_1285_p3 = ((select_ln85_2_fu_1278_p3[0:0] === 1'b1) ? 32'd0 : output_0_q0);

assign select_ln97_1_fu_968_p3 = ((and_ln85_1_fu_932_p2[0:0] === 1'b1) ? add_ln97_2_fu_962_p2 : select_ln85_4_fu_902_p3);

assign select_ln97_2_fu_976_p3 = ((and_ln85_1_fu_932_p2[0:0] === 1'b1) ? h_fu_938_p2 : select_ln85_fu_861_p3);

assign select_ln97_3_fu_984_p3 = ((and_ln85_1_fu_932_p2[0:0] === 1'b1) ? zext_ln85_1_fu_875_p1 : select_ln85_5_fu_909_p3);

assign select_ln97_4_fu_1021_p3 = ((or_ln97_3_fu_1016_p2[0:0] === 1'b1) ? 5'd0 : co_0_0_reg_524);

assign select_ln97_5_fu_1132_p3 = ((and_ln97_reg_1523[0:0] === 1'b1) ? add_ln97_3_reg_1528 : select_ln97_3_reg_1518);

assign select_ln97_6_fu_1035_p3 = ((and_ln97_fu_998_p2[0:0] === 1'b1) ? w_fu_1004_p2 : select_ln97_fu_954_p3);

assign select_ln97_fu_954_p3 = ((or_ln97_1_fu_949_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_w_0_phi_fu_517_p4);

assign select_ln99_1_fu_1401_p3 = ((and_ln99_1_fu_1395_p2[0:0] === 1'b1) ? biased_1_5_reg_1947_pp0_iter43_reg : 32'd0);

assign select_ln99_fu_1347_p3 = ((and_ln99_fu_1341_p2[0:0] === 1'b1) ? biased_0_5_reg_1940_pp0_iter43_reg : 32'd0);

assign sub_ln97_fu_1126_p2 = (zext_ln97_fu_1111_p1 - zext_ln97_1_fu_1122_p1);

assign tmp_46_fu_1363_p4 = {{bitcast_ln99_1_fu_1360_p1[30:23]}};

assign tmp_58_fu_1104_p3 = {{select_ln97_1_reg_1506}, {4'd0}};

assign tmp_59_fu_1115_p3 = {{select_ln97_1_reg_1506}, {1'd0}};

assign tmp_60_fu_1057_p3 = {{lshr_ln_fu_1043_p4}, {2'd0}};

assign tmp_61_fu_1186_p3 = {{lshr_ln_reg_1539_pp0_iter4_reg}, {3'd0}};

assign tmp_62_fu_1197_p3 = {{lshr_ln_reg_1539_pp0_iter4_reg}, {1'd0}};

assign tmp_63_fu_1228_p3 = {{add_ln100_1_fu_1214_p2}, {1'd0}};

assign tmp_s_fu_1309_p4 = {{bitcast_ln99_fu_1306_p1[30:23]}};

assign trunc_ln99_1_fu_1373_p1 = bitcast_ln99_1_fu_1360_p1[22:0];

assign trunc_ln99_fu_1319_p1 = bitcast_ln99_fu_1306_p1[22:0];

assign w_fu_1004_p2 = (4'd1 + select_ln97_fu_954_p3);

assign weights_conv3_buffer_10_address0 = zext_ln97_9_reg_1576_pp0_iter6_reg;

assign weights_conv3_buffer_11_address0 = zext_ln97_9_fu_1174_p1;

assign weights_conv3_buffer_1_address0 = zext_ln97_9_reg_1576_pp0_iter21_reg;

assign weights_conv3_buffer_2_address0 = zext_ln97_9_reg_1576_pp0_iter16_reg;

assign weights_conv3_buffer_3_address0 = zext_ln97_9_reg_1576_pp0_iter11_reg;

assign weights_conv3_buffer_4_address0 = zext_ln97_9_reg_1576_pp0_iter6_reg;

assign weights_conv3_buffer_5_address0 = zext_ln97_9_fu_1174_p1;

assign weights_conv3_buffer_6_address0 = zext_ln97_9_reg_1576_pp0_iter26_reg;

assign weights_conv3_buffer_7_address0 = zext_ln97_9_reg_1576_pp0_iter21_reg;

assign weights_conv3_buffer_8_address0 = zext_ln97_9_reg_1576_pp0_iter16_reg;

assign weights_conv3_buffer_9_address0 = zext_ln97_9_reg_1576_pp0_iter11_reg;

assign weights_conv3_buffer_address0 = zext_ln97_9_reg_1576_pp0_iter26_reg;

assign xor_ln84_fu_667_p2 = (icmp_ln85_fu_661_p2 ^ 1'd1);

assign xor_ln85_fu_916_p2 = (icmp_ln86_reg_1442 ^ 1'd1);

assign xor_ln97_fu_992_p2 = (1'd1 ^ and_ln85_1_fu_932_p2);

assign zext_ln100_1_fu_1193_p1 = tmp_61_fu_1186_p3;

assign zext_ln100_2_fu_1204_p1 = tmp_62_fu_1197_p3;

assign zext_ln100_3_fu_1236_p1 = tmp_63_fu_1228_p3;

assign zext_ln100_4_fu_1252_p1 = add_ln100_3_reg_1616;

assign zext_ln100_fu_793_p1 = select_ln84_1_fu_782_p3;

assign zext_ln84_1_fu_789_p1 = select_ln84_1_fu_782_p3;

assign zext_ln84_2_fu_815_p1 = m_fu_769_p2;

assign zext_ln84_fu_719_p1 = ap_phi_mux_m_0_phi_fu_473_p4;

assign zext_ln85_1_fu_875_p1 = select_ln85_1_fu_868_p3;

assign zext_ln85_2_fu_879_p1 = n_fu_855_p2;

assign zext_ln85_3_fu_1101_p1 = select_ln85_1_reg_1494;

assign zext_ln85_fu_729_p1 = ap_phi_mux_n_0_phi_fu_484_p4;

assign zext_ln97_1_fu_1122_p1 = tmp_59_fu_1115_p3;

assign zext_ln97_2_fu_1180_p1 = select_ln97_2_reg_1512_pp0_iter4_reg;

assign zext_ln97_3_fu_1137_p1 = select_ln97_5_fu_1132_p3;

assign zext_ln97_4_fu_1147_p1 = add_ln97_4_fu_1141_p2;

assign zext_ln97_5_fu_1183_p1 = select_ln97_6_reg_1533_pp0_iter4_reg;

assign zext_ln97_6_fu_1053_p1 = lshr_ln_fu_1043_p4;

assign zext_ln97_7_fu_1065_p1 = tmp_60_fu_1057_p3;

assign zext_ln97_8_fu_1152_p1 = add_ln97_6_reg_1546;

assign zext_ln97_9_fu_1174_p1 = add_ln97_8_fu_1168_p2;

assign zext_ln97_fu_1111_p1 = tmp_58_fu_1104_p3;

assign zext_ln98_fu_1301_p1 = lshr_ln_reg_1539_pp0_iter35_reg;

always @ (posedge ap_clk) begin
    zext_ln97_4_reg_1562[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter7_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter8_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter9_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter10_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter11_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter12_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter13_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter14_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter15_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter16_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter17_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter18_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter19_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter20_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter21_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter22_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter23_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter24_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter25_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_4_reg_1562_pp0_iter26_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter7_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter8_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter9_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter10_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter11_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter12_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter13_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter14_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter15_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter16_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter17_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter18_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter19_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter20_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter21_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter22_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter23_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter24_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter25_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln97_9_reg_1576_pp0_iter26_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //convolution3
