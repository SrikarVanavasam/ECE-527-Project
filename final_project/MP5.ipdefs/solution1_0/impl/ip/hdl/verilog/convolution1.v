// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convolution1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        output_0_address0,
        output_0_ce0,
        output_0_q0,
        output_0_address1,
        output_0_ce1,
        output_0_we1,
        output_0_d1,
        output_1_address0,
        output_1_ce0,
        output_1_q0,
        output_1_address1,
        output_1_ce1,
        output_1_we1,
        output_1_d1,
        output_2_address0,
        output_2_ce0,
        output_2_q0,
        output_2_address1,
        output_2_ce1,
        output_2_we1,
        output_2_d1,
        output_3_address0,
        output_3_ce0,
        output_3_q0,
        output_3_address1,
        output_3_ce1,
        output_3_we1,
        output_3_d1,
        output_4_address0,
        output_4_ce0,
        output_4_q0,
        output_4_address1,
        output_4_ce1,
        output_4_we1,
        output_4_d1,
        output_5_address0,
        output_5_ce0,
        output_5_q0,
        output_5_address1,
        output_5_ce1,
        output_5_we1,
        output_5_d1
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state23 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [9:0] input_0_address0;
output   input_0_ce0;
input  [31:0] input_0_q0;
output  [9:0] output_0_address0;
output   output_0_ce0;
input  [31:0] output_0_q0;
output  [9:0] output_0_address1;
output   output_0_ce1;
output   output_0_we1;
output  [31:0] output_0_d1;
output  [9:0] output_1_address0;
output   output_1_ce0;
input  [31:0] output_1_q0;
output  [9:0] output_1_address1;
output   output_1_ce1;
output   output_1_we1;
output  [31:0] output_1_d1;
output  [9:0] output_2_address0;
output   output_2_ce0;
input  [31:0] output_2_q0;
output  [9:0] output_2_address1;
output   output_2_ce1;
output   output_2_we1;
output  [31:0] output_2_d1;
output  [9:0] output_3_address0;
output   output_3_ce0;
input  [31:0] output_3_q0;
output  [9:0] output_3_address1;
output   output_3_ce1;
output   output_3_we1;
output  [31:0] output_3_d1;
output  [9:0] output_4_address0;
output   output_4_ce0;
input  [31:0] output_4_q0;
output  [9:0] output_4_address1;
output   output_4_ce1;
output   output_4_we1;
output  [31:0] output_4_d1;
output  [9:0] output_5_address0;
output   output_5_ce0;
input  [31:0] output_5_q0;
output  [9:0] output_5_address1;
output   output_5_ce1;
output   output_5_we1;
output  [31:0] output_5_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_0_ce0;
reg output_0_ce0;
reg output_0_ce1;
reg output_0_we1;
reg output_1_ce0;
reg output_1_ce1;
reg output_1_we1;
reg[31:0] output_1_d1;
reg output_2_ce0;
reg output_2_ce1;
reg output_2_we1;
reg output_3_ce0;
reg output_3_ce1;
reg output_3_we1;
reg[31:0] output_3_d1;
reg output_4_ce0;
reg output_4_ce1;
reg output_4_we1;
reg output_5_ce0;
reg output_5_ce1;
reg output_5_we1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] weights_conv1_buffer_5_address0;
reg    weights_conv1_buffer_5_ce0;
wire   [31:0] weights_conv1_buffer_5_q0;
wire   [4:0] weights_conv1_buffer_4_address0;
reg    weights_conv1_buffer_4_ce0;
wire   [31:0] weights_conv1_buffer_4_q0;
wire   [4:0] weights_conv1_buffer_3_address0;
reg    weights_conv1_buffer_3_ce0;
wire   [31:0] weights_conv1_buffer_3_q0;
wire   [4:0] weights_conv1_buffer_2_address0;
reg    weights_conv1_buffer_2_ce0;
wire   [31:0] weights_conv1_buffer_2_q0;
wire   [4:0] weights_conv1_buffer_1_address0;
reg    weights_conv1_buffer_1_ce0;
wire   [31:0] weights_conv1_buffer_1_q0;
wire   [4:0] weights_conv1_buffer_address0;
reg    weights_conv1_buffer_ce0;
wire   [31:0] weights_conv1_buffer_q0;
reg   [14:0] indvar_flatten85_reg_305;
reg   [2:0] m_0_reg_316;
reg   [12:0] indvar_flatten23_reg_327;
reg   [2:0] n_0_reg_338;
reg   [9:0] indvar_flatten_reg_349;
reg   [4:0] h_0_reg_360;
reg   [4:0] w_0_reg_372;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_470_p2;
reg   [31:0] reg_520;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] icmp_ln17_reg_1513;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter6_reg;
reg   [0:0] select_ln18_2_reg_1638;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter6_reg;
wire   [31:0] grp_fu_478_p2;
reg   [31:0] reg_526;
wire   [31:0] grp_fu_412_p2;
reg   [31:0] reg_532;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter11_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter11_reg;
reg   [31:0] reg_532_pp0_iter13_reg;
reg   [31:0] reg_532_pp0_iter14_reg;
reg   [31:0] reg_532_pp0_iter15_reg;
reg   [31:0] reg_532_pp0_iter16_reg;
reg   [31:0] reg_532_pp0_iter17_reg;
reg   [31:0] reg_532_pp0_iter18_reg;
wire   [31:0] grp_fu_422_p2;
reg   [31:0] reg_537;
reg   [31:0] reg_537_pp0_iter13_reg;
reg   [31:0] reg_537_pp0_iter14_reg;
reg   [31:0] reg_537_pp0_iter15_reg;
reg   [31:0] reg_537_pp0_iter16_reg;
reg   [31:0] reg_537_pp0_iter17_reg;
reg   [31:0] reg_537_pp0_iter18_reg;
wire   [31:0] grp_fu_441_p2;
reg   [31:0] reg_542;
reg    ap_enable_reg_pp0_iter17;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter16_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter16_reg;
reg   [0:0] select_ln18_3_reg_1583;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter16_reg;
reg   [31:0] reg_542_pp0_iter18_reg;
wire   [31:0] grp_fu_451_p2;
reg   [31:0] reg_547;
reg   [31:0] reg_547_pp0_iter18_reg;
wire   [4:0] zext_ln17_fu_552_p1;
reg   [4:0] zext_ln17_reg_1498;
wire    ap_CS_fsm_pp0_stage0;
wire   [0:0] icmp_ln24_fu_590_p2;
reg   [0:0] icmp_ln24_reg_1503;
reg   [0:0] icmp_ln24_reg_1503_pp0_iter1_reg;
wire   [5:0] add_ln25_2_fu_600_p2;
reg   [5:0] add_ln25_2_reg_1508;
reg   [5:0] add_ln25_2_reg_1508_pp0_iter1_reg;
wire   [0:0] icmp_ln17_fu_618_p2;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter1_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter2_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter3_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter4_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter5_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter7_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter8_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter9_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter10_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter12_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter13_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter14_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter15_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter17_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter18_reg;
reg   [0:0] icmp_ln17_reg_1513_pp0_iter19_reg;
wire   [14:0] add_ln17_fu_624_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] m_fu_630_p2;
reg   [2:0] m_reg_1522;
reg   [2:0] m_reg_1522_pp0_iter1_reg;
wire   [0:0] icmp_ln18_fu_636_p2;
reg   [0:0] icmp_ln18_reg_1530;
reg   [0:0] icmp_ln18_reg_1530_pp0_iter1_reg;
wire   [2:0] select_ln17_1_fu_650_p3;
reg   [2:0] select_ln17_1_reg_1539;
reg   [2:0] select_ln17_1_reg_1539_pp0_iter1_reg;
wire   [0:0] xor_ln17_fu_672_p2;
reg   [0:0] xor_ln17_reg_1548;
wire   [0:0] icmp_ln19_fu_684_p2;
reg   [0:0] icmp_ln19_reg_1553;
wire   [0:0] and_ln17_2_fu_690_p2;
reg   [0:0] and_ln17_2_reg_1558;
reg   [0:0] and_ln17_2_reg_1558_pp0_iter1_reg;
wire   [2:0] n_fu_696_p2;
reg   [2:0] n_reg_1566;
reg   [2:0] n_reg_1566_pp0_iter1_reg;
wire   [0:0] or_ln18_fu_702_p2;
reg   [0:0] or_ln18_reg_1572;
wire   [2:0] select_ln18_1_fu_708_p3;
reg   [2:0] select_ln18_1_reg_1577;
reg   [2:0] select_ln18_1_reg_1577_pp0_iter1_reg;
wire   [0:0] select_ln18_3_fu_728_p3;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter1_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter2_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter3_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter4_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter5_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter6_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter7_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter8_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter9_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter10_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter11_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter12_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter13_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter14_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter15_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter17_reg;
reg   [0:0] select_ln18_3_reg_1583_pp0_iter18_reg;
wire   [9:0] select_ln19_fu_742_p3;
wire   [12:0] select_ln18_6_fu_756_p3;
wire   [0:0] and_ln18_fu_792_p2;
reg   [0:0] and_ln18_reg_1605;
wire   [4:0] h_fu_798_p2;
reg   [4:0] h_reg_1610;
wire   [4:0] select_ln25_fu_814_p3;
reg   [4:0] select_ln25_reg_1615;
reg   [4:0] select_ln25_reg_1615_pp0_iter2_reg;
reg   [4:0] select_ln25_reg_1615_pp0_iter3_reg;
reg   [4:0] select_ln25_reg_1615_pp0_iter4_reg;
reg   [4:0] select_ln25_reg_1615_pp0_iter5_reg;
wire   [4:0] add_ln25_7_fu_822_p2;
reg   [4:0] add_ln25_7_reg_1621;
wire   [4:0] select_ln25_2_fu_827_p3;
reg   [4:0] select_ln25_2_reg_1626;
reg    ap_enable_reg_pp0_iter1;
reg   [4:0] select_ln25_2_reg_1626_pp0_iter2_reg;
reg   [4:0] select_ln25_2_reg_1626_pp0_iter3_reg;
reg   [4:0] select_ln25_2_reg_1626_pp0_iter4_reg;
reg   [4:0] select_ln25_2_reg_1626_pp0_iter5_reg;
wire   [4:0] w_fu_835_p2;
reg   [4:0] w_reg_1633;
wire   [0:0] select_ln18_2_fu_918_p3;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter3_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter4_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter5_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter7_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter8_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter9_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter10_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter12_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter13_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter14_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter15_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter17_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter18_reg;
reg   [0:0] select_ln18_2_reg_1638_pp0_iter19_reg;
reg   [31:0] weights_conv1_buffer_7_reg_1679;
reg   [31:0] weights_conv1_buffer_9_reg_1684;
reg   [31:0] weights_conv1_buffer_11_reg_1689;
reg   [31:0] weights_conv1_buffer_13_reg_1694;
reg   [31:0] weights_conv1_buffer_15_reg_1699;
reg   [31:0] weights_conv1_buffer_17_reg_1704;
reg   [31:0] input_0_load_reg_1709;
reg   [9:0] output_0_addr_reg_1719;
reg   [9:0] output_0_addr_reg_1719_pp0_iter7_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter8_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter9_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter10_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter11_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter12_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter13_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter14_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter15_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter16_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter17_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter18_reg;
reg   [9:0] output_0_addr_reg_1719_pp0_iter19_reg;
reg   [9:0] output_1_addr_reg_1725;
reg   [9:0] output_1_addr_reg_1725_pp0_iter7_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter8_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter9_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter10_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter11_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter12_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter13_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter14_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter15_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter16_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter17_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter18_reg;
reg   [9:0] output_1_addr_reg_1725_pp0_iter19_reg;
reg   [9:0] output_2_addr_reg_1731;
reg   [9:0] output_2_addr_reg_1731_pp0_iter7_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter8_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter9_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter10_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter11_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter12_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter13_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter14_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter15_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter16_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter17_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter18_reg;
reg   [9:0] output_2_addr_reg_1731_pp0_iter19_reg;
reg   [9:0] output_3_addr_reg_1737;
reg   [9:0] output_3_addr_reg_1737_pp0_iter7_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter8_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter9_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter10_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter11_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter12_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter13_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter14_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter15_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter16_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter17_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter18_reg;
reg   [9:0] output_3_addr_reg_1737_pp0_iter19_reg;
reg   [9:0] output_4_addr_reg_1743;
reg   [9:0] output_4_addr_reg_1743_pp0_iter7_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter8_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter9_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter10_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter11_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter12_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter13_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter14_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter15_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter16_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter17_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter18_reg;
reg   [9:0] output_4_addr_reg_1743_pp0_iter19_reg;
reg   [9:0] output_5_addr_reg_1749;
reg   [9:0] output_5_addr_reg_1749_pp0_iter7_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter8_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter9_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter10_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter11_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter12_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter13_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter14_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter15_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter16_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter17_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter18_reg;
reg   [9:0] output_5_addr_reg_1749_pp0_iter19_reg;
wire   [31:0] select_ln24_fu_1040_p3;
reg   [31:0] select_ln24_reg_1755;
wire   [31:0] grp_fu_466_p2;
reg   [31:0] tmp3_reg_1760;
reg   [31:0] output_1_load_reg_1765;
wire   [31:0] grp_fu_474_p2;
reg   [31:0] tmp_2_reg_1775;
reg   [31:0] output_3_load_reg_1780;
wire   [31:0] grp_fu_482_p2;
reg   [31:0] tmp_4_reg_1790;
wire   [31:0] select_ln24_1_fu_1047_p3;
reg   [31:0] select_ln24_1_reg_1795;
wire   [31:0] grp_fu_486_p2;
reg   [31:0] tmp_5_reg_1800;
wire   [31:0] grp_fu_408_p2;
reg   [31:0] acc_reg_1805;
reg   [31:0] acc_reg_1805_pp0_iter13_reg;
reg   [31:0] acc_reg_1805_pp0_iter14_reg;
reg   [31:0] acc_reg_1805_pp0_iter15_reg;
reg   [31:0] acc_reg_1805_pp0_iter16_reg;
reg   [31:0] acc_reg_1805_pp0_iter17_reg;
reg   [31:0] acc_reg_1805_pp0_iter18_reg;
wire   [31:0] grp_fu_417_p2;
reg   [31:0] acc_2_reg_1811;
reg   [31:0] acc_2_reg_1811_pp0_iter13_reg;
reg   [31:0] acc_2_reg_1811_pp0_iter14_reg;
reg   [31:0] acc_2_reg_1811_pp0_iter15_reg;
reg   [31:0] acc_2_reg_1811_pp0_iter16_reg;
reg   [31:0] acc_2_reg_1811_pp0_iter17_reg;
reg   [31:0] acc_2_reg_1811_pp0_iter18_reg;
wire   [31:0] grp_fu_427_p2;
reg   [31:0] acc_4_reg_1817;
reg   [31:0] acc_4_reg_1817_pp0_iter13_reg;
reg   [31:0] acc_4_reg_1817_pp0_iter14_reg;
reg   [31:0] acc_4_reg_1817_pp0_iter15_reg;
reg   [31:0] acc_4_reg_1817_pp0_iter16_reg;
reg   [31:0] acc_4_reg_1817_pp0_iter17_reg;
reg   [31:0] acc_4_reg_1817_pp0_iter18_reg;
wire   [31:0] grp_fu_432_p2;
reg   [31:0] acc_5_reg_1823;
reg   [31:0] acc_5_reg_1823_pp0_iter13_reg;
reg   [31:0] acc_5_reg_1823_pp0_iter14_reg;
reg   [31:0] acc_5_reg_1823_pp0_iter15_reg;
reg   [31:0] acc_5_reg_1823_pp0_iter16_reg;
reg   [31:0] acc_5_reg_1823_pp0_iter17_reg;
reg   [31:0] acc_5_reg_1823_pp0_iter18_reg;
wire   [31:0] grp_fu_436_p2;
reg   [31:0] biased_reg_1829;
reg   [31:0] biased_reg_1829_pp0_iter18_reg;
wire   [31:0] grp_fu_446_p2;
reg   [31:0] biased_2_reg_1836;
reg   [31:0] biased_2_reg_1836_pp0_iter18_reg;
wire   [31:0] grp_fu_456_p2;
reg   [31:0] biased_4_reg_1843;
reg   [31:0] biased_4_reg_1843_pp0_iter18_reg;
wire   [31:0] grp_fu_461_p2;
reg   [31:0] biased_5_reg_1850;
reg   [31:0] biased_5_reg_1850_pp0_iter18_reg;
wire   [31:0] select_ln28_fu_1102_p3;
reg   [31:0] select_ln28_reg_1857;
wire   [31:0] select_ln28_1_fu_1158_p3;
reg   [31:0] select_ln28_1_reg_1862;
wire   [31:0] select_ln28_6_fu_1215_p3;
reg   [31:0] select_ln28_6_reg_1867;
wire   [31:0] select_ln28_2_fu_1270_p3;
reg   [31:0] select_ln28_2_reg_1872;
wire   [31:0] select_ln28_3_fu_1326_p3;
reg   [31:0] select_ln28_3_reg_1877;
wire   [31:0] select_ln28_7_fu_1383_p3;
reg   [31:0] select_ln28_7_reg_1882;
wire   [31:0] select_ln28_4_fu_1438_p3;
reg   [31:0] select_ln28_4_reg_1887;
wire   [31:0] select_ln28_5_fu_1492_p3;
reg   [31:0] select_ln28_5_reg_1892;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg   [2:0] ap_phi_mux_m_0_phi_fu_320_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_n_0_phi_fu_342_p4;
reg   [4:0] ap_phi_mux_h_0_phi_fu_364_p4;
reg   [4:0] ap_phi_mux_w_0_phi_fu_376_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln24_reg_384;
reg   [31:0] ap_phi_reg_pp0_iter1_phi_ln24_reg_384;
reg   [31:0] ap_phi_reg_pp0_iter2_phi_ln24_reg_384;
reg   [31:0] ap_phi_reg_pp0_iter3_phi_ln24_reg_384;
reg   [31:0] ap_phi_reg_pp0_iter4_phi_ln24_reg_384;
reg   [31:0] ap_phi_reg_pp0_iter5_phi_ln24_reg_384;
reg   [31:0] ap_phi_reg_pp0_iter6_phi_ln24_reg_384;
reg   [31:0] ap_phi_reg_pp0_iter7_phi_ln24_reg_384;
reg   [31:0] ap_phi_reg_pp0_iter8_phi_ln24_reg_384;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln24_1_reg_396;
reg   [31:0] ap_phi_reg_pp0_iter1_phi_ln24_1_reg_396;
reg   [31:0] ap_phi_reg_pp0_iter2_phi_ln24_1_reg_396;
reg   [31:0] ap_phi_reg_pp0_iter3_phi_ln24_1_reg_396;
reg   [31:0] ap_phi_reg_pp0_iter4_phi_ln24_1_reg_396;
reg   [31:0] ap_phi_reg_pp0_iter5_phi_ln24_1_reg_396;
reg   [31:0] ap_phi_reg_pp0_iter6_phi_ln24_1_reg_396;
reg   [31:0] ap_phi_reg_pp0_iter7_phi_ln24_1_reg_396;
reg   [31:0] ap_phi_reg_pp0_iter8_phi_ln24_1_reg_396;
wire   [63:0] select_ln18_4_fu_934_p3;
wire   [63:0] zext_ln25_8_fu_988_p1;
wire   [63:0] zext_ln24_3_fu_1030_p1;
reg   [31:0] grp_fu_412_p0;
reg   [31:0] grp_fu_412_p1;
reg   [31:0] grp_fu_422_p0;
reg   [31:0] grp_fu_422_p1;
wire   [4:0] tmp_63_fu_560_p3;
wire   [5:0] zext_ln25_fu_556_p1;
wire   [5:0] zext_ln25_1_fu_568_p1;
wire   [2:0] or_ln24_fu_584_p2;
wire   [5:0] add_ln25_fu_572_p2;
wire   [5:0] zext_ln25_2_fu_596_p1;
wire   [0:0] icmp_ln28_fu_578_p2;
wire   [0:0] icmp_ln28_1_fu_606_p2;
wire   [0:0] icmp_ln28_2_fu_658_p2;
wire   [0:0] and_ln28_fu_612_p2;
wire   [2:0] select_ln17_fu_642_p3;
wire   [0:0] select_ln17_2_fu_664_p3;
wire   [0:0] icmp_ln28_3_fu_716_p2;
wire   [0:0] and_ln28_1_fu_722_p2;
wire   [0:0] and_ln17_fu_678_p2;
wire   [9:0] add_ln19_1_fu_736_p2;
wire   [12:0] add_ln18_1_fu_750_p2;
wire   [0:0] icmp_ln20_fu_764_p2;
wire   [0:0] xor_ln18_fu_782_p2;
wire   [0:0] and_ln17_1_fu_770_p2;
wire   [0:0] or_ln18_1_fu_787_p2;
wire   [4:0] select_ln18_fu_775_p3;
wire   [0:0] or_ln25_fu_804_p2;
wire   [0:0] or_ln25_1_fu_809_p2;
wire   [4:0] tmp_64_fu_847_p3;
wire   [5:0] zext_ln25_3_fu_844_p1;
wire   [5:0] zext_ln25_4_fu_854_p1;
wire   [4:0] tmp_65_fu_867_p3;
wire   [63:0] zext_ln17_2_fu_864_p1;
wire   [63:0] zext_ln25_6_fu_874_p1;
wire   [0:0] icmp_ln24_1_fu_884_p2;
wire   [5:0] add_ln25_3_fu_858_p2;
wire   [5:0] select_ln17_4_fu_895_p3;
wire   [2:0] or_ln24_1_fu_908_p2;
wire   [0:0] icmp_ln24_2_fu_912_p2;
wire   [0:0] select_ln17_3_fu_889_p3;
wire   [63:0] add_ln25_4_fu_878_p2;
wire   [63:0] zext_ln25_5_fu_925_p1;
wire   [63:0] add_ln25_5_fu_928_p2;
wire   [63:0] zext_ln17_3_fu_901_p1;
wire   [4:0] zext_ln17_1_fu_841_p1;
wire   [4:0] zext_ln25_7_fu_952_p1;
wire   [4:0] select_ln17_5_fu_955_p3;
wire   [4:0] add_ln25_6_fu_947_p2;
wire   [4:0] select_ln18_5_fu_961_p3;
wire   [4:0] zext_ln18_fu_905_p1;
wire   [4:0] select_ln25_1_fu_968_p3;
wire   [4:0] add_ln25_1_fu_975_p2;
wire   [9:0] tmp_68_fu_980_p3;
wire   [9:0] tmp_66_fu_993_p3;
wire   [6:0] tmp_67_fu_1004_p3;
wire   [10:0] zext_ln24_fu_1000_p1;
wire   [10:0] zext_ln24_1_fu_1011_p1;
wire   [10:0] sub_ln24_fu_1015_p2;
wire   [10:0] zext_ln24_2_fu_1021_p1;
wire   [10:0] add_ln24_fu_1024_p2;
wire   [31:0] bitcast_ln27_fu_1054_p1;
wire   [7:0] tmp_s_fu_1057_p4;
wire   [22:0] trunc_ln27_fu_1067_p1;
wire   [0:0] icmp_ln27_1_fu_1077_p2;
wire   [0:0] icmp_ln27_fu_1071_p2;
wire   [0:0] or_ln27_fu_1083_p2;
wire   [0:0] grp_fu_490_p2;
wire   [0:0] and_ln27_fu_1089_p2;
wire   [31:0] select_ln27_fu_1095_p3;
wire   [31:0] bitcast_ln27_2_fu_1108_p1;
wire   [7:0] tmp_51_fu_1112_p4;
wire   [22:0] trunc_ln27_2_fu_1122_p1;
wire   [0:0] icmp_ln27_5_fu_1132_p2;
wire   [0:0] icmp_ln27_4_fu_1126_p2;
wire   [0:0] or_ln27_2_fu_1138_p2;
wire   [0:0] grp_fu_495_p2;
wire   [0:0] and_ln27_2_fu_1144_p2;
wire   [31:0] select_ln27_1_fu_1150_p3;
wire   [31:0] bitcast_ln27_1_fu_1165_p1;
wire   [7:0] tmp_49_fu_1169_p4;
wire   [22:0] trunc_ln27_1_fu_1179_p1;
wire   [0:0] icmp_ln27_3_fu_1189_p2;
wire   [0:0] icmp_ln27_2_fu_1183_p2;
wire   [0:0] or_ln27_1_fu_1195_p2;
wire   [0:0] and_ln27_1_fu_1201_p2;
wire   [31:0] select_ln27_6_fu_1207_p3;
wire   [31:0] bitcast_ln27_3_fu_1222_p1;
wire   [7:0] tmp_53_fu_1225_p4;
wire   [22:0] trunc_ln27_3_fu_1235_p1;
wire   [0:0] icmp_ln27_7_fu_1245_p2;
wire   [0:0] icmp_ln27_6_fu_1239_p2;
wire   [0:0] or_ln27_3_fu_1251_p2;
wire   [0:0] grp_fu_500_p2;
wire   [0:0] and_ln27_3_fu_1257_p2;
wire   [31:0] select_ln27_2_fu_1263_p3;
wire   [31:0] bitcast_ln27_5_fu_1276_p1;
wire   [7:0] tmp_57_fu_1280_p4;
wire   [22:0] trunc_ln27_5_fu_1290_p1;
wire   [0:0] icmp_ln27_11_fu_1300_p2;
wire   [0:0] icmp_ln27_10_fu_1294_p2;
wire   [0:0] or_ln27_5_fu_1306_p2;
wire   [0:0] grp_fu_505_p2;
wire   [0:0] and_ln27_5_fu_1312_p2;
wire   [31:0] select_ln27_3_fu_1318_p3;
wire   [31:0] bitcast_ln27_4_fu_1333_p1;
wire   [7:0] tmp_55_fu_1337_p4;
wire   [22:0] trunc_ln27_4_fu_1347_p1;
wire   [0:0] icmp_ln27_9_fu_1357_p2;
wire   [0:0] icmp_ln27_8_fu_1351_p2;
wire   [0:0] or_ln27_4_fu_1363_p2;
wire   [0:0] and_ln27_4_fu_1369_p2;
wire   [31:0] select_ln27_7_fu_1375_p3;
wire   [31:0] bitcast_ln27_6_fu_1390_p1;
wire   [7:0] tmp_59_fu_1393_p4;
wire   [22:0] trunc_ln27_6_fu_1403_p1;
wire   [0:0] icmp_ln27_13_fu_1413_p2;
wire   [0:0] icmp_ln27_12_fu_1407_p2;
wire   [0:0] or_ln27_6_fu_1419_p2;
wire   [0:0] grp_fu_510_p2;
wire   [0:0] and_ln27_6_fu_1425_p2;
wire   [31:0] select_ln27_4_fu_1431_p3;
wire   [31:0] bitcast_ln27_7_fu_1444_p1;
wire   [7:0] tmp_61_fu_1447_p4;
wire   [22:0] trunc_ln27_7_fu_1457_p1;
wire   [0:0] icmp_ln27_15_fu_1467_p2;
wire   [0:0] icmp_ln27_14_fu_1461_p2;
wire   [0:0] or_ln27_7_fu_1473_p2;
wire   [0:0] grp_fu_515_p2;
wire   [0:0] and_ln27_7_fu_1479_p2;
wire   [31:0] select_ln27_5_fu_1485_p3;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state23;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1685;
reg    ap_condition_1688;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
end

convolution1_weigbkb #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weights_conv1_buffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv1_buffer_5_address0),
    .ce0(weights_conv1_buffer_5_ce0),
    .q0(weights_conv1_buffer_5_q0)
);

convolution1_weigcud #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weights_conv1_buffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv1_buffer_4_address0),
    .ce0(weights_conv1_buffer_4_ce0),
    .q0(weights_conv1_buffer_4_q0)
);

convolution1_weigdEe #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weights_conv1_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv1_buffer_3_address0),
    .ce0(weights_conv1_buffer_3_ce0),
    .q0(weights_conv1_buffer_3_q0)
);

convolution1_weigeOg #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weights_conv1_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv1_buffer_2_address0),
    .ce0(weights_conv1_buffer_2_ce0),
    .q0(weights_conv1_buffer_2_q0)
);

convolution1_weigfYi #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weights_conv1_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv1_buffer_1_address0),
    .ce0(weights_conv1_buffer_1_ce0),
    .q0(weights_conv1_buffer_1_q0)
);

convolution1_weigg8j #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weights_conv1_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv1_buffer_address0),
    .ce0(weights_conv1_buffer_ce0),
    .q0(weights_conv1_buffer_q0)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln24_reg_1755),
    .din1(tmp3_reg_1760),
    .ce(1'b1),
    .dout(grp_fu_408_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_412_p0),
    .din1(grp_fu_412_p1),
    .ce(1'b1),
    .dout(grp_fu_412_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter8_phi_ln24_reg_384),
    .din1(tmp_2_reg_1775),
    .ce(1'b1),
    .dout(grp_fu_417_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_422_p0),
    .din1(grp_fu_422_p1),
    .ce(1'b1),
    .dout(grp_fu_422_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter8_phi_ln24_1_reg_396),
    .din1(tmp_4_reg_1790),
    .ce(1'b1),
    .dout(grp_fu_427_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln24_1_reg_1795),
    .din1(tmp_5_reg_1800),
    .ce(1'b1),
    .dout(grp_fu_432_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_reg_1805),
    .din1(32'd3183467653),
    .ce(1'b1),
    .dout(grp_fu_436_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_532),
    .din1(32'd3182162722),
    .ce(1'b1),
    .dout(grp_fu_441_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_2_reg_1811),
    .din1(32'd3176576353),
    .ce(1'b1),
    .dout(grp_fu_446_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_537),
    .din1(32'd3180377085),
    .ce(1'b1),
    .dout(grp_fu_451_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_4_reg_1817),
    .din1(32'd3132021750),
    .ce(1'b1),
    .dout(grp_fu_456_p2)
);

LeNet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fadd_32ns_3hbi_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_5_reg_1823),
    .din1(32'd3180743208),
    .ce(1'b1),
    .dout(grp_fu_461_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv1_buffer_7_reg_1679),
    .din1(input_0_load_reg_1709),
    .ce(1'b1),
    .dout(grp_fu_466_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv1_buffer_9_reg_1684),
    .din1(input_0_load_reg_1709),
    .ce(1'b1),
    .dout(grp_fu_470_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv1_buffer_11_reg_1689),
    .din1(input_0_load_reg_1709),
    .ce(1'b1),
    .dout(grp_fu_474_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv1_buffer_13_reg_1694),
    .din1(input_0_load_reg_1709),
    .ce(1'b1),
    .dout(grp_fu_478_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv1_buffer_15_reg_1699),
    .din1(input_0_load_reg_1709),
    .ce(1'b1),
    .dout(grp_fu_482_p2)
);

LeNet_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LeNet_fmul_32ns_3ibs_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_conv1_buffer_17_reg_1704),
    .din1(input_0_load_reg_1709),
    .ce(1'b1),
    .dout(grp_fu_486_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(biased_reg_1829),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_490_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_542),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_495_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(biased_2_reg_1836),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_500_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_547),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_505_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(biased_4_reg_1843),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_510_p2)
);

LeNet_fcmp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LeNet_fcmp_32ns_3jbC_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(biased_5_reg_1850),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_515_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter20 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((select_ln18_2_reg_1638_pp0_iter6_reg == 1'd1) & (icmp_ln17_reg_1513_pp0_iter6_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter8_phi_ln24_1_reg_396 <= 32'd0;
        end else if (((select_ln18_2_reg_1638_pp0_iter6_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter6_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter8_phi_ln24_1_reg_396 <= output_4_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter8_phi_ln24_1_reg_396 <= ap_phi_reg_pp0_iter7_phi_ln24_1_reg_396;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((select_ln18_2_reg_1638_pp0_iter6_reg == 1'd1) & (icmp_ln17_reg_1513_pp0_iter6_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter8_phi_ln24_reg_384 <= 32'd0;
        end else if (((select_ln18_2_reg_1638_pp0_iter6_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter6_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter8_phi_ln24_reg_384 <= output_2_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter8_phi_ln24_reg_384 <= ap_phi_reg_pp0_iter7_phi_ln24_reg_384;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        h_0_reg_360 <= select_ln25_2_reg_1626;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_0_reg_360 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_618_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten23_reg_327 <= select_ln18_6_fu_756_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten23_reg_327 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_618_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten85_reg_305 <= add_ln17_fu_624_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten85_reg_305 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_618_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_349 <= select_ln19_fu_742_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_349 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1513 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_0_reg_316 <= select_ln17_1_reg_1539;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_0_reg_316 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1513 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        n_0_reg_338 <= select_ln18_1_reg_1577;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_0_reg_338 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_0_reg_372 <= w_reg_1633;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        w_0_reg_372 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        acc_2_reg_1811 <= grp_fu_417_p2;
        acc_2_reg_1811_pp0_iter13_reg <= acc_2_reg_1811;
        acc_2_reg_1811_pp0_iter14_reg <= acc_2_reg_1811_pp0_iter13_reg;
        acc_2_reg_1811_pp0_iter15_reg <= acc_2_reg_1811_pp0_iter14_reg;
        acc_2_reg_1811_pp0_iter16_reg <= acc_2_reg_1811_pp0_iter15_reg;
        acc_2_reg_1811_pp0_iter17_reg <= acc_2_reg_1811_pp0_iter16_reg;
        acc_2_reg_1811_pp0_iter18_reg <= acc_2_reg_1811_pp0_iter17_reg;
        acc_4_reg_1817_pp0_iter13_reg <= acc_4_reg_1817;
        acc_4_reg_1817_pp0_iter14_reg <= acc_4_reg_1817_pp0_iter13_reg;
        acc_4_reg_1817_pp0_iter15_reg <= acc_4_reg_1817_pp0_iter14_reg;
        acc_4_reg_1817_pp0_iter16_reg <= acc_4_reg_1817_pp0_iter15_reg;
        acc_4_reg_1817_pp0_iter17_reg <= acc_4_reg_1817_pp0_iter16_reg;
        acc_4_reg_1817_pp0_iter18_reg <= acc_4_reg_1817_pp0_iter17_reg;
        acc_5_reg_1823_pp0_iter13_reg <= acc_5_reg_1823;
        acc_5_reg_1823_pp0_iter14_reg <= acc_5_reg_1823_pp0_iter13_reg;
        acc_5_reg_1823_pp0_iter15_reg <= acc_5_reg_1823_pp0_iter14_reg;
        acc_5_reg_1823_pp0_iter16_reg <= acc_5_reg_1823_pp0_iter15_reg;
        acc_5_reg_1823_pp0_iter17_reg <= acc_5_reg_1823_pp0_iter16_reg;
        acc_5_reg_1823_pp0_iter18_reg <= acc_5_reg_1823_pp0_iter17_reg;
        acc_reg_1805_pp0_iter13_reg <= acc_reg_1805;
        acc_reg_1805_pp0_iter14_reg <= acc_reg_1805_pp0_iter13_reg;
        acc_reg_1805_pp0_iter15_reg <= acc_reg_1805_pp0_iter14_reg;
        acc_reg_1805_pp0_iter16_reg <= acc_reg_1805_pp0_iter15_reg;
        acc_reg_1805_pp0_iter17_reg <= acc_reg_1805_pp0_iter16_reg;
        acc_reg_1805_pp0_iter18_reg <= acc_reg_1805_pp0_iter17_reg;
        biased_2_reg_1836_pp0_iter18_reg <= biased_2_reg_1836;
        biased_4_reg_1843_pp0_iter18_reg <= biased_4_reg_1843;
        biased_5_reg_1850_pp0_iter18_reg <= biased_5_reg_1850;
        biased_reg_1829_pp0_iter18_reg <= biased_reg_1829;
        icmp_ln17_reg_1513_pp0_iter10_reg <= icmp_ln17_reg_1513_pp0_iter9_reg;
        icmp_ln17_reg_1513_pp0_iter11_reg <= icmp_ln17_reg_1513_pp0_iter10_reg;
        icmp_ln17_reg_1513_pp0_iter12_reg <= icmp_ln17_reg_1513_pp0_iter11_reg;
        icmp_ln17_reg_1513_pp0_iter13_reg <= icmp_ln17_reg_1513_pp0_iter12_reg;
        icmp_ln17_reg_1513_pp0_iter14_reg <= icmp_ln17_reg_1513_pp0_iter13_reg;
        icmp_ln17_reg_1513_pp0_iter15_reg <= icmp_ln17_reg_1513_pp0_iter14_reg;
        icmp_ln17_reg_1513_pp0_iter16_reg <= icmp_ln17_reg_1513_pp0_iter15_reg;
        icmp_ln17_reg_1513_pp0_iter17_reg <= icmp_ln17_reg_1513_pp0_iter16_reg;
        icmp_ln17_reg_1513_pp0_iter18_reg <= icmp_ln17_reg_1513_pp0_iter17_reg;
        icmp_ln17_reg_1513_pp0_iter19_reg <= icmp_ln17_reg_1513_pp0_iter18_reg;
        icmp_ln17_reg_1513_pp0_iter2_reg <= icmp_ln17_reg_1513_pp0_iter1_reg;
        icmp_ln17_reg_1513_pp0_iter3_reg <= icmp_ln17_reg_1513_pp0_iter2_reg;
        icmp_ln17_reg_1513_pp0_iter4_reg <= icmp_ln17_reg_1513_pp0_iter3_reg;
        icmp_ln17_reg_1513_pp0_iter5_reg <= icmp_ln17_reg_1513_pp0_iter4_reg;
        icmp_ln17_reg_1513_pp0_iter6_reg <= icmp_ln17_reg_1513_pp0_iter5_reg;
        icmp_ln17_reg_1513_pp0_iter7_reg <= icmp_ln17_reg_1513_pp0_iter6_reg;
        icmp_ln17_reg_1513_pp0_iter8_reg <= icmp_ln17_reg_1513_pp0_iter7_reg;
        icmp_ln17_reg_1513_pp0_iter9_reg <= icmp_ln17_reg_1513_pp0_iter8_reg;
        output_0_addr_reg_1719_pp0_iter10_reg <= output_0_addr_reg_1719_pp0_iter9_reg;
        output_0_addr_reg_1719_pp0_iter11_reg <= output_0_addr_reg_1719_pp0_iter10_reg;
        output_0_addr_reg_1719_pp0_iter12_reg <= output_0_addr_reg_1719_pp0_iter11_reg;
        output_0_addr_reg_1719_pp0_iter13_reg <= output_0_addr_reg_1719_pp0_iter12_reg;
        output_0_addr_reg_1719_pp0_iter14_reg <= output_0_addr_reg_1719_pp0_iter13_reg;
        output_0_addr_reg_1719_pp0_iter15_reg <= output_0_addr_reg_1719_pp0_iter14_reg;
        output_0_addr_reg_1719_pp0_iter16_reg <= output_0_addr_reg_1719_pp0_iter15_reg;
        output_0_addr_reg_1719_pp0_iter17_reg <= output_0_addr_reg_1719_pp0_iter16_reg;
        output_0_addr_reg_1719_pp0_iter18_reg <= output_0_addr_reg_1719_pp0_iter17_reg;
        output_0_addr_reg_1719_pp0_iter19_reg <= output_0_addr_reg_1719_pp0_iter18_reg;
        output_0_addr_reg_1719_pp0_iter7_reg <= output_0_addr_reg_1719;
        output_0_addr_reg_1719_pp0_iter8_reg <= output_0_addr_reg_1719_pp0_iter7_reg;
        output_0_addr_reg_1719_pp0_iter9_reg <= output_0_addr_reg_1719_pp0_iter8_reg;
        output_1_addr_reg_1725_pp0_iter10_reg <= output_1_addr_reg_1725_pp0_iter9_reg;
        output_1_addr_reg_1725_pp0_iter11_reg <= output_1_addr_reg_1725_pp0_iter10_reg;
        output_1_addr_reg_1725_pp0_iter12_reg <= output_1_addr_reg_1725_pp0_iter11_reg;
        output_1_addr_reg_1725_pp0_iter13_reg <= output_1_addr_reg_1725_pp0_iter12_reg;
        output_1_addr_reg_1725_pp0_iter14_reg <= output_1_addr_reg_1725_pp0_iter13_reg;
        output_1_addr_reg_1725_pp0_iter15_reg <= output_1_addr_reg_1725_pp0_iter14_reg;
        output_1_addr_reg_1725_pp0_iter16_reg <= output_1_addr_reg_1725_pp0_iter15_reg;
        output_1_addr_reg_1725_pp0_iter17_reg <= output_1_addr_reg_1725_pp0_iter16_reg;
        output_1_addr_reg_1725_pp0_iter18_reg <= output_1_addr_reg_1725_pp0_iter17_reg;
        output_1_addr_reg_1725_pp0_iter19_reg <= output_1_addr_reg_1725_pp0_iter18_reg;
        output_1_addr_reg_1725_pp0_iter7_reg <= output_1_addr_reg_1725;
        output_1_addr_reg_1725_pp0_iter8_reg <= output_1_addr_reg_1725_pp0_iter7_reg;
        output_1_addr_reg_1725_pp0_iter9_reg <= output_1_addr_reg_1725_pp0_iter8_reg;
        output_2_addr_reg_1731_pp0_iter10_reg <= output_2_addr_reg_1731_pp0_iter9_reg;
        output_2_addr_reg_1731_pp0_iter11_reg <= output_2_addr_reg_1731_pp0_iter10_reg;
        output_2_addr_reg_1731_pp0_iter12_reg <= output_2_addr_reg_1731_pp0_iter11_reg;
        output_2_addr_reg_1731_pp0_iter13_reg <= output_2_addr_reg_1731_pp0_iter12_reg;
        output_2_addr_reg_1731_pp0_iter14_reg <= output_2_addr_reg_1731_pp0_iter13_reg;
        output_2_addr_reg_1731_pp0_iter15_reg <= output_2_addr_reg_1731_pp0_iter14_reg;
        output_2_addr_reg_1731_pp0_iter16_reg <= output_2_addr_reg_1731_pp0_iter15_reg;
        output_2_addr_reg_1731_pp0_iter17_reg <= output_2_addr_reg_1731_pp0_iter16_reg;
        output_2_addr_reg_1731_pp0_iter18_reg <= output_2_addr_reg_1731_pp0_iter17_reg;
        output_2_addr_reg_1731_pp0_iter19_reg <= output_2_addr_reg_1731_pp0_iter18_reg;
        output_2_addr_reg_1731_pp0_iter7_reg <= output_2_addr_reg_1731;
        output_2_addr_reg_1731_pp0_iter8_reg <= output_2_addr_reg_1731_pp0_iter7_reg;
        output_2_addr_reg_1731_pp0_iter9_reg <= output_2_addr_reg_1731_pp0_iter8_reg;
        output_3_addr_reg_1737_pp0_iter10_reg <= output_3_addr_reg_1737_pp0_iter9_reg;
        output_3_addr_reg_1737_pp0_iter11_reg <= output_3_addr_reg_1737_pp0_iter10_reg;
        output_3_addr_reg_1737_pp0_iter12_reg <= output_3_addr_reg_1737_pp0_iter11_reg;
        output_3_addr_reg_1737_pp0_iter13_reg <= output_3_addr_reg_1737_pp0_iter12_reg;
        output_3_addr_reg_1737_pp0_iter14_reg <= output_3_addr_reg_1737_pp0_iter13_reg;
        output_3_addr_reg_1737_pp0_iter15_reg <= output_3_addr_reg_1737_pp0_iter14_reg;
        output_3_addr_reg_1737_pp0_iter16_reg <= output_3_addr_reg_1737_pp0_iter15_reg;
        output_3_addr_reg_1737_pp0_iter17_reg <= output_3_addr_reg_1737_pp0_iter16_reg;
        output_3_addr_reg_1737_pp0_iter18_reg <= output_3_addr_reg_1737_pp0_iter17_reg;
        output_3_addr_reg_1737_pp0_iter19_reg <= output_3_addr_reg_1737_pp0_iter18_reg;
        output_3_addr_reg_1737_pp0_iter7_reg <= output_3_addr_reg_1737;
        output_3_addr_reg_1737_pp0_iter8_reg <= output_3_addr_reg_1737_pp0_iter7_reg;
        output_3_addr_reg_1737_pp0_iter9_reg <= output_3_addr_reg_1737_pp0_iter8_reg;
        output_4_addr_reg_1743_pp0_iter10_reg <= output_4_addr_reg_1743_pp0_iter9_reg;
        output_4_addr_reg_1743_pp0_iter11_reg <= output_4_addr_reg_1743_pp0_iter10_reg;
        output_4_addr_reg_1743_pp0_iter12_reg <= output_4_addr_reg_1743_pp0_iter11_reg;
        output_4_addr_reg_1743_pp0_iter13_reg <= output_4_addr_reg_1743_pp0_iter12_reg;
        output_4_addr_reg_1743_pp0_iter14_reg <= output_4_addr_reg_1743_pp0_iter13_reg;
        output_4_addr_reg_1743_pp0_iter15_reg <= output_4_addr_reg_1743_pp0_iter14_reg;
        output_4_addr_reg_1743_pp0_iter16_reg <= output_4_addr_reg_1743_pp0_iter15_reg;
        output_4_addr_reg_1743_pp0_iter17_reg <= output_4_addr_reg_1743_pp0_iter16_reg;
        output_4_addr_reg_1743_pp0_iter18_reg <= output_4_addr_reg_1743_pp0_iter17_reg;
        output_4_addr_reg_1743_pp0_iter19_reg <= output_4_addr_reg_1743_pp0_iter18_reg;
        output_4_addr_reg_1743_pp0_iter7_reg <= output_4_addr_reg_1743;
        output_4_addr_reg_1743_pp0_iter8_reg <= output_4_addr_reg_1743_pp0_iter7_reg;
        output_4_addr_reg_1743_pp0_iter9_reg <= output_4_addr_reg_1743_pp0_iter8_reg;
        output_5_addr_reg_1749_pp0_iter10_reg <= output_5_addr_reg_1749_pp0_iter9_reg;
        output_5_addr_reg_1749_pp0_iter11_reg <= output_5_addr_reg_1749_pp0_iter10_reg;
        output_5_addr_reg_1749_pp0_iter12_reg <= output_5_addr_reg_1749_pp0_iter11_reg;
        output_5_addr_reg_1749_pp0_iter13_reg <= output_5_addr_reg_1749_pp0_iter12_reg;
        output_5_addr_reg_1749_pp0_iter14_reg <= output_5_addr_reg_1749_pp0_iter13_reg;
        output_5_addr_reg_1749_pp0_iter15_reg <= output_5_addr_reg_1749_pp0_iter14_reg;
        output_5_addr_reg_1749_pp0_iter16_reg <= output_5_addr_reg_1749_pp0_iter15_reg;
        output_5_addr_reg_1749_pp0_iter17_reg <= output_5_addr_reg_1749_pp0_iter16_reg;
        output_5_addr_reg_1749_pp0_iter18_reg <= output_5_addr_reg_1749_pp0_iter17_reg;
        output_5_addr_reg_1749_pp0_iter19_reg <= output_5_addr_reg_1749_pp0_iter18_reg;
        output_5_addr_reg_1749_pp0_iter7_reg <= output_5_addr_reg_1749;
        output_5_addr_reg_1749_pp0_iter8_reg <= output_5_addr_reg_1749_pp0_iter7_reg;
        output_5_addr_reg_1749_pp0_iter9_reg <= output_5_addr_reg_1749_pp0_iter8_reg;
        reg_532_pp0_iter13_reg <= reg_532;
        reg_532_pp0_iter14_reg <= reg_532_pp0_iter13_reg;
        reg_532_pp0_iter15_reg <= reg_532_pp0_iter14_reg;
        reg_532_pp0_iter16_reg <= reg_532_pp0_iter15_reg;
        reg_532_pp0_iter17_reg <= reg_532_pp0_iter16_reg;
        reg_532_pp0_iter18_reg <= reg_532_pp0_iter17_reg;
        reg_537_pp0_iter13_reg <= reg_537;
        reg_537_pp0_iter14_reg <= reg_537_pp0_iter13_reg;
        reg_537_pp0_iter15_reg <= reg_537_pp0_iter14_reg;
        reg_537_pp0_iter16_reg <= reg_537_pp0_iter15_reg;
        reg_537_pp0_iter17_reg <= reg_537_pp0_iter16_reg;
        reg_537_pp0_iter18_reg <= reg_537_pp0_iter17_reg;
        reg_542_pp0_iter18_reg <= reg_542;
        reg_547_pp0_iter18_reg <= reg_547;
        select_ln18_2_reg_1638_pp0_iter10_reg <= select_ln18_2_reg_1638_pp0_iter9_reg;
        select_ln18_2_reg_1638_pp0_iter11_reg <= select_ln18_2_reg_1638_pp0_iter10_reg;
        select_ln18_2_reg_1638_pp0_iter12_reg <= select_ln18_2_reg_1638_pp0_iter11_reg;
        select_ln18_2_reg_1638_pp0_iter13_reg <= select_ln18_2_reg_1638_pp0_iter12_reg;
        select_ln18_2_reg_1638_pp0_iter14_reg <= select_ln18_2_reg_1638_pp0_iter13_reg;
        select_ln18_2_reg_1638_pp0_iter15_reg <= select_ln18_2_reg_1638_pp0_iter14_reg;
        select_ln18_2_reg_1638_pp0_iter16_reg <= select_ln18_2_reg_1638_pp0_iter15_reg;
        select_ln18_2_reg_1638_pp0_iter17_reg <= select_ln18_2_reg_1638_pp0_iter16_reg;
        select_ln18_2_reg_1638_pp0_iter18_reg <= select_ln18_2_reg_1638_pp0_iter17_reg;
        select_ln18_2_reg_1638_pp0_iter19_reg <= select_ln18_2_reg_1638_pp0_iter18_reg;
        select_ln18_2_reg_1638_pp0_iter3_reg <= select_ln18_2_reg_1638;
        select_ln18_2_reg_1638_pp0_iter4_reg <= select_ln18_2_reg_1638_pp0_iter3_reg;
        select_ln18_2_reg_1638_pp0_iter5_reg <= select_ln18_2_reg_1638_pp0_iter4_reg;
        select_ln18_2_reg_1638_pp0_iter6_reg <= select_ln18_2_reg_1638_pp0_iter5_reg;
        select_ln18_2_reg_1638_pp0_iter7_reg <= select_ln18_2_reg_1638_pp0_iter6_reg;
        select_ln18_2_reg_1638_pp0_iter8_reg <= select_ln18_2_reg_1638_pp0_iter7_reg;
        select_ln18_2_reg_1638_pp0_iter9_reg <= select_ln18_2_reg_1638_pp0_iter8_reg;
        select_ln18_3_reg_1583_pp0_iter10_reg <= select_ln18_3_reg_1583_pp0_iter9_reg;
        select_ln18_3_reg_1583_pp0_iter11_reg <= select_ln18_3_reg_1583_pp0_iter10_reg;
        select_ln18_3_reg_1583_pp0_iter12_reg <= select_ln18_3_reg_1583_pp0_iter11_reg;
        select_ln18_3_reg_1583_pp0_iter13_reg <= select_ln18_3_reg_1583_pp0_iter12_reg;
        select_ln18_3_reg_1583_pp0_iter14_reg <= select_ln18_3_reg_1583_pp0_iter13_reg;
        select_ln18_3_reg_1583_pp0_iter15_reg <= select_ln18_3_reg_1583_pp0_iter14_reg;
        select_ln18_3_reg_1583_pp0_iter16_reg <= select_ln18_3_reg_1583_pp0_iter15_reg;
        select_ln18_3_reg_1583_pp0_iter17_reg <= select_ln18_3_reg_1583_pp0_iter16_reg;
        select_ln18_3_reg_1583_pp0_iter18_reg <= select_ln18_3_reg_1583_pp0_iter17_reg;
        select_ln18_3_reg_1583_pp0_iter2_reg <= select_ln18_3_reg_1583_pp0_iter1_reg;
        select_ln18_3_reg_1583_pp0_iter3_reg <= select_ln18_3_reg_1583_pp0_iter2_reg;
        select_ln18_3_reg_1583_pp0_iter4_reg <= select_ln18_3_reg_1583_pp0_iter3_reg;
        select_ln18_3_reg_1583_pp0_iter5_reg <= select_ln18_3_reg_1583_pp0_iter4_reg;
        select_ln18_3_reg_1583_pp0_iter6_reg <= select_ln18_3_reg_1583_pp0_iter5_reg;
        select_ln18_3_reg_1583_pp0_iter7_reg <= select_ln18_3_reg_1583_pp0_iter6_reg;
        select_ln18_3_reg_1583_pp0_iter8_reg <= select_ln18_3_reg_1583_pp0_iter7_reg;
        select_ln18_3_reg_1583_pp0_iter9_reg <= select_ln18_3_reg_1583_pp0_iter8_reg;
        select_ln25_2_reg_1626_pp0_iter2_reg <= select_ln25_2_reg_1626;
        select_ln25_2_reg_1626_pp0_iter3_reg <= select_ln25_2_reg_1626_pp0_iter2_reg;
        select_ln25_2_reg_1626_pp0_iter4_reg <= select_ln25_2_reg_1626_pp0_iter3_reg;
        select_ln25_2_reg_1626_pp0_iter5_reg <= select_ln25_2_reg_1626_pp0_iter4_reg;
        select_ln25_reg_1615_pp0_iter2_reg <= select_ln25_reg_1615;
        select_ln25_reg_1615_pp0_iter3_reg <= select_ln25_reg_1615_pp0_iter2_reg;
        select_ln25_reg_1615_pp0_iter4_reg <= select_ln25_reg_1615_pp0_iter3_reg;
        select_ln25_reg_1615_pp0_iter5_reg <= select_ln25_reg_1615_pp0_iter4_reg;
        select_ln28_2_reg_1872 <= select_ln28_2_fu_1270_p3;
        tmp_2_reg_1775 <= grp_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1513_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_4_reg_1817 <= grp_fu_427_p2;
        acc_5_reg_1823 <= grp_fu_432_p2;
        acc_reg_1805 <= grp_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln25_2_reg_1508 <= add_ln25_2_fu_600_p2;
        add_ln25_2_reg_1508_pp0_iter1_reg <= add_ln25_2_reg_1508;
        and_ln17_2_reg_1558_pp0_iter1_reg <= and_ln17_2_reg_1558;
        icmp_ln17_reg_1513 <= icmp_ln17_fu_618_p2;
        icmp_ln17_reg_1513_pp0_iter1_reg <= icmp_ln17_reg_1513;
        icmp_ln18_reg_1530_pp0_iter1_reg <= icmp_ln18_reg_1530;
        icmp_ln24_reg_1503 <= icmp_ln24_fu_590_p2;
        icmp_ln24_reg_1503_pp0_iter1_reg <= icmp_ln24_reg_1503;
        m_reg_1522_pp0_iter1_reg <= m_reg_1522;
        n_reg_1566_pp0_iter1_reg <= n_reg_1566;
        select_ln17_1_reg_1539_pp0_iter1_reg <= select_ln17_1_reg_1539;
        select_ln18_1_reg_1577_pp0_iter1_reg <= select_ln18_1_reg_1577;
        select_ln18_3_reg_1583_pp0_iter1_reg <= select_ln18_3_reg_1583;
        zext_ln17_reg_1498[2 : 0] <= zext_ln17_fu_552_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln17_2_reg_1558) & (icmp_ln18_reg_1530 == 1'd0) & (icmp_ln17_reg_1513 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln25_7_reg_1621 <= add_ln25_7_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_618_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln17_2_reg_1558 <= and_ln17_2_fu_690_p2;
        icmp_ln18_reg_1530 <= icmp_ln18_fu_636_p2;
        icmp_ln19_reg_1553 <= icmp_ln19_fu_684_p2;
        m_reg_1522 <= m_fu_630_p2;
        n_reg_1566 <= n_fu_696_p2;
        or_ln18_reg_1572 <= or_ln18_fu_702_p2;
        select_ln18_3_reg_1583 <= select_ln18_3_fu_728_p3;
        xor_ln17_reg_1548 <= xor_ln17_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1513 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln18_reg_1605 <= and_ln18_fu_792_p2;
        h_reg_1610 <= h_fu_798_p2;
        select_ln25_reg_1615 <= select_ln25_fu_814_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_phi_ln24_1_reg_396 <= ap_phi_reg_pp0_iter0_phi_ln24_1_reg_396;
        ap_phi_reg_pp0_iter1_phi_ln24_reg_384 <= ap_phi_reg_pp0_iter0_phi_ln24_reg_384;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_phi_ln24_1_reg_396 <= ap_phi_reg_pp0_iter1_phi_ln24_1_reg_396;
        ap_phi_reg_pp0_iter2_phi_ln24_reg_384 <= ap_phi_reg_pp0_iter1_phi_ln24_reg_384;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_phi_ln24_1_reg_396 <= ap_phi_reg_pp0_iter2_phi_ln24_1_reg_396;
        ap_phi_reg_pp0_iter3_phi_ln24_reg_384 <= ap_phi_reg_pp0_iter2_phi_ln24_reg_384;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_phi_ln24_1_reg_396 <= ap_phi_reg_pp0_iter3_phi_ln24_1_reg_396;
        ap_phi_reg_pp0_iter4_phi_ln24_reg_384 <= ap_phi_reg_pp0_iter3_phi_ln24_reg_384;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_phi_ln24_1_reg_396 <= ap_phi_reg_pp0_iter4_phi_ln24_1_reg_396;
        ap_phi_reg_pp0_iter5_phi_ln24_reg_384 <= ap_phi_reg_pp0_iter4_phi_ln24_reg_384;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_phi_ln24_1_reg_396 <= ap_phi_reg_pp0_iter5_phi_ln24_1_reg_396;
        ap_phi_reg_pp0_iter6_phi_ln24_reg_384 <= ap_phi_reg_pp0_iter5_phi_ln24_reg_384;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_phi_ln24_1_reg_396 <= ap_phi_reg_pp0_iter6_phi_ln24_1_reg_396;
        ap_phi_reg_pp0_iter7_phi_ln24_reg_384 <= ap_phi_reg_pp0_iter6_phi_ln24_reg_384;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln18_3_reg_1583_pp0_iter16_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        biased_2_reg_1836 <= grp_fu_446_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln18_3_reg_1583_pp0_iter16_reg == 1'd1) & (icmp_ln17_reg_1513_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        biased_4_reg_1843 <= grp_fu_456_p2;
        biased_5_reg_1850 <= grp_fu_461_p2;
        biased_reg_1829 <= grp_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1513_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_0_load_reg_1709 <= input_0_q0;
        weights_conv1_buffer_11_reg_1689 <= weights_conv1_buffer_3_q0;
        weights_conv1_buffer_13_reg_1694 <= weights_conv1_buffer_2_q0;
        weights_conv1_buffer_15_reg_1699 <= weights_conv1_buffer_1_q0;
        weights_conv1_buffer_17_reg_1704 <= weights_conv1_buffer_q0;
        weights_conv1_buffer_7_reg_1679 <= weights_conv1_buffer_5_q0;
        weights_conv1_buffer_9_reg_1684 <= weights_conv1_buffer_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1513_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_addr_reg_1719 <= zext_ln24_3_fu_1030_p1;
        output_1_addr_reg_1725 <= zext_ln24_3_fu_1030_p1;
        output_2_addr_reg_1731 <= zext_ln24_3_fu_1030_p1;
        output_3_addr_reg_1737 <= zext_ln24_3_fu_1030_p1;
        output_4_addr_reg_1743 <= zext_ln24_3_fu_1030_p1;
        output_5_addr_reg_1749 <= zext_ln24_3_fu_1030_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln18_2_reg_1638_pp0_iter6_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_1_load_reg_1765 <= output_1_q0;
        output_3_load_reg_1780 <= output_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln18_2_reg_1638_pp0_iter6_reg == 1'd1) & (icmp_ln17_reg_1513_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln18_2_reg_1638_pp0_iter6_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_520 <= grp_fu_470_p2;
        reg_526 <= grp_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((select_ln18_2_reg_1638_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln18_2_reg_1638_pp0_iter11_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_532 <= grp_fu_412_p2;
        reg_537 <= grp_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((select_ln18_3_reg_1583_pp0_iter16_reg == 1'd1) & (select_ln18_2_reg_1638_pp0_iter16_reg == 1'd1) & (ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((select_ln18_3_reg_1583_pp0_iter16_reg == 1'd1) & (ap_enable_reg_pp0_iter17 == 1'b1) & (select_ln18_2_reg_1638_pp0_iter16_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_542 <= grp_fu_441_p2;
        reg_547 <= grp_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_618_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln17_1_reg_1539 <= select_ln17_1_fu_650_p3;
        select_ln18_1_reg_1577 <= select_ln18_1_fu_708_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1513_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln18_2_reg_1638 <= select_ln18_2_fu_918_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1513_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln24_1_reg_1795 <= select_ln24_1_fu_1047_p3;
        select_ln24_reg_1755 <= select_ln24_fu_1040_p3;
        tmp3_reg_1760 <= grp_fu_466_p2;
        tmp_4_reg_1790 <= grp_fu_482_p2;
        tmp_5_reg_1800 <= grp_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1513 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln25_2_reg_1626 <= select_ln25_2_fu_827_p3;
        w_reg_1633 <= w_fu_835_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln18_2_reg_1638_pp0_iter18_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln28_1_reg_1862 <= select_ln28_1_fu_1158_p3;
        select_ln28_3_reg_1877 <= select_ln28_3_fu_1326_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1513_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln28_4_reg_1887 <= select_ln28_4_fu_1438_p3;
        select_ln28_5_reg_1892 <= select_ln28_5_fu_1492_p3;
        select_ln28_reg_1857 <= select_ln28_fu_1102_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln18_2_reg_1638_pp0_iter18_reg == 1'd1) & (icmp_ln17_reg_1513_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln28_6_reg_1867 <= select_ln28_6_fu_1215_p3;
        select_ln28_7_reg_1882 <= select_ln28_7_fu_1383_p3;
    end
end

always @ (*) begin
    if ((icmp_ln17_fu_618_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_h_0_phi_fu_364_p4 = select_ln25_2_reg_1626;
    end else begin
        ap_phi_mux_h_0_phi_fu_364_p4 = h_0_reg_360;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1513 == 1'd0))) begin
        ap_phi_mux_m_0_phi_fu_320_p4 = select_ln17_1_reg_1539;
    end else begin
        ap_phi_mux_m_0_phi_fu_320_p4 = m_0_reg_316;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1513 == 1'd0))) begin
        ap_phi_mux_n_0_phi_fu_342_p4 = select_ln18_1_reg_1577;
    end else begin
        ap_phi_mux_n_0_phi_fu_342_p4 = n_0_reg_338;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_w_0_phi_fu_376_p4 = w_reg_1633;
    end else begin
        ap_phi_mux_w_0_phi_fu_376_p4 = w_0_reg_372;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1685)) begin
        if ((select_ln18_2_reg_1638_pp0_iter7_reg == 1'd1)) begin
            grp_fu_412_p0 = reg_520;
        end else if ((select_ln18_2_reg_1638_pp0_iter7_reg == 1'd0)) begin
            grp_fu_412_p0 = output_1_load_reg_1765;
        end else begin
            grp_fu_412_p0 = 'bx;
        end
    end else begin
        grp_fu_412_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1685)) begin
        if ((select_ln18_2_reg_1638_pp0_iter7_reg == 1'd1)) begin
            grp_fu_412_p1 = 32'd0;
        end else if ((select_ln18_2_reg_1638_pp0_iter7_reg == 1'd0)) begin
            grp_fu_412_p1 = reg_520;
        end else begin
            grp_fu_412_p1 = 'bx;
        end
    end else begin
        grp_fu_412_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1685)) begin
        if ((select_ln18_2_reg_1638_pp0_iter7_reg == 1'd1)) begin
            grp_fu_422_p0 = reg_526;
        end else if ((select_ln18_2_reg_1638_pp0_iter7_reg == 1'd0)) begin
            grp_fu_422_p0 = output_3_load_reg_1780;
        end else begin
            grp_fu_422_p0 = 'bx;
        end
    end else begin
        grp_fu_422_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1685)) begin
        if ((select_ln18_2_reg_1638_pp0_iter7_reg == 1'd1)) begin
            grp_fu_422_p1 = 32'd0;
        end else if ((select_ln18_2_reg_1638_pp0_iter7_reg == 1'd0)) begin
            grp_fu_422_p1 = reg_526;
        end else begin
            grp_fu_422_p1 = 'bx;
        end
    end else begin
        grp_fu_422_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_ce1 = 1'b1;
    end else begin
        output_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_we1 = 1'b1;
    end else begin
        output_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((select_ln18_2_reg_1638_pp0_iter19_reg == 1'd1) & (ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (select_ln18_2_reg_1638_pp0_iter19_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_1_ce1 = 1'b1;
    end else begin
        output_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1688)) begin
        if ((select_ln18_2_reg_1638_pp0_iter19_reg == 1'd1)) begin
            output_1_d1 = select_ln28_6_reg_1867;
        end else if ((select_ln18_2_reg_1638_pp0_iter19_reg == 1'd0)) begin
            output_1_d1 = select_ln28_1_reg_1862;
        end else begin
            output_1_d1 = 'bx;
        end
    end else begin
        output_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((select_ln18_2_reg_1638_pp0_iter19_reg == 1'd1) & (ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (select_ln18_2_reg_1638_pp0_iter19_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_1_we1 = 1'b1;
    end else begin
        output_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_2_ce0 = 1'b1;
    end else begin
        output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_2_ce1 = 1'b1;
    end else begin
        output_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_2_we1 = 1'b1;
    end else begin
        output_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_3_ce0 = 1'b1;
    end else begin
        output_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((select_ln18_2_reg_1638_pp0_iter19_reg == 1'd1) & (ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (select_ln18_2_reg_1638_pp0_iter19_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_3_ce1 = 1'b1;
    end else begin
        output_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1688)) begin
        if ((select_ln18_2_reg_1638_pp0_iter19_reg == 1'd1)) begin
            output_3_d1 = select_ln28_7_reg_1882;
        end else if ((select_ln18_2_reg_1638_pp0_iter19_reg == 1'd0)) begin
            output_3_d1 = select_ln28_3_reg_1877;
        end else begin
            output_3_d1 = 'bx;
        end
    end else begin
        output_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((select_ln18_2_reg_1638_pp0_iter19_reg == 1'd1) & (ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (select_ln18_2_reg_1638_pp0_iter19_reg == 1'd0) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_3_we1 = 1'b1;
    end else begin
        output_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_4_ce0 = 1'b1;
    end else begin
        output_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_4_ce1 = 1'b1;
    end else begin
        output_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_4_we1 = 1'b1;
    end else begin
        output_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_5_ce0 = 1'b1;
    end else begin
        output_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_5_ce1 = 1'b1;
    end else begin
        output_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_5_we1 = 1'b1;
    end else begin
        output_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_conv1_buffer_1_ce0 = 1'b1;
    end else begin
        weights_conv1_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_conv1_buffer_2_ce0 = 1'b1;
    end else begin
        weights_conv1_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_conv1_buffer_3_ce0 = 1'b1;
    end else begin
        weights_conv1_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_conv1_buffer_4_ce0 = 1'b1;
    end else begin
        weights_conv1_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_conv1_buffer_5_ce0 = 1'b1;
    end else begin
        weights_conv1_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_conv1_buffer_ce0 = 1'b1;
    end else begin
        weights_conv1_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln17_fu_618_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter19 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter19 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter20 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln17_fu_618_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln17_fu_624_p2 = (indvar_flatten85_reg_305 + 15'd1);

assign add_ln18_1_fu_750_p2 = (13'd1 + indvar_flatten23_reg_327);

assign add_ln19_1_fu_736_p2 = (10'd1 + indvar_flatten_reg_349);

assign add_ln24_fu_1024_p2 = (sub_ln24_fu_1015_p2 + zext_ln24_2_fu_1021_p1);

assign add_ln25_1_fu_975_p2 = (zext_ln18_fu_905_p1 + select_ln25_reg_1615);

assign add_ln25_2_fu_600_p2 = (add_ln25_fu_572_p2 + zext_ln25_2_fu_596_p1);

assign add_ln25_3_fu_858_p2 = (zext_ln25_3_fu_844_p1 + zext_ln25_4_fu_854_p1);

assign add_ln25_4_fu_878_p2 = (zext_ln17_2_fu_864_p1 + zext_ln25_6_fu_874_p1);

assign add_ln25_5_fu_928_p2 = (add_ln25_4_fu_878_p2 + zext_ln25_5_fu_925_p1);

assign add_ln25_6_fu_947_p2 = (zext_ln17_1_fu_841_p1 + h_reg_1610);

assign add_ln25_7_fu_822_p2 = (zext_ln17_reg_1498 + ap_phi_mux_h_0_phi_fu_364_p4);

assign add_ln25_fu_572_p2 = (zext_ln25_fu_556_p1 + zext_ln25_1_fu_568_p1);

assign and_ln17_1_fu_770_p2 = (xor_ln17_reg_1548 & icmp_ln20_fu_764_p2);

assign and_ln17_2_fu_690_p2 = (xor_ln17_fu_672_p2 & icmp_ln19_fu_684_p2);

assign and_ln17_fu_678_p2 = (xor_ln17_fu_672_p2 & and_ln28_fu_612_p2);

assign and_ln18_fu_792_p2 = (or_ln18_1_fu_787_p2 & and_ln17_1_fu_770_p2);

assign and_ln27_1_fu_1201_p2 = (or_ln27_1_fu_1195_p2 & grp_fu_495_p2);

assign and_ln27_2_fu_1144_p2 = (or_ln27_2_fu_1138_p2 & grp_fu_495_p2);

assign and_ln27_3_fu_1257_p2 = (or_ln27_3_fu_1251_p2 & grp_fu_500_p2);

assign and_ln27_4_fu_1369_p2 = (or_ln27_4_fu_1363_p2 & grp_fu_505_p2);

assign and_ln27_5_fu_1312_p2 = (or_ln27_5_fu_1306_p2 & grp_fu_505_p2);

assign and_ln27_6_fu_1425_p2 = (or_ln27_6_fu_1419_p2 & grp_fu_510_p2);

assign and_ln27_7_fu_1479_p2 = (or_ln27_7_fu_1473_p2 & grp_fu_515_p2);

assign and_ln27_fu_1089_p2 = (or_ln27_fu_1083_p2 & grp_fu_490_p2);

assign and_ln28_1_fu_722_p2 = (select_ln17_2_fu_664_p3 & icmp_ln28_3_fu_716_p2);

assign and_ln28_fu_612_p2 = (icmp_ln28_fu_578_p2 & icmp_ln28_1_fu_606_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1685 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter7_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1688 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln17_reg_1513_pp0_iter19_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_phi_ln24_1_reg_396 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln24_reg_384 = 'bx;

assign bitcast_ln27_1_fu_1165_p1 = reg_542_pp0_iter18_reg;

assign bitcast_ln27_2_fu_1108_p1 = reg_542_pp0_iter18_reg;

assign bitcast_ln27_3_fu_1222_p1 = biased_2_reg_1836_pp0_iter18_reg;

assign bitcast_ln27_4_fu_1333_p1 = reg_547_pp0_iter18_reg;

assign bitcast_ln27_5_fu_1276_p1 = reg_547_pp0_iter18_reg;

assign bitcast_ln27_6_fu_1390_p1 = biased_4_reg_1843_pp0_iter18_reg;

assign bitcast_ln27_7_fu_1444_p1 = biased_5_reg_1850_pp0_iter18_reg;

assign bitcast_ln27_fu_1054_p1 = biased_reg_1829_pp0_iter18_reg;

assign h_fu_798_p2 = (5'd1 + select_ln18_fu_775_p3);

assign icmp_ln17_fu_618_p2 = ((indvar_flatten85_reg_305 == 15'd19600) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_636_p2 = ((indvar_flatten23_reg_327 == 13'd3920) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_684_p2 = ((indvar_flatten_reg_349 == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_764_p2 = ((ap_phi_mux_w_0_phi_fu_376_p4 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln24_1_fu_884_p2 = ((m_reg_1522_pp0_iter1_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_2_fu_912_p2 = ((or_ln24_1_fu_908_p2 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_590_p2 = ((or_ln24_fu_584_p2 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_10_fu_1294_p2 = ((tmp_57_fu_1280_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_11_fu_1300_p2 = ((trunc_ln27_5_fu_1290_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_12_fu_1407_p2 = ((tmp_59_fu_1393_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_13_fu_1413_p2 = ((trunc_ln27_6_fu_1403_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_14_fu_1461_p2 = ((tmp_61_fu_1447_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_15_fu_1467_p2 = ((trunc_ln27_7_fu_1457_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_1_fu_1077_p2 = ((trunc_ln27_fu_1067_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_2_fu_1183_p2 = ((tmp_49_fu_1169_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_3_fu_1189_p2 = ((trunc_ln27_1_fu_1179_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_4_fu_1126_p2 = ((tmp_51_fu_1112_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_5_fu_1132_p2 = ((trunc_ln27_2_fu_1122_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_6_fu_1239_p2 = ((tmp_53_fu_1225_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_7_fu_1245_p2 = ((trunc_ln27_3_fu_1235_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_8_fu_1351_p2 = ((tmp_55_fu_1337_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_9_fu_1357_p2 = ((trunc_ln27_4_fu_1347_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_1071_p2 = ((tmp_s_fu_1057_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_1_fu_606_p2 = ((ap_phi_mux_n_0_phi_fu_342_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln28_2_fu_658_p2 = ((m_fu_630_p2 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln28_3_fu_716_p2 = ((n_fu_696_p2 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_578_p2 = ((ap_phi_mux_m_0_phi_fu_320_p4 == 3'd4) ? 1'b1 : 1'b0);

assign input_0_address0 = zext_ln25_8_fu_988_p1;

assign m_fu_630_p2 = (3'd1 + ap_phi_mux_m_0_phi_fu_320_p4);

assign n_fu_696_p2 = (3'd1 + select_ln17_fu_642_p3);

assign or_ln18_1_fu_787_p2 = (xor_ln18_fu_782_p2 | icmp_ln18_reg_1530);

assign or_ln18_fu_702_p2 = (icmp_ln18_fu_636_p2 | and_ln17_2_fu_690_p2);

assign or_ln24_1_fu_908_p2 = (select_ln17_1_reg_1539_pp0_iter1_reg | n_reg_1566_pp0_iter1_reg);

assign or_ln24_fu_584_p2 = (ap_phi_mux_n_0_phi_fu_342_p4 | ap_phi_mux_m_0_phi_fu_320_p4);

assign or_ln25_1_fu_809_p2 = (or_ln25_fu_804_p2 | icmp_ln18_reg_1530);

assign or_ln25_fu_804_p2 = (and_ln18_fu_792_p2 | and_ln17_2_reg_1558);

assign or_ln27_1_fu_1195_p2 = (icmp_ln27_3_fu_1189_p2 | icmp_ln27_2_fu_1183_p2);

assign or_ln27_2_fu_1138_p2 = (icmp_ln27_5_fu_1132_p2 | icmp_ln27_4_fu_1126_p2);

assign or_ln27_3_fu_1251_p2 = (icmp_ln27_7_fu_1245_p2 | icmp_ln27_6_fu_1239_p2);

assign or_ln27_4_fu_1363_p2 = (icmp_ln27_9_fu_1357_p2 | icmp_ln27_8_fu_1351_p2);

assign or_ln27_5_fu_1306_p2 = (icmp_ln27_11_fu_1300_p2 | icmp_ln27_10_fu_1294_p2);

assign or_ln27_6_fu_1419_p2 = (icmp_ln27_13_fu_1413_p2 | icmp_ln27_12_fu_1407_p2);

assign or_ln27_7_fu_1473_p2 = (icmp_ln27_15_fu_1467_p2 | icmp_ln27_14_fu_1461_p2);

assign or_ln27_fu_1083_p2 = (icmp_ln27_fu_1071_p2 | icmp_ln27_1_fu_1077_p2);

assign output_0_address0 = zext_ln24_3_fu_1030_p1;

assign output_0_address1 = output_0_addr_reg_1719_pp0_iter19_reg;

assign output_0_d1 = select_ln28_reg_1857;

assign output_1_address0 = zext_ln24_3_fu_1030_p1;

assign output_1_address1 = output_1_addr_reg_1725_pp0_iter19_reg;

assign output_2_address0 = zext_ln24_3_fu_1030_p1;

assign output_2_address1 = output_2_addr_reg_1731_pp0_iter19_reg;

assign output_2_d1 = select_ln28_2_reg_1872;

assign output_3_address0 = zext_ln24_3_fu_1030_p1;

assign output_3_address1 = output_3_addr_reg_1737_pp0_iter19_reg;

assign output_4_address0 = zext_ln24_3_fu_1030_p1;

assign output_4_address1 = output_4_addr_reg_1743_pp0_iter19_reg;

assign output_4_d1 = select_ln28_4_reg_1887;

assign output_5_address0 = zext_ln24_3_fu_1030_p1;

assign output_5_address1 = output_5_addr_reg_1749_pp0_iter19_reg;

assign output_5_d1 = select_ln28_5_reg_1892;

assign select_ln17_1_fu_650_p3 = ((icmp_ln18_fu_636_p2[0:0] === 1'b1) ? m_fu_630_p2 : ap_phi_mux_m_0_phi_fu_320_p4);

assign select_ln17_2_fu_664_p3 = ((icmp_ln18_fu_636_p2[0:0] === 1'b1) ? icmp_ln28_2_fu_658_p2 : icmp_ln28_fu_578_p2);

assign select_ln17_3_fu_889_p3 = ((icmp_ln18_reg_1530_pp0_iter1_reg[0:0] === 1'b1) ? icmp_ln24_1_fu_884_p2 : icmp_ln24_reg_1503_pp0_iter1_reg);

assign select_ln17_4_fu_895_p3 = ((icmp_ln18_reg_1530_pp0_iter1_reg[0:0] === 1'b1) ? add_ln25_3_fu_858_p2 : add_ln25_2_reg_1508_pp0_iter1_reg);

assign select_ln17_5_fu_955_p3 = ((icmp_ln18_reg_1530_pp0_iter1_reg[0:0] === 1'b1) ? zext_ln25_7_fu_952_p1 : add_ln25_7_reg_1621);

assign select_ln17_fu_642_p3 = ((icmp_ln18_fu_636_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_n_0_phi_fu_342_p4);

assign select_ln18_1_fu_708_p3 = ((and_ln17_2_fu_690_p2[0:0] === 1'b1) ? n_fu_696_p2 : select_ln17_fu_642_p3);

assign select_ln18_2_fu_918_p3 = ((and_ln17_2_reg_1558_pp0_iter1_reg[0:0] === 1'b1) ? icmp_ln24_2_fu_912_p2 : select_ln17_3_fu_889_p3);

assign select_ln18_3_fu_728_p3 = ((and_ln17_2_fu_690_p2[0:0] === 1'b1) ? and_ln28_1_fu_722_p2 : and_ln17_fu_678_p2);

assign select_ln18_4_fu_934_p3 = ((and_ln17_2_reg_1558_pp0_iter1_reg[0:0] === 1'b1) ? add_ln25_5_fu_928_p2 : zext_ln17_3_fu_901_p1);

assign select_ln18_5_fu_961_p3 = ((and_ln17_2_reg_1558_pp0_iter1_reg[0:0] === 1'b1) ? zext_ln17_1_fu_841_p1 : select_ln17_5_fu_955_p3);

assign select_ln18_6_fu_756_p3 = ((icmp_ln18_fu_636_p2[0:0] === 1'b1) ? 13'd1 : add_ln18_1_fu_750_p2);

assign select_ln18_fu_775_p3 = ((or_ln18_reg_1572[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_h_0_phi_fu_364_p4);

assign select_ln19_fu_742_p3 = ((or_ln18_fu_702_p2[0:0] === 1'b1) ? 10'd1 : add_ln19_1_fu_736_p2);

assign select_ln24_1_fu_1047_p3 = ((select_ln18_2_reg_1638_pp0_iter6_reg[0:0] === 1'b1) ? 32'd0 : output_5_q0);

assign select_ln24_fu_1040_p3 = ((select_ln18_2_reg_1638_pp0_iter6_reg[0:0] === 1'b1) ? 32'd0 : output_0_q0);

assign select_ln25_1_fu_968_p3 = ((and_ln18_reg_1605[0:0] === 1'b1) ? add_ln25_6_fu_947_p2 : select_ln18_5_fu_961_p3);

assign select_ln25_2_fu_827_p3 = ((and_ln18_fu_792_p2[0:0] === 1'b1) ? h_fu_798_p2 : select_ln18_fu_775_p3);

assign select_ln25_fu_814_p3 = ((or_ln25_1_fu_809_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_w_0_phi_fu_376_p4);

assign select_ln27_1_fu_1150_p3 = ((and_ln27_2_fu_1144_p2[0:0] === 1'b1) ? reg_542_pp0_iter18_reg : 32'd0);

assign select_ln27_2_fu_1263_p3 = ((and_ln27_3_fu_1257_p2[0:0] === 1'b1) ? biased_2_reg_1836_pp0_iter18_reg : 32'd0);

assign select_ln27_3_fu_1318_p3 = ((and_ln27_5_fu_1312_p2[0:0] === 1'b1) ? reg_547_pp0_iter18_reg : 32'd0);

assign select_ln27_4_fu_1431_p3 = ((and_ln27_6_fu_1425_p2[0:0] === 1'b1) ? biased_4_reg_1843_pp0_iter18_reg : 32'd0);

assign select_ln27_5_fu_1485_p3 = ((and_ln27_7_fu_1479_p2[0:0] === 1'b1) ? biased_5_reg_1850_pp0_iter18_reg : 32'd0);

assign select_ln27_6_fu_1207_p3 = ((and_ln27_1_fu_1201_p2[0:0] === 1'b1) ? reg_542_pp0_iter18_reg : 32'd0);

assign select_ln27_7_fu_1375_p3 = ((and_ln27_4_fu_1369_p2[0:0] === 1'b1) ? reg_547_pp0_iter18_reg : 32'd0);

assign select_ln27_fu_1095_p3 = ((and_ln27_fu_1089_p2[0:0] === 1'b1) ? biased_reg_1829_pp0_iter18_reg : 32'd0);

assign select_ln28_1_fu_1158_p3 = ((select_ln18_3_reg_1583_pp0_iter18_reg[0:0] === 1'b1) ? select_ln27_1_fu_1150_p3 : reg_532_pp0_iter18_reg);

assign select_ln28_2_fu_1270_p3 = ((select_ln18_3_reg_1583_pp0_iter18_reg[0:0] === 1'b1) ? select_ln27_2_fu_1263_p3 : acc_2_reg_1811_pp0_iter18_reg);

assign select_ln28_3_fu_1326_p3 = ((select_ln18_3_reg_1583_pp0_iter18_reg[0:0] === 1'b1) ? select_ln27_3_fu_1318_p3 : reg_537_pp0_iter18_reg);

assign select_ln28_4_fu_1438_p3 = ((select_ln18_3_reg_1583_pp0_iter18_reg[0:0] === 1'b1) ? select_ln27_4_fu_1431_p3 : acc_4_reg_1817_pp0_iter18_reg);

assign select_ln28_5_fu_1492_p3 = ((select_ln18_3_reg_1583_pp0_iter18_reg[0:0] === 1'b1) ? select_ln27_5_fu_1485_p3 : acc_5_reg_1823_pp0_iter18_reg);

assign select_ln28_6_fu_1215_p3 = ((select_ln18_3_reg_1583_pp0_iter18_reg[0:0] === 1'b1) ? select_ln27_6_fu_1207_p3 : reg_532_pp0_iter18_reg);

assign select_ln28_7_fu_1383_p3 = ((select_ln18_3_reg_1583_pp0_iter18_reg[0:0] === 1'b1) ? select_ln27_7_fu_1375_p3 : reg_537_pp0_iter18_reg);

assign select_ln28_fu_1102_p3 = ((select_ln18_3_reg_1583_pp0_iter18_reg[0:0] === 1'b1) ? select_ln27_fu_1095_p3 : acc_reg_1805_pp0_iter18_reg);

assign sub_ln24_fu_1015_p2 = (zext_ln24_fu_1000_p1 - zext_ln24_1_fu_1011_p1);

assign tmp_49_fu_1169_p4 = {{bitcast_ln27_1_fu_1165_p1[30:23]}};

assign tmp_51_fu_1112_p4 = {{bitcast_ln27_2_fu_1108_p1[30:23]}};

assign tmp_53_fu_1225_p4 = {{bitcast_ln27_3_fu_1222_p1[30:23]}};

assign tmp_55_fu_1337_p4 = {{bitcast_ln27_4_fu_1333_p1[30:23]}};

assign tmp_57_fu_1280_p4 = {{bitcast_ln27_5_fu_1276_p1[30:23]}};

assign tmp_59_fu_1393_p4 = {{bitcast_ln27_6_fu_1390_p1[30:23]}};

assign tmp_61_fu_1447_p4 = {{bitcast_ln27_7_fu_1444_p1[30:23]}};

assign tmp_63_fu_560_p3 = {{ap_phi_mux_m_0_phi_fu_320_p4}, {2'd0}};

assign tmp_64_fu_847_p3 = {{m_reg_1522_pp0_iter1_reg}, {2'd0}};

assign tmp_65_fu_867_p3 = {{select_ln17_1_reg_1539_pp0_iter1_reg}, {2'd0}};

assign tmp_66_fu_993_p3 = {{select_ln25_2_reg_1626_pp0_iter5_reg}, {5'd0}};

assign tmp_67_fu_1004_p3 = {{select_ln25_2_reg_1626_pp0_iter5_reg}, {2'd0}};

assign tmp_68_fu_980_p3 = {{select_ln25_1_fu_968_p3}, {add_ln25_1_fu_975_p2}};

assign tmp_s_fu_1057_p4 = {{bitcast_ln27_fu_1054_p1[30:23]}};

assign trunc_ln27_1_fu_1179_p1 = bitcast_ln27_1_fu_1165_p1[22:0];

assign trunc_ln27_2_fu_1122_p1 = bitcast_ln27_2_fu_1108_p1[22:0];

assign trunc_ln27_3_fu_1235_p1 = bitcast_ln27_3_fu_1222_p1[22:0];

assign trunc_ln27_4_fu_1347_p1 = bitcast_ln27_4_fu_1333_p1[22:0];

assign trunc_ln27_5_fu_1290_p1 = bitcast_ln27_5_fu_1276_p1[22:0];

assign trunc_ln27_6_fu_1403_p1 = bitcast_ln27_6_fu_1390_p1[22:0];

assign trunc_ln27_7_fu_1457_p1 = bitcast_ln27_7_fu_1444_p1[22:0];

assign trunc_ln27_fu_1067_p1 = bitcast_ln27_fu_1054_p1[22:0];

assign w_fu_835_p2 = (5'd1 + select_ln25_fu_814_p3);

assign weights_conv1_buffer_1_address0 = select_ln18_4_fu_934_p3;

assign weights_conv1_buffer_2_address0 = select_ln18_4_fu_934_p3;

assign weights_conv1_buffer_3_address0 = select_ln18_4_fu_934_p3;

assign weights_conv1_buffer_4_address0 = select_ln18_4_fu_934_p3;

assign weights_conv1_buffer_5_address0 = select_ln18_4_fu_934_p3;

assign weights_conv1_buffer_address0 = select_ln18_4_fu_934_p3;

assign xor_ln17_fu_672_p2 = (icmp_ln18_fu_636_p2 ^ 1'd1);

assign xor_ln18_fu_782_p2 = (icmp_ln19_reg_1553 ^ 1'd1);

assign zext_ln17_1_fu_841_p1 = select_ln17_1_reg_1539_pp0_iter1_reg;

assign zext_ln17_2_fu_864_p1 = select_ln17_1_reg_1539_pp0_iter1_reg;

assign zext_ln17_3_fu_901_p1 = select_ln17_4_fu_895_p3;

assign zext_ln17_fu_552_p1 = ap_phi_mux_m_0_phi_fu_320_p4;

assign zext_ln18_fu_905_p1 = select_ln18_1_reg_1577_pp0_iter1_reg;

assign zext_ln24_1_fu_1011_p1 = tmp_67_fu_1004_p3;

assign zext_ln24_2_fu_1021_p1 = select_ln25_reg_1615_pp0_iter5_reg;

assign zext_ln24_3_fu_1030_p1 = add_ln24_fu_1024_p2;

assign zext_ln24_fu_1000_p1 = tmp_66_fu_993_p3;

assign zext_ln25_1_fu_568_p1 = tmp_63_fu_560_p3;

assign zext_ln25_2_fu_596_p1 = ap_phi_mux_n_0_phi_fu_342_p4;

assign zext_ln25_3_fu_844_p1 = m_reg_1522_pp0_iter1_reg;

assign zext_ln25_4_fu_854_p1 = tmp_64_fu_847_p3;

assign zext_ln25_5_fu_925_p1 = n_reg_1566_pp0_iter1_reg;

assign zext_ln25_6_fu_874_p1 = tmp_65_fu_867_p3;

assign zext_ln25_7_fu_952_p1 = m_reg_1522_pp0_iter1_reg;

assign zext_ln25_8_fu_988_p1 = tmp_68_fu_980_p3;

assign zext_ln25_fu_556_p1 = ap_phi_mux_m_0_phi_fu_320_p4;

always @ (posedge ap_clk) begin
    zext_ln17_reg_1498[4:3] <= 2'b00;
end

endmodule //convolution1
